{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07345ca4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"list-item\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"draggable\"], {\n    list: $setup.myArray,\n    onEnd: _ctx.endDrag,\n    \"item-key\": \"id\"\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString(element.id) + \" \" + _toDisplayString(element.name) + \" \", 1\n    /* TEXT */\n    ), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(element)\n    }, \"x\", 8\n    /* PROPS */\n    , _hoisted_2)])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\", \"onEnd\"]);\n}","map":{"version":3,"mappings":";;;;;EAGWA,KAAK,EAAC;;;;uBAFfC,aAOYC,mBAPZ,EAOY;IAPAC,IAAI,EAAED,cAON;IAPgBE,KAAG,EAAEC,YAOrB;IAP8B,YAAS;EAOvC,CAPZ;IACaC,IAAI,WACb,CAGM;MAJWC;IAIX,CAHN,KADwB,CACxBC,oBAGM,KAHN,cAGM,mCAFDD,OAAO,CAACE,MAAK,MAACC,iBAAGH,OAAO,CAACI,IAAX,IAAkB,KACnC;IAAA;KACI,EADJH,oBAA+C,QAA/C,EAA+C;MAAtCI,OAAK,YAAEV,kBAAWK,OAAX;IAA+B,CAA/C,EAAqC,GAArC,EAAsC;IAAA;IAAtC,EAAsCM,UAAtC,CACI,CAHN,CADwB,CAAX;;;;GADjB;;EAAA","names":["class","_createBlock","$setup","list","onEnd","_ctx","item","element","_createElementVNode","id","_toDisplayString","name","onClick","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate2.vue"],"sourcesContent":["<template>\r\n  <draggable :list=\"myArray\" @end=\"endDrag\" item-key=\"id\">\r\n    <template #item=\"{ element }\">\r\n      <div class=\"list-item\">\r\n        {{ element.id }} {{ element.name }}\r\n        <button @click=\"deleteTask(element)\">x</button>\r\n      </div>\r\n    </template>\r\n  </draggable>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nconst myArray = reactive([\r\n  { name: \"AAA\", id: 1 },\r\n  { name: \"BBB\", id: 2 },\r\n  { name: \"CCC\", id: 3 },\r\n  { name: \"DDD\", id: 4 },\r\n]);\r\n\r\nfunction deleteTask(element) {\r\n  console.log(element.id);\r\n  console.log(element.name);\r\n  myArray.value.splice(element.id, 1);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.list-item {\r\n  background-color: blanchedalmond;\r\n  padding: 2px 2px;\r\n  margin: 2px 2px;\r\n  width: 50%;\r\n  position: relative;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}