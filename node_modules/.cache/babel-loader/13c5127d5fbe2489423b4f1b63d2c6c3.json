{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, unref, onMounted, onUpdated, onBeforeMount } from \"vue\";\nimport draggable from \"vuedraggable\";\nimport authHeader from \"@/components/services/auth-header\";\nimport axios from \"axios\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nexport default {\n  __name: 'TasksTemplate',\n\n  setup(__props, {\n    expose\n  }) {\n    expose(); // eslint-disable-next-line\n\n    const date = ref(new Date().toISOString().slice(0, 10));\n    const invalidInput = ref(false);\n    const enteredText = ref(\"\");\n    const tasks = ref([]); // const dateCal = ref(new Date());\n\n    const editedText = ref(\"\");\n    console.log(\"which first\");\n    const tasksList = reactive([{\n      date: \"2022-10-12\",\n      tasks: [{\n        text: \"BBB\",\n        priority: 1,\n        completed: false,\n        editable: false,\n        task_id: \"X12\"\n      }, {\n        text: \"CCC\",\n        priority: 2,\n        completed: true,\n        editable: false,\n        task_id: \"X123\"\n      }, {\n        text: \"CCC\",\n        priority: 3,\n        completed: false,\n        editable: false,\n        task_id: \"X1124\"\n      }, {\n        text: \"DDD\",\n        priority: 4,\n        completed: true,\n        editable: false,\n        task_id: \"X1sd\"\n      }, {\n        text: \"AAA\",\n        priority: 6,\n        completed: false,\n        editable: false,\n        task_id: \"X1sda\"\n      }]\n    }, {\n      date: \"2022-10-13\",\n      tasks: [{\n        text: \"Uno\",\n        priority: 1,\n        completed: false,\n        editable: false,\n        task_id: \"X12\"\n      }, {\n        text: \"Dos\",\n        priority: 2,\n        completed: true,\n        editable: false,\n        task_id: \"X123\"\n      }, {\n        text: \"Tres\",\n        priority: 3,\n        completed: false,\n        editable: false,\n        task_id: \"X1124\"\n      }, {\n        text: \"Quatro\",\n        priority: 4,\n        completed: true,\n        editable: false,\n        task_id: \"X1sd\"\n      }, {\n        text: \"Cinco\",\n        priority: 6,\n        completed: true,\n        editable: false,\n        task_id: \"X1sda\"\n      }]\n    }]); // Getting array for specific date\n\n    const tasksSlice = ref([]);\n    const display = ref(false);\n\n    if (tasksList.filter(arr => arr[\"date\"] === \"2022-10-12\").length === 0) {\n      // eslint-disable-next-line\n      display.value = false;\n    } else {\n      tasksSlice.value = tasksList.filter(arr => arr[\"date\"] === \"2022-10-12\")[0];\n      display.value = true;\n    } // Count the number of tasks\n\n\n    const notCompletedTasks = ref(null);\n    const completedTasks = ref(null);\n    const totalTasks = ref(null);\n\n    function countTasks() {\n      if (\"date\" in tasksSlice.value) {\n        totalTasks.value = tasksSlice.value.tasks.length;\n        notCompletedTasks.value = tasksSlice.value.tasks.filter(ob => !ob.completed).length;\n        completedTasks.value = totalTasks.value - notCompletedTasks.value;\n      } else {\n        totalTasks.value = null;\n        completedTasks.value = null;\n        notCompletedTasks.value = null;\n      }\n    }\n\n    if (tasksSlice.value.length > 0) {\n      notCompletedTasks.value = tasksSlice.value.tasks.filter(ob => !ob.completed).length;\n    }\n\n    async function loadTasks() {\n      try {\n        const response = await axios.get(\"http://localhost:8000/task\", {\n          headers: authHeader()\n        }); // working with response\n\n        console.log(\"response\", response.data);\n        const result = response.data;\n        const example = [{\n          date: \"2022-10-12\",\n          tasks: [{\n            text: \"BBB\",\n            priority: 1,\n            completed: false,\n            editable: false,\n            task_id: \"X12\"\n          }, {\n            text: \"CCC\",\n            priority: 2,\n            completed: true,\n            editable: false,\n            task_id: \"X123\"\n          }, {\n            text: \"CCC\",\n            priority: 3,\n            completed: false,\n            editable: false,\n            task_id: \"X1124\"\n          }, {\n            text: \"DDD\",\n            priority: 4,\n            completed: true,\n            editable: false,\n            task_id: \"X1sd\"\n          }, {\n            text: \"AAA\",\n            priority: 6,\n            completed: false,\n            editable: false,\n            task_id: \"X1sda\"\n          }]\n        }, {\n          date: \"2022-10-13\",\n          tasks: [{\n            text: \"Uno\",\n            priority: 1,\n            completed: false,\n            editable: false,\n            task_id: \"X12\"\n          }, {\n            text: \"Dos\",\n            priority: 2,\n            completed: true,\n            editable: false,\n            task_id: \"X123\"\n          }, {\n            text: \"Tres\",\n            priority: 3,\n            completed: false,\n            editable: false,\n            task_id: \"X1124\"\n          }, {\n            text: \"Quatro\",\n            priority: 4,\n            completed: true,\n            editable: false,\n            task_id: \"X1sd\"\n          }, {\n            text: \"Cinco\",\n            priority: 6,\n            completed: true,\n            editable: false,\n            task_id: \"X1sda\"\n          }]\n        }];\n        console.log(\"example\", example);\n        const newArray = reactive([]);\n        result.forEach(element => {\n          if (!newArray.filter(arr => arr[\"date\"] === element.date).length > 0) {\n            newArray.push({\n              date: element.date,\n              tasks: [{ ...element,\n                editable: false\n              }]\n            });\n          } else {\n            const idx = newArray.findIndex(arr => arr.date === element.date);\n            newArray[idx].tasks.push({ ...element,\n              editable: false\n            });\n          }\n        });\n        console.log(newArray);\n        console.log(tasksList);\n        tasks.value = newArray[0];\n        console.log(tasks);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    onBeforeMount(() => {\n      console.log(\"seriously\");\n    });\n    onMounted(() => {\n      countTasks();\n      loadTasks(); //Load tasks from backend\n      // console.log(\"tasks\", tasks.value);\n      // for (const [key, item] of Object.entries(tasks)) {\n      //   console.log(\"key\", key);\n      //   console.log(\"item\", item);\n      //   if (key === \"_rawValue\") {\n      //     console.log(\"YES!\");\n      //     for (const [k, i] of Object.entries(item)) {\n      //       console.log(\"here\", k, i);\n      //     }\n      //   }\n      // }\n    });\n    onUpdated(() => {\n      countTasks();\n    }); // custom function to return date in DD month-long YYYY format\n\n    function formatDate(dateInput) {\n      return dateInput.toLocaleDateString(\"en-US\", {\n        month: \"long\",\n        year: \"numeric\",\n        day: \"numeric\"\n      });\n    } // clear invalid input - to be used at blur\n\n\n    function clearInvalidInput() {\n      invalidInput.value = false;\n    } // WORKING WITH CALENDAR\n\n\n    const handleDate = modelData => {\n      date.value = modelData.toISOString().slice(0, 10); // getting new slice based on picked date\n\n      tasksSlice.value = tasksList.filter(arr => arr[\"date\"] === date.value)[0];\n      display.value = true; // creating empty array if there no tasks on picked date\n\n      if (!tasksSlice.value) {\n        tasksSlice.value = ref([]);\n        display.value = false;\n      }\n    }; // listen to input inside edited paragraph text\n\n\n    function editText(event) {\n      editedText.value = event.target.innerText;\n    } // Apply above changes at blur\n\n\n    function applyEditChanges(element) {\n      if (editedText.value) {\n        tasksSlice.value.tasks.forEach((el, idx) => {\n          if (element.task_id === el.task_id) {\n            tasksSlice.value.tasks[idx].text = editedText.value;\n          }\n        });\n      }\n    } // make SELECTED paragraph tag editable\n\n\n    function makeEditable(element) {\n      tasksSlice.value.tasks.forEach((el, idx) => {\n        if (element.task_id == el.task_id) {\n          tasksSlice.value.tasks[idx].editable = !tasksSlice.value.tasks[idx].editable;\n        }\n      });\n    }\n\n    function addTask() {\n      if (enteredText.value !== \"\") {\n        // add date if empty object\n        if (!(\"date\" in tasksSlice.value)) {\n          tasksSlice.value = {\n            date: date.value,\n            tasks: []\n          };\n        }\n\n        tasksSlice.value.tasks.push({\n          text: enteredText.value,\n          priority: tasksSlice.value.tasks.length + 1,\n          checked: false,\n          completed: false,\n          task_id: (Math.random() + 1).toString(36).substring(7)\n        });\n        enteredText.value = \"\";\n        display.value = true;\n        tasksList.push(tasksSlice.value);\n      } else {\n        invalidInput.value = true;\n      }\n    } // update tasks index/id on change - on drag\n\n\n    function updateList() {\n      tasksSlice.value.tasks.forEach((element, index) => {\n        tasksSlice.value.tasks[index].priority = index + 1;\n      });\n    } // Checking or unchecking specific object in an array\n\n\n    function checkUncheck(element) {\n      let index = tasksSlice.value.tasks.indexOf(element);\n      tasksSlice.value.tasks[index].completed = !tasksSlice.value.tasks[index].completed;\n      countTasks();\n    } // Deleting specific task\n\n\n    function deleteTask(element) {\n      let index = tasksSlice.value.tasks.indexOf(element);\n      tasksSlice.value.tasks.splice(index, 1);\n\n      if (tasksSlice.value.tasks.length === 0) {\n        display.value = false;\n      }\n\n      updateList();\n      countTasks();\n    }\n\n    const __returned__ = {\n      date,\n      invalidInput,\n      enteredText,\n      tasks,\n      editedText,\n      tasksList,\n      tasksSlice,\n      display,\n      notCompletedTasks,\n      completedTasks,\n      totalTasks,\n      countTasks,\n      loadTasks,\n      formatDate,\n      clearInvalidInput,\n      handleDate,\n      editText,\n      applyEditChanges,\n      makeEditable,\n      addTask,\n      updateList,\n      checkUncheck,\n      deleteTask,\n      reactive,\n      ref,\n      unref,\n      onMounted,\n      onUpdated,\n      onBeforeMount,\n      draggable,\n      authHeader,\n      axios,\n      Datepicker\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","unref","onMounted","onUpdated","onBeforeMount","draggable","authHeader","axios","Datepicker","date","Date","toISOString","slice","invalidInput","enteredText","tasks","editedText","console","log","tasksList","text","priority","completed","editable","task_id","tasksSlice","display","filter","arr","length","value","notCompletedTasks","completedTasks","totalTasks","countTasks","ob","loadTasks","response","get","headers","data","result","example","newArray","forEach","element","push","idx","findIndex","err","formatDate","dateInput","toLocaleDateString","month","year","day","clearInvalidInput","handleDate","modelData","editText","event","target","innerText","applyEditChanges","el","makeEditable","addTask","checked","Math","random","toString","substring","updateList","index","checkUncheck","indexOf","deleteTask","splice"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/pages/TasksTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <header>HEADER GOES HERE</header>\r\n    <div class=\"grid-item-todo\">\r\n      <div v-if=\"!display\" class=\"no-tasks\">No Tasks to Display</div>\r\n      <div v-else>\r\n        <h1>{{ formatDate(new Date(tasksSlice.date)) }}</h1>\r\n        <div class=\"flex-headers\">\r\n          <div class=\"header-number\">#</div>\r\n          <div class=\"header-text\">Description</div>\r\n          <div class=\"header-edit\">Edit</div>\r\n          <div class=\"header-delete\">Del.</div>\r\n          <div class=\"header-completed\">Status</div>\r\n        </div>\r\n      </div>\r\n      <draggable\r\n        :list=\"tasksSlice.tasks\"\r\n        item-key=\"task_id\"\r\n        @change=\"updateList\"\r\n      >\r\n        <template #item=\"{ element }\">\r\n          <div class=\"flexbox\">\r\n            <div class=\"flex-id\">\r\n              <p>{{ element.priority }}</p>\r\n            </div>\r\n            <div\r\n              class=\"flex-text\"\r\n              :class=\"{ editSelectedBorder: element.editable }\"\r\n            >\r\n              <p\r\n                :contenteditable=\"element.editable\"\r\n                @input=\"editText\"\r\n                @blur=\"applyEditChanges(element)\"\r\n              >\r\n                {{ element.text }}\r\n              </p>\r\n            </div>\r\n            <div class=\"flex-buttons\">\r\n              <font-awesome-icon\r\n                icon=\"fas fa-pen\"\r\n                class=\"edit-icon\"\r\n                :class=\"{ editSelected: element.editable }\"\r\n                @click=\"makeEditable(element)\"\r\n              />\r\n              <font-awesome-icon\r\n                @click=\"deleteTask(element)\"\r\n                icon=\"fas\r\n              fa-trash\"\r\n                class=\"delete-icon\"\r\n              />\r\n              <font-awesome-icon\r\n                icon=\"fas fa-check\"\r\n                class=\"check-icon\"\r\n                :class=\"{ isChecked: element.completed }\"\r\n                :id=\"element.id\"\r\n                v-model=\"element.completed\"\r\n                @click=\"checkUncheck(element)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </draggable>\r\n      <form class=\"form-control\" @submit.prevent=\"addTask\">\r\n        <input\r\n          class=\"task-input\"\r\n          @blur=\"clearInvalidInput\"\r\n          @keyup=\"clearInvalidInput\"\r\n          v-model=\"enteredText\"\r\n          type=\"text\"\r\n        />\r\n        <button class=\"button-74\">add task</button>\r\n      </form>\r\n      <span v-if=\"invalidInput\" class=\"invalid-input\">Please Enter Text</span>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <h1>{{ date }}</h1>\r\n      <Datepicker\r\n        inline\r\n        :enableTimePicker=\"false\"\r\n        :monthChangeOnScroll=\"false\"\r\n        v-model=\"date\"\r\n        autoApply\r\n        @update:modelValue=\"handleDate\"\r\n      />\r\n      <div v-if=\"totalTasks\" class=\"task-status\">\r\n        <p>\r\n          # Tasks: <span id=\"total-tasks\">{{ totalTasks }}</span>\r\n        </p>\r\n        <p>\r\n          # Completed tasks:\r\n          <span id=\"complete-tasks\">{{ completedTasks }}</span>\r\n        </p>\r\n        <p>\r\n          # Not completed tasks:\r\n          <span id=\"uncomplete-tasks\">{{ notCompletedTasks }}</span>\r\n        </p>\r\n      </div>\r\n      <div v-for=\"task in tasks\" :key=\"task.tasks.user_id\">\r\n        {{ task.tasks.text }}\r\n      </div>\r\n    </div>\r\n    <footer>\r\n      <p>FOOTER GOES HERE</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// eslint-disable-next-line\r\nimport { reactive, ref, unref, onMounted, onUpdated, onBeforeMount } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\n\r\nimport authHeader from \"@/components/services/auth-header\";\r\nimport axios from \"axios\";\r\n\r\nimport Datepicker from \"@vuepic/vue-datepicker\";\r\nimport \"@vuepic/vue-datepicker/dist/main.css\";\r\n\r\nconst date = ref(new Date().toISOString().slice(0, 10));\r\n\r\nconst invalidInput = ref(false);\r\n\r\nconst enteredText = ref(\"\");\r\n\r\nconst tasks = ref([]);\r\n\r\n// const dateCal = ref(new Date());\r\n\r\nconst editedText = ref(\"\");\r\n\r\nconsole.log(\"which first\");\r\n\r\nconst tasksList = reactive([\r\n  {\r\n    date: \"2022-10-12\",\r\n    tasks: [\r\n      {\r\n        text: \"BBB\",\r\n        priority: 1,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X12\",\r\n      },\r\n      {\r\n        text: \"CCC\",\r\n        priority: 2,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X123\",\r\n      },\r\n      {\r\n        text: \"CCC\",\r\n        priority: 3,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X1124\",\r\n      },\r\n      {\r\n        text: \"DDD\",\r\n        priority: 4,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sd\",\r\n      },\r\n      {\r\n        text: \"AAA\",\r\n        priority: 6,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X1sda\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    date: \"2022-10-13\",\r\n    tasks: [\r\n      {\r\n        text: \"Uno\",\r\n        priority: 1,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X12\",\r\n      },\r\n      {\r\n        text: \"Dos\",\r\n        priority: 2,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X123\",\r\n      },\r\n      {\r\n        text: \"Tres\",\r\n        priority: 3,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X1124\",\r\n      },\r\n      {\r\n        text: \"Quatro\",\r\n        priority: 4,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sd\",\r\n      },\r\n      {\r\n        text: \"Cinco\",\r\n        priority: 6,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sda\",\r\n      },\r\n    ],\r\n  },\r\n]);\r\n// Getting array for specific date\r\nconst tasksSlice = ref([]);\r\nconst display = ref(false);\r\n\r\nif (tasksList.filter((arr) => arr[\"date\"] === \"2022-10-12\").length === 0) {\r\n  // eslint-disable-next-line\r\n  display.value = false;\r\n} else {\r\n  tasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === \"2022-10-12\")[0];\r\n  display.value = true;\r\n}\r\n\r\n// Count the number of tasks\r\nconst notCompletedTasks = ref(null);\r\nconst completedTasks = ref(null);\r\nconst totalTasks = ref(null);\r\n\r\nfunction countTasks() {\r\n  if (\"date\" in tasksSlice.value) {\r\n    totalTasks.value = tasksSlice.value.tasks.length;\r\n    notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n      (ob) => !ob.completed\r\n    ).length;\r\n    completedTasks.value = totalTasks.value - notCompletedTasks.value;\r\n  } else {\r\n    totalTasks.value = null;\r\n    completedTasks.value = null;\r\n    notCompletedTasks.value = null;\r\n  }\r\n}\r\n\r\nif (tasksSlice.value.length > 0) {\r\n  notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n    (ob) => !ob.completed\r\n  ).length;\r\n}\r\n\r\nasync function loadTasks() {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:8000/task\", {\r\n      headers: authHeader(),\r\n    });\r\n    // working with response\r\n    console.log(\"response\", response.data);\r\n    const result = response.data;\r\n\r\n    const example = [\r\n      {\r\n        date: \"2022-10-12\",\r\n        tasks: [\r\n          {\r\n            text: \"BBB\",\r\n            priority: 1,\r\n            completed: false,\r\n            editable: false,\r\n            task_id: \"X12\",\r\n          },\r\n          {\r\n            text: \"CCC\",\r\n            priority: 2,\r\n            completed: true,\r\n            editable: false,\r\n            task_id: \"X123\",\r\n          },\r\n          {\r\n            text: \"CCC\",\r\n            priority: 3,\r\n            completed: false,\r\n            editable: false,\r\n            task_id: \"X1124\",\r\n          },\r\n          {\r\n            text: \"DDD\",\r\n            priority: 4,\r\n            completed: true,\r\n            editable: false,\r\n            task_id: \"X1sd\",\r\n          },\r\n          {\r\n            text: \"AAA\",\r\n            priority: 6,\r\n            completed: false,\r\n            editable: false,\r\n            task_id: \"X1sda\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        date: \"2022-10-13\",\r\n        tasks: [\r\n          {\r\n            text: \"Uno\",\r\n            priority: 1,\r\n            completed: false,\r\n            editable: false,\r\n            task_id: \"X12\",\r\n          },\r\n          {\r\n            text: \"Dos\",\r\n            priority: 2,\r\n            completed: true,\r\n            editable: false,\r\n            task_id: \"X123\",\r\n          },\r\n          {\r\n            text: \"Tres\",\r\n            priority: 3,\r\n            completed: false,\r\n            editable: false,\r\n            task_id: \"X1124\",\r\n          },\r\n          {\r\n            text: \"Quatro\",\r\n            priority: 4,\r\n            completed: true,\r\n            editable: false,\r\n            task_id: \"X1sd\",\r\n          },\r\n          {\r\n            text: \"Cinco\",\r\n            priority: 6,\r\n            completed: true,\r\n            editable: false,\r\n            task_id: \"X1sda\",\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n    console.log(\"example\", example);\r\n\r\n    const newArray = reactive([]);\r\n\r\n    result.forEach((element) => {\r\n      if (!newArray.filter((arr) => arr[\"date\"] === element.date).length > 0) {\r\n        newArray.push({\r\n          date: element.date,\r\n          tasks: [{ ...element, editable: false }],\r\n        });\r\n      } else {\r\n        const idx = newArray.findIndex((arr) => arr.date === element.date);\r\n        newArray[idx].tasks.push({ ...element, editable: false });\r\n      }\r\n    });\r\n    console.log(newArray);\r\n    console.log(tasksList);\r\n    tasks.value = newArray[0];\r\n    console.log(tasks);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nonBeforeMount(() => {\r\n  console.log(\"seriously\");\r\n});\r\nonMounted(() => {\r\n  countTasks();\r\n  loadTasks(); //Load tasks from backend\r\n\r\n  // console.log(\"tasks\", tasks.value);\r\n  // for (const [key, item] of Object.entries(tasks)) {\r\n  //   console.log(\"key\", key);\r\n  //   console.log(\"item\", item);\r\n  //   if (key === \"_rawValue\") {\r\n  //     console.log(\"YES!\");\r\n  //     for (const [k, i] of Object.entries(item)) {\r\n  //       console.log(\"here\", k, i);\r\n  //     }\r\n  //   }\r\n  // }\r\n});\r\n\r\nonUpdated(() => {\r\n  countTasks();\r\n});\r\n\r\n// custom function to return date in DD month-long YYYY format\r\nfunction formatDate(dateInput) {\r\n  return dateInput.toLocaleDateString(\"en-US\", {\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    day: \"numeric\",\r\n  });\r\n}\r\n\r\n// clear invalid input - to be used at blur\r\nfunction clearInvalidInput() {\r\n  invalidInput.value = false;\r\n}\r\n\r\n// WORKING WITH CALENDAR\r\n\r\nconst handleDate = (modelData) => {\r\n  date.value = modelData.toISOString().slice(0, 10);\r\n  // getting new slice based on picked date\r\n  tasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === date.value)[0];\r\n  display.value = true;\r\n\r\n  // creating empty array if there no tasks on picked date\r\n  if (!tasksSlice.value) {\r\n    tasksSlice.value = ref([]);\r\n    display.value = false;\r\n  }\r\n};\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\n\r\nfunction applyEditChanges(element) {\r\n  if (editedText.value) {\r\n    tasksSlice.value.tasks.forEach((el, idx) => {\r\n      if (element.task_id === el.task_id) {\r\n        tasksSlice.value.tasks[idx].text = editedText.value;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// make SELECTED paragraph tag editable\r\nfunction makeEditable(element) {\r\n  tasksSlice.value.tasks.forEach((el, idx) => {\r\n    if (element.task_id == el.task_id) {\r\n      tasksSlice.value.tasks[idx].editable =\r\n        !tasksSlice.value.tasks[idx].editable;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTask() {\r\n  if (enteredText.value !== \"\") {\r\n    // add date if empty object\r\n    if (!(\"date\" in tasksSlice.value)) {\r\n      tasksSlice.value = { date: date.value, tasks: [] };\r\n    }\r\n    tasksSlice.value.tasks.push({\r\n      text: enteredText.value,\r\n      priority: tasksSlice.value.tasks.length + 1,\r\n      checked: false,\r\n      completed: false,\r\n      task_id: (Math.random() + 1).toString(36).substring(7),\r\n    });\r\n    enteredText.value = \"\";\r\n    display.value = true;\r\n    tasksList.push(tasksSlice.value);\r\n  } else {\r\n    invalidInput.value = true;\r\n  }\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  tasksSlice.value.tasks.forEach((element, index) => {\r\n    tasksSlice.value.tasks[index].priority = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = tasksSlice.value.tasks.indexOf(element);\r\n  tasksSlice.value.tasks[index].completed =\r\n    !tasksSlice.value.tasks[index].completed;\r\n  countTasks();\r\n}\r\n// Deleting specific task\r\n\r\nfunction deleteTask(element) {\r\n  let index = tasksSlice.value.tasks.indexOf(element);\r\n  tasksSlice.value.tasks.splice(index, 1);\r\n  if (tasksSlice.value.tasks.length === 0) {\r\n    display.value = false;\r\n  }\r\n  updateList();\r\n  countTasks();\r\n}\r\n</script>\r\n\r\n<style>\r\n/* STYLING CALENDAR */\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light {\r\n  background-color: transparent;\r\n  flex-grow: 1;\r\n  margin: 10px 10px;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar_header {\r\n  width: 100%;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar {\r\n  width: 100%;\r\n}\r\n</style>\r\n<style scoped>\r\n* {\r\n  font-family: \"Kalam\", cursive;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n.form-control {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-input {\r\n  width: 80%;\r\n  margin-left: 30px;\r\n  margin-right: 10px;\r\n  line-height: 25px;\r\n  font-size: 18px;\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n}\r\n\r\n.no-tasks {\r\n  height: 100px;\r\n  justify-content: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 60px 1fr 60px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background: skyblue;\r\n  /* making HEADER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background: lightblue;\r\n  /* making FOOTER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n  background: lightgreen;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  background: lightsteelblue;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 1fr 50px;\r\n  }\r\n  header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  footer {\r\n    grid-row: 4/5;\r\n  }\r\n  .form-control {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 60px;\r\n  }\r\n  .button-74 {\r\n    width: 90px;\r\n    flex-shrink: 0;\r\n    margin-top: 10px;\r\n    margin-right: 40px;\r\n  }\r\n}\r\n\r\n/* TO-DO HEADINGS WITH FLEXBOX */\r\n\r\n.flex-headers {\r\n  display: flex;\r\n  background-color: rgb(97, 213, 136);\r\n  margin: 0px 10px;\r\n  font-size: 14px;\r\n  padding: 5px 0px;\r\n}\r\n.header-number {\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  flex-basis: 20px;\r\n}\r\n.header-text {\r\n  flex-grow: 1;\r\n}\r\n\r\n.header-edit,\r\n.header-delete {\r\n  margin-right: 5px;\r\n}\r\n.header-completed {\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  gap: 5px;\r\n}\r\n.flex-text {\r\n  background: lightgray;\r\n  flex: 1;\r\n}\r\n\r\n.flex-id {\r\n  flex-basis: 15px;\r\n}\r\n.flex-id p {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Change border of the text if edit is selected*/\r\n\r\n.editSelectedBorder {\r\n  border: 1px solid orange;\r\n}\r\n.flex-buttons {\r\n  background: lightyellow;\r\n  flex-basis: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.delete-icon:hover {\r\n  color: #9b4848;\r\n}\r\n\r\n/* CHECKBOX */\r\n.check-icon {\r\n  margin-left: 15px;\r\n  color: #b04b4b;\r\n  font-size: 26px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n  margin-top: 5px;\r\n}\r\n\r\n.isChecked {\r\n  color: green;\r\n}\r\n\r\n/* BUTTON */\r\n.button-74 {\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n  border-radius: 25px;\r\n  box-shadow: #422800 3px 3px 0 0;\r\n  color: #422800;\r\n  cursor: pointer;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  padding: 0 18px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  flex: 0;\r\n  margin-right: 15px;\r\n  flex-basis: 100px;\r\n}\r\n\r\n.button-74:hover {\r\n  background-color: #fff;\r\n}\r\n\r\n.button-74:active {\r\n  box-shadow: #422800 2px 2px 0 0;\r\n  transform: translate(2px, 2px);\r\n}\r\n\r\n.invalid-input {\r\n  color: #b04b4b;\r\n  margin-right: 50px;\r\n  font-weight: bold;\r\n}\r\n.task-status p {\r\n  display: inline-block;\r\n  margin-right: 20px;\r\n}\r\n#total-tasks {\r\n  color: black;\r\n  font-weight: bold;\r\n}\r\n#complete-tasks {\r\n  color: #479d16;\r\n  font-weight: bold;\r\n}\r\n#uncomplete-tasks {\r\n  color: #841460;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}