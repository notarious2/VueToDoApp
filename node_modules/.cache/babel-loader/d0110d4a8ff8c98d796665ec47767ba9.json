{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6295ebc1\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"grid-container\"\n};\nconst _hoisted_2 = {\n  class: \"grid-item-todo\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"no-tasks\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex-headers\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-number\"\n}, \"#\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-text\"\n}, \"Description\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-edit\"\n}, \"Edit\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-delete\"\n}, \"Del.\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header-completed\"\n}, \"Status\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = {\n  class: \"flexbox\"\n};\nconst _hoisted_7 = {\n  class: \"flex-id\"\n};\nconst _hoisted_8 = [\"contenteditable\", \"onBlur\"];\nconst _hoisted_9 = {\n  class: \"flex-buttons\"\n};\nconst _hoisted_10 = [\"onSubmit\"];\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"button-74\"\n}, \"add task\", -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = {\n  key: 2,\n  class: \"invalid-input\"\n};\nconst _hoisted_13 = {\n  class: \"grid-item-calendar\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"task-status\"\n};\nconst _hoisted_15 = {\n  id: \"total-tasks\"\n};\nconst _hoisted_16 = {\n  id: \"complete-tasks\"\n};\nconst _hoisted_17 = {\n  id: \"uncomplete-tasks\"\n};\n\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"FOOTER GOES HERE\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_the_header = _resolveComponent(\"the-header\");\n\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_the_header), _createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"PostIt\"], null, {\n    default: _withCtx(() => [!$setup.display ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"No Tasks to Display\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h1\", null, _toDisplayString($setup.formatDate(new Date($setup.tasksSlice.date))), 1\n    /* TEXT */\n    ), _hoisted_5])), _createVNode($setup[\"draggable\"], {\n      list: $setup.tasksSlice.tasks,\n      \"item-key\": \"task_id\",\n      onChange: $setup.updatePriority\n    }, {\n      item: _withCtx(({\n        element\n      }) => [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, _toDisplayString(element.priority), 1\n      /* TEXT */\n      )]), _createElementVNode(\"div\", {\n        class: _normalizeClass([\"flex-text\", {\n          editSelectedBorder: element.editable\n        }])\n      }, [_createElementVNode(\"p\", {\n        contenteditable: element.editable,\n        onInput: $setup.editText,\n        onBlur: $event => $setup.applyEditChanges(element)\n      }, _toDisplayString(element.text), 41\n      /* TEXT, PROPS, HYDRATE_EVENTS */\n      , _hoisted_8)], 2\n      /* CLASS */\n      ), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_font_awesome_icon, {\n        icon: \"fas fa-pen\",\n        class: _normalizeClass([\"edit-icon\", {\n          editSelected: element.editable\n        }]),\n        onClick: $event => $setup.makeEditable(element)\n      }, null, 8\n      /* PROPS */\n      , [\"class\", \"onClick\"]), _createVNode(_component_font_awesome_icon, {\n        onClick: $event => $setup.deleteTask(element),\n        icon: \"fas\\r\\n              fa-trash\",\n        class: \"delete-icon\"\n      }, null, 8\n      /* PROPS */\n      , [\"onClick\"]), _createVNode(_component_font_awesome_icon, {\n        icon: \"fas fa-check\",\n        class: _normalizeClass([\"check-icon\", {\n          isChecked: element.completed\n        }]),\n        id: element.id,\n        modelValue: element.completed,\n        \"onUpdate:modelValue\": $event => element.completed = $event,\n        onClick: $event => $setup.checkUncheck(element)\n      }, null, 8\n      /* PROPS */\n      , [\"class\", \"id\", \"modelValue\", \"onUpdate:modelValue\", \"onClick\"])])])]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"list\"]), _createElementVNode(\"form\", {\n      class: \"form-control\",\n      onSubmit: _withModifiers($setup.addNewTask, [\"prevent\"])\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"task-input\",\n      onBlur: $setup.clearInvalidInput,\n      onKeyup: $setup.clearInvalidInput,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.enteredText = $event),\n      type: \"text\"\n    }, null, 544\n    /* HYDRATE_EVENTS, NEED_PATCH */\n    ), [[_vModelText, $setup.enteredText]]), _hoisted_11], 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_10), $setup.invalidInput ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \"Please Enter Text\")) : _createCommentVNode(\"v-if\", true)]),\n    _: 1\n    /* STABLE */\n\n  })]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"h1\", null, _toDisplayString($setup.date), 1\n  /* TEXT */\n  ), _createVNode($setup[\"Datepicker\"], {\n    inline: \"\",\n    enableTimePicker: false,\n    monthChangeOnScroll: false,\n    modelValue: $setup.date,\n    \"onUpdate:modelValue\": [_cache[1] || (_cache[1] = $event => $setup.date = $event), $setup.handleDate],\n    autoApply: \"\"\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), $setup.totalTasks ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"p\", null, [_createTextVNode(\" # Tasks: \"), _createElementVNode(\"span\", _hoisted_15, _toDisplayString($setup.totalTasks), 1\n  /* TEXT */\n  )]), _createElementVNode(\"p\", null, [_createTextVNode(\" # Completed tasks: \"), _createElementVNode(\"span\", _hoisted_16, _toDisplayString($setup.completedTasks), 1\n  /* TEXT */\n  )]), _createElementVNode(\"p\", null, [_createTextVNode(\" # Not completed tasks: \"), _createElementVNode(\"span\", _hoisted_17, _toDisplayString($setup.notCompletedTasks), 1\n  /* TEXT */\n  )])])) : _createCommentVNode(\"v-if\", true)]), _hoisted_18]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","id","_createElementBlock","_createVNode","_component_the_header","$setup","_hoisted_4","_toDisplayString","Date","date","_hoisted_5","list","tasks","onChange","item","element","priority","editSelectedBorder","editable","contenteditable","onInput","onBlur","text","_hoisted_8","_component_font_awesome_icon","icon","editSelected","onClick","isChecked","completed","$event","onSubmit","onKeyup","type","_hoisted_11","inline","enableTimePicker","monthChangeOnScroll","autoApply","_hoisted_18"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TheTasks.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <the-header></the-header>\r\n    <div class=\"grid-item-todo\">\r\n      <post-it>\r\n        <div v-if=\"!display\" class=\"no-tasks\">No Tasks to Display</div>\r\n        <div v-else>\r\n          <h1>{{ formatDate(new Date(tasksSlice.date)) }}</h1>\r\n          <div class=\"flex-headers\">\r\n            <div class=\"header-number\">#</div>\r\n            <div class=\"header-text\">Description</div>\r\n            <div class=\"header-edit\">Edit</div>\r\n            <div class=\"header-delete\">Del.</div>\r\n            <div class=\"header-completed\">Status</div>\r\n          </div>\r\n        </div>\r\n        <draggable\r\n          :list=\"tasksSlice.tasks\"\r\n          item-key=\"task_id\"\r\n          @change=\"updatePriority\"\r\n        >\r\n          <template #item=\"{ element }\">\r\n            <div class=\"flexbox\">\r\n              <div class=\"flex-id\">\r\n                <p>{{ element.priority }}</p>\r\n              </div>\r\n              <div\r\n                class=\"flex-text\"\r\n                :class=\"{ editSelectedBorder: element.editable }\"\r\n              >\r\n                <p\r\n                  :contenteditable=\"element.editable\"\r\n                  @input=\"editText\"\r\n                  @blur=\"applyEditChanges(element)\"\r\n                >\r\n                  {{ element.text }}\r\n                </p>\r\n              </div>\r\n              <div class=\"flex-buttons\">\r\n                <font-awesome-icon\r\n                  icon=\"fas fa-pen\"\r\n                  class=\"edit-icon\"\r\n                  :class=\"{ editSelected: element.editable }\"\r\n                  @click=\"makeEditable(element)\"\r\n                />\r\n                <font-awesome-icon\r\n                  @click=\"deleteTask(element)\"\r\n                  icon=\"fas\r\n              fa-trash\"\r\n                  class=\"delete-icon\"\r\n                />\r\n                <font-awesome-icon\r\n                  icon=\"fas fa-check\"\r\n                  class=\"check-icon\"\r\n                  :class=\"{ isChecked: element.completed }\"\r\n                  :id=\"element.id\"\r\n                  v-model=\"element.completed\"\r\n                  @click=\"checkUncheck(element)\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </draggable>\r\n        <form class=\"form-control\" @submit.prevent=\"addNewTask\">\r\n          <input\r\n            class=\"task-input\"\r\n            @blur=\"clearInvalidInput\"\r\n            @keyup=\"clearInvalidInput\"\r\n            v-model=\"enteredText\"\r\n            type=\"text\"\r\n          />\r\n          <button class=\"button-74\">add task</button>\r\n        </form>\r\n        <span v-if=\"invalidInput\" class=\"invalid-input\">Please Enter Text</span>\r\n      </post-it>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <h1>{{ date }}</h1>\r\n      <Datepicker\r\n        inline\r\n        :enableTimePicker=\"false\"\r\n        :monthChangeOnScroll=\"false\"\r\n        v-model=\"date\"\r\n        autoApply\r\n        @update:modelValue=\"handleDate\"\r\n      />\r\n      <div v-if=\"totalTasks\" class=\"task-status\">\r\n        <p>\r\n          # Tasks: <span id=\"total-tasks\">{{ totalTasks }}</span>\r\n        </p>\r\n        <p>\r\n          # Completed tasks:\r\n          <span id=\"complete-tasks\">{{ completedTasks }}</span>\r\n        </p>\r\n        <p>\r\n          # Not completed tasks:\r\n          <span id=\"uncomplete-tasks\">{{ notCompletedTasks }}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <footer>\r\n      <p>FOOTER GOES HERE</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// eslint-disable-next-line\r\nimport { reactive, ref, onMounted, onUpdated, onBeforeMount } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nimport PostIt from \"../components/layout/PostIt.vue\";\r\n\r\nimport authHeader from \"@/components/services/auth-header\";\r\nimport axios from \"axios\";\r\n\r\nimport Datepicker from \"@vuepic/vue-datepicker\";\r\nimport \"@vuepic/vue-datepicker/dist/main.css\";\r\n\r\nconst date = ref(new Date().toISOString().slice(0, 10));\r\n\r\nconst invalidInput = ref(false);\r\n\r\nconst enteredText = ref(\"\");\r\n\r\nconst editedText = ref(\"\");\r\n\r\n// Getting array for specific date\r\nconst tasksList = reactive([]);\r\nconst tasksSlice = ref([]);\r\nconst display = ref(false);\r\n\r\nasync function loadTasks() {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:8000/task\", {\r\n      headers: authHeader(),\r\n    });\r\n    // working with response\r\n    // console.log(response);\r\n    const result = response.data;\r\n\r\n    const newArray = reactive([]);\r\n    result.forEach((element) => {\r\n      if (!newArray.filter((arr) => arr[\"date\"] === element.date).length > 0) {\r\n        newArray.push({\r\n          date: element.date,\r\n          tasks: [{ ...element, editable: false }],\r\n        });\r\n      } else {\r\n        const idx = newArray.findIndex((arr) => arr.date === element.date);\r\n        newArray[idx].tasks.push({ ...element, editable: false });\r\n      }\r\n    });\r\n    // tasksList.value = newArray;\r\n    console.log(\"Load...\");\r\n    return newArray;\r\n  } catch (err) {\r\n    if (err.response.status === 401) {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n    console.log(err.response.status);\r\n  }\r\n}\r\nfunction loadOneTask(task_date) {\r\n  if (tasksList.value.filter((arr) => arr[\"date\"] === task_date).length === 0) {\r\n    // eslint-disable-next-line\r\n    display.value = false;\r\n    tasksSlice.value = [];\r\n  } else {\r\n    // console.log(tasksList.value.filter((arr) => arr[\"date\"] === task_date)[0]);\r\n    tasksSlice.value = tasksList.value.filter(\r\n      (arr) => arr[\"date\"] === task_date\r\n    )[0];\r\n    display.value = true;\r\n    // SORT THE SLICE\r\n    tasksSlice.value.tasks.sort((a, b) =>\r\n      a.priority > b.priority ? 1 : b.priority > a.priority ? -1 : 0\r\n    );\r\n  }\r\n}\r\n// SEE IF LOGGED IN\r\n\r\n// Count the number of tasks\r\nconst notCompletedTasks = ref(null);\r\nconst completedTasks = ref(null);\r\nconst totalTasks = ref(null);\r\n\r\nfunction countTasks() {\r\n  if (\"date\" in tasksSlice.value) {\r\n    console.log(\"YES\");\r\n    totalTasks.value = tasksSlice.value.tasks.length;\r\n    notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n      (ob) => !ob.completed\r\n    ).length;\r\n    completedTasks.value = totalTasks.value - notCompletedTasks.value;\r\n  } else {\r\n    console.log(\"NO\");\r\n\r\n    totalTasks.value = null;\r\n    completedTasks.value = null;\r\n    notCompletedTasks.value = null;\r\n  }\r\n}\r\n\r\nif (tasksSlice.value.length > 0) {\r\n  notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n    (ob) => !ob.completed\r\n  ).length;\r\n}\r\n\r\nonMounted(async () => {\r\n  tasksList.value = await loadTasks();\r\n  loadOneTask(date.value);\r\n  countTasks();\r\n  console.log(tasksSlice.value);\r\n  // updateList();\r\n});\r\n\r\nonUpdated(() => {\r\n  countTasks();\r\n});\r\n\r\n// custom function to return date in DD month-long YYYY format\r\nfunction formatDate(dateInput) {\r\n  return dateInput.toLocaleDateString(\"en-US\", {\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    day: \"numeric\",\r\n  });\r\n}\r\n\r\n// clear invalid input - to be used at blur\r\nfunction clearInvalidInput() {\r\n  invalidInput.value = false;\r\n}\r\n\r\n// WORKING WITH CALENDAR\r\n\r\nconst handleDate = (modelData) => {\r\n  date.value = modelData.toISOString().slice(0, 10);\r\n  // getting new slice based on picked date\r\n  tasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === date.value)[0];\r\n  display.value = true;\r\n\r\n  // creating empty array if there no tasks on picked date\r\n  if (!tasksSlice.value) {\r\n    tasksSlice.value = ref([]);\r\n    display.value = false;\r\n  }\r\n  loadOneTask(date.value);\r\n};\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\nasync function applyEditChanges(element) {\r\n  // No need to send HTTP request if Text is unchanged\r\n  if (editedText.value && editedText.value !== element.text) {\r\n    try {\r\n      await axios.patch(\r\n        \"http://localhost:8000/task/update/\" + element.task_id,\r\n        { text: editedText.value },\r\n        { headers: authHeader() }\r\n      );\r\n      console.log(\"Edited!\");\r\n      // rerender ALL to-do tasks\r\n      tasksList.value = await loadTasks();\r\n      // get selected date's slice\r\n      loadOneTask(date.value);\r\n    } catch (err) {\r\n      if (err.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n      console.log(err);\r\n    }\r\n  }\r\n}\r\n\r\n// make SELECTED paragraph tag editable\r\n// No link with backend here - elements become uneditable after refresh\r\nfunction makeEditable(element) {\r\n  tasksSlice.value.tasks.forEach((el, idx) => {\r\n    if (element.task_id == el.task_id) {\r\n      tasksSlice.value.tasks[idx].editable =\r\n        !tasksSlice.value.tasks[idx].editable;\r\n    }\r\n  });\r\n}\r\n\r\n// adding the task - Post Request\r\n\r\nasync function addNewTask() {\r\n  // priority is 1 if there are not tasks on that day, else it is autoincremented\r\n  const priority =\r\n    \"date\" in tasksSlice.value ? tasksSlice.value.tasks.length + 1 : 1;\r\n  if (enteredText.value !== \"\") {\r\n    try {\r\n      await axios.post(\r\n        \"http://localhost:8000/task\",\r\n        {\r\n          priority: priority,\r\n          date: date.value,\r\n          text: enteredText.value,\r\n          completed: false,\r\n        },\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      );\r\n      console.log(\"Add request\");\r\n\r\n      // rerender ALL to-do tasks\r\n      tasksList.value = await loadTasks();\r\n      // get selected date's slice\r\n      loadOneTask(date.value);\r\n      //clear input field\r\n      enteredText.value = \"\";\r\n    } catch (err) {\r\n      if (err.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n      console.log(err);\r\n    }\r\n  } else {\r\n    invalidInput.value = true;\r\n  }\r\n}\r\n\r\n// update tasks index/id on change - on drag / also used for deletion\r\nasync function updatePriority() {\r\n  // GET changed priorities FIRST\r\n  const prioritiesList = {};\r\n  for (const idx in tasksSlice.value.tasks) {\r\n    if (tasksSlice.value.tasks[idx].priority !== Number(idx) + 1) {\r\n      prioritiesList[tasksSlice.value.tasks[idx].task_id] = Number(idx) + 1;\r\n    }\r\n  }\r\n  if (Object.keys(prioritiesList).length > 0) {\r\n    const payload = {};\r\n    payload[date.value] = prioritiesList;\r\n    // Update MULTIPLE field with ONE PATCH Request\r\n    try {\r\n      await axios.patch(\r\n        \"http://localhost:8000/task/update_order\",\r\n        {\r\n          ...payload,\r\n        },\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      );\r\n      console.log(\"Multiple Rows Update!\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n    }\r\n\r\n    tasksList.value = await loadTasks();\r\n    loadOneTask(date.value);\r\n  }\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nasync function checkUncheck(element) {\r\n  try {\r\n    await axios.patch(\r\n      \"http://localhost:8000/task/update/\" + element.task_id,\r\n      { completed: element.completed ? false : true },\r\n      { headers: authHeader() }\r\n    );\r\n    console.log(\"Completed!\");\r\n    // rerender ALL to-do tasks\r\n    tasksList.value = await loadTasks();\r\n    // get selected date's slice\r\n    loadOneTask(date.value);\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (err.response.status === 401) {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  }\r\n  countTasks();\r\n}\r\n\r\n// Deleting specific task\r\n\r\nasync function deleteTask(element) {\r\n  try {\r\n    await axios.get(\"http://localhost:8000/task/delete/\" + element.task_id, {\r\n      headers: authHeader(),\r\n    });\r\n\r\n    // rerender ALL to-do tasks\r\n    console.log(\"Deleted!\");\r\n    tasksList.value = await loadTasks();\r\n    // get selected date's slice\r\n    loadOneTask(date.value);\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (err.response.status === 401) {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  }\r\n  updatePriority();\r\n}\r\n</script>\r\n\r\n<style>\r\n/* STYLING CALENDAR */\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light {\r\n  background-color: transparent;\r\n  flex-grow: 1;\r\n  margin: 10px 10px;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar_header {\r\n  width: 100%;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar {\r\n  width: 100%;\r\n}\r\n</style>\r\n<style scoped>\r\n* {\r\n  font-family: \"Kalam\", cursive;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n.form-control {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-input {\r\n  width: 80%;\r\n  margin-left: 30px;\r\n  margin-right: 10px;\r\n  line-height: 25px;\r\n  font-size: 18px;\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n}\r\n\r\n.no-tasks {\r\n  height: 100px;\r\n  justify-content: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 60px 1fr 60px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background: lightblue;\r\n  /* making FOOTER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  background: ffffe0;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 1fr 50px;\r\n    gap: 1px;\r\n  }\r\n  header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    margin-top: 2px;\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  footer {\r\n    grid-row: 4/5;\r\n  }\r\n  .form-control {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 60px;\r\n  }\r\n  .button-74 {\r\n    width: 90px;\r\n    flex-shrink: 0;\r\n    margin-top: 10px;\r\n    margin-right: 40px;\r\n  }\r\n}\r\n\r\n/* TO-DO HEADINGS WITH FLEXBOX */\r\n\r\n.flex-headers {\r\n  display: flex;\r\n  /* background-color: rgb(153, 185, 66); */\r\n  border-bottom: 2px solid black;\r\n  margin: 0px 10px;\r\n  font-size: 16px;\r\n  padding: 5px 0px;\r\n  font-weight: bold;\r\n}\r\n.header-number {\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  flex-basis: 20px;\r\n}\r\n.header-text {\r\n  flex-grow: 1;\r\n}\r\n\r\n.header-edit,\r\n.header-delete {\r\n  margin-right: 5px;\r\n}\r\n.header-completed {\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  gap: 5px;\r\n  margin-top: 0px;\r\n}\r\n.flex-text {\r\n  /* background: lightgray; */\r\n  flex: 1;\r\n}\r\n\r\n.flex-id {\r\n  flex-basis: 15px;\r\n}\r\n.flex-id p {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Change border of the text if edit is selected*/\r\n\r\n.editSelectedBorder {\r\n  border: 1px solid orange;\r\n}\r\n.flex-buttons {\r\n  /* background: lightyellow; */\r\n  flex-basis: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.delete-icon:hover {\r\n  color: #9b4848;\r\n}\r\n\r\n/* CHECKBOX */\r\n.check-icon {\r\n  margin-left: 15px;\r\n  color: #b04b4b;\r\n  font-size: 26px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n  margin-top: 5px;\r\n}\r\n\r\n.isChecked {\r\n  color: green;\r\n}\r\n\r\n/* BUTTON */\r\n.button-74 {\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n  border-radius: 25px;\r\n  box-shadow: #422800 3px 3px 0 0;\r\n  color: #422800;\r\n  cursor: pointer;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  padding: 0 18px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  flex: 0;\r\n  margin-right: 15px;\r\n  flex-basis: 100px;\r\n}\r\n\r\n.button-74:hover {\r\n  background-color: #fff;\r\n}\r\n\r\n.button-74:active {\r\n  box-shadow: #422800 2px 2px 0 0;\r\n  transform: translate(2px, 2px);\r\n}\r\n\r\n.invalid-input {\r\n  color: #b04b4b;\r\n  margin-right: 50px;\r\n  font-weight: bold;\r\n}\r\n.task-status p {\r\n  display: inline-block;\r\n  margin-right: 20px;\r\n}\r\n#total-tasks {\r\n  color: black;\r\n  font-weight: bold;\r\n}\r\n#complete-tasks {\r\n  color: #479d16;\r\n  font-weight: bold;\r\n}\r\n#uncomplete-tasks {\r\n  color: #841460;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}