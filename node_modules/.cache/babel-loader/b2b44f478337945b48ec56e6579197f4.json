{"ast":null,"code":"// TODO: add types!\n\n/*\nworks with objects and arrays\n*/\nexport function shallowCopy(val) {\n  if (typeof val === 'object') {\n    if (Array.isArray(val)) {\n      val = Array.prototype.slice.call(val);\n    } else if (val) {\n      // non-null\n      val = { ...val\n      };\n    }\n  }\n\n  return val;\n}\nexport function mapHash(input, func) {\n  const output = {};\n\n  for (const key in input) {\n    if (input.hasOwnProperty(key)) {\n      output[key] = func(input[key], key);\n    }\n  }\n\n  return output;\n}","map":{"version":3,"mappings":"AACA;;AAGA;;;AAGA,OAAM,SAAUA,WAAV,CAAsBC,GAAtB,EAA8B;EAClC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IAC3B,IAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;MACtBA,GAAG,GAAGC,KAAK,CAACE,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,GAA3B,CAAN;IACD,CAFD,MAEO,IAAIA,GAAJ,EAAS;MAAE;MAChBA,GAAG,GAAG,EAAE,GAAGA;MAAL,CAAN;IACD;EACF;;EAED,OAAOA,GAAP;AACD;AAGD,OAAM,SAAUM,OAAV,CAAkBC,KAAlB,EAA8BC,IAA9B,EAAuC;EAC3C,MAAMC,MAAM,GAAQ,EAApB;;EAEA,KAAK,MAAMC,GAAX,IAAkBH,KAAlB,EAAyB;IACvB,IAAIA,KAAK,CAACI,cAAN,CAAqBD,GAArB,CAAJ,EAA+B;MAC7BD,MAAM,CAACC,GAAD,CAAN,GAAcF,IAAI,CAACD,KAAK,CAACG,GAAD,CAAN,EAAaA,GAAb,CAAlB;IACD;EACF;;EAED,OAAOD,MAAP;AACD","names":["shallowCopy","val","Array","isArray","prototype","slice","call","mapHash","input","func","output","key","hasOwnProperty"],"sourceRoot":"","sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}