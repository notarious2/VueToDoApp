{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, onMounted, onUpdated, onBeforeMount } from \"vue\";\nimport draggable from \"vuedraggable\";\nimport PostIt from \"../components/layout/PostIt.vue\";\nimport authHeader from \"@/components/services/auth-header\";\nimport axios from \"axios\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nexport default {\n  __name: 'TheTasks',\n\n  setup(__props, {\n    expose\n  }) {\n    expose(); // eslint-disable-next-line\n\n    const date = ref(new Date().toISOString().slice(0, 10));\n    const invalidInput = ref(false);\n    const enteredText = ref(\"\");\n    const editedText = ref(\"\");\n    const showButtons = ref(null); // Getting array for specific date\n\n    const tasksList = reactive([]);\n    const tasksSlice = ref([]);\n    const display = ref(false);\n\n    async function loadTasks() {\n      try {\n        const response = await axios.get(\"http://localhost:8000/task\", {\n          headers: authHeader()\n        }); // working with response\n        // console.log(response);\n\n        const result = response.data;\n        const newArray = reactive([]);\n        result.forEach(element => {\n          if (!newArray.filter(arr => arr[\"date\"] === element.date).length > 0) {\n            newArray.push({\n              date: element.date,\n              tasks: [{ ...element,\n                editable: false\n              }]\n            });\n          } else {\n            const idx = newArray.findIndex(arr => arr.date === element.date);\n            newArray[idx].tasks.push({ ...element,\n              editable: false\n            });\n          }\n        }); // tasksList.value = newArray;\n\n        console.log(\"Load...\");\n        return newArray;\n      } catch (err) {\n        if (err.response.status === 401) {\n          localStorage.removeItem(\"user\");\n        }\n\n        console.log(err.response.status);\n      }\n    }\n\n    function loadOneTask(task_date) {\n      if (tasksList.value.filter(arr => arr[\"date\"] === task_date).length === 0) {\n        // eslint-disable-next-line\n        display.value = false;\n        tasksSlice.value = [];\n      } else {\n        // console.log(tasksList.value.filter((arr) => arr[\"date\"] === task_date)[0]);\n        tasksSlice.value = tasksList.value.filter(arr => arr[\"date\"] === task_date)[0];\n        display.value = true; // SORT THE SLICE\n\n        tasksSlice.value.tasks.sort((a, b) => a.priority > b.priority ? 1 : b.priority > a.priority ? -1 : 0);\n      }\n    } // SEE IF LOGGED IN\n    // Count the number of tasks\n\n\n    const notCompletedTasks = ref(null);\n    const completedTasks = ref(null);\n    const totalTasks = ref(null);\n\n    function countTasks() {\n      if (\"date\" in tasksSlice.value) {\n        console.log(\"YES\");\n        totalTasks.value = tasksSlice.value.tasks.length;\n        notCompletedTasks.value = tasksSlice.value.tasks.filter(ob => !ob.completed).length;\n        completedTasks.value = totalTasks.value - notCompletedTasks.value;\n      } else {\n        console.log(\"NO\");\n        totalTasks.value = null;\n        completedTasks.value = null;\n        notCompletedTasks.value = null;\n      }\n    }\n\n    if (tasksSlice.value.length > 0) {\n      notCompletedTasks.value = tasksSlice.value.tasks.filter(ob => !ob.completed).length;\n    }\n\n    onMounted(async () => {\n      tasksList.value = await loadTasks();\n      loadOneTask(date.value);\n      countTasks();\n      console.log(tasksSlice.value); // updateList();\n    });\n    onUpdated(() => {\n      countTasks();\n    }); // custom function to return date in DD month-long YYYY format\n\n    function formatDate(dateInput) {\n      return dateInput.toLocaleDateString(\"en-US\", {\n        month: \"long\",\n        year: \"numeric\",\n        day: \"numeric\"\n      });\n    } // clear invalid input - to be used at blur\n\n\n    function clearInvalidInput() {\n      invalidInput.value = false;\n    } // WORKING WITH CALENDAR\n\n\n    const handleDate = modelData => {\n      date.value = modelData.toISOString().slice(0, 10); // getting new slice based on picked date\n\n      tasksSlice.value = tasksList.filter(arr => arr[\"date\"] === date.value)[0];\n      display.value = true; // creating empty array if there no tasks on picked date\n\n      if (!tasksSlice.value) {\n        tasksSlice.value = ref([]);\n        display.value = false;\n      }\n\n      loadOneTask(date.value);\n    }; // listen to input inside edited paragraph text\n\n\n    function editText(event) {\n      editedText.value = event.target.innerText;\n    } // Apply above changes at blur\n\n\n    async function applyEditChanges(element) {\n      // No need to send HTTP request if Text is unchanged\n      if (editedText.value && editedText.value !== element.text) {\n        try {\n          await axios.patch(\"http://localhost:8000/task/update/\" + element.task_id, {\n            text: editedText.value\n          }, {\n            headers: authHeader()\n          });\n          console.log(\"Edited!\"); // rerender ALL to-do tasks\n\n          tasksList.value = await loadTasks(); // get selected date's slice\n\n          loadOneTask(date.value);\n        } catch (err) {\n          if (err.response.status === 401) {\n            localStorage.removeItem(\"user\");\n          }\n\n          console.log(err);\n        }\n      }\n    } // make SELECTED paragraph tag editable\n    // No link with backend here - elements become uneditable after refresh\n\n\n    function makeEditable(element) {\n      tasksSlice.value.tasks.forEach((el, idx) => {\n        if (element.task_id == el.task_id) {\n          tasksSlice.value.tasks[idx].editable = !tasksSlice.value.tasks[idx].editable;\n        }\n      });\n    } // adding the task - Post Request\n\n\n    async function addNewTask() {\n      // priority is 1 if there are not tasks on that day, else it is autoincremented\n      const priority = \"date\" in tasksSlice.value ? tasksSlice.value.tasks.length + 1 : 1;\n\n      if (enteredText.value !== \"\") {\n        try {\n          await axios.post(\"http://localhost:8000/task\", {\n            priority: priority,\n            date: date.value,\n            text: enteredText.value,\n            completed: false\n          }, {\n            headers: authHeader()\n          });\n          console.log(\"Add request\"); // rerender ALL to-do tasks\n\n          tasksList.value = await loadTasks(); // get selected date's slice\n\n          loadOneTask(date.value); //clear input field\n\n          enteredText.value = \"\";\n        } catch (err) {\n          if (err.response.status === 401) {\n            localStorage.removeItem(\"user\");\n          }\n\n          console.log(err);\n        }\n      } else {\n        invalidInput.value = true;\n      }\n    } // update tasks index/id on change - on drag / also used for deletion\n\n\n    async function updatePriority() {\n      // GET changed priorities FIRST\n      const prioritiesList = {};\n\n      for (const idx in tasksSlice.value.tasks) {\n        if (tasksSlice.value.tasks[idx].priority !== Number(idx) + 1) {\n          prioritiesList[tasksSlice.value.tasks[idx].task_id] = Number(idx) + 1;\n        }\n      }\n\n      if (Object.keys(prioritiesList).length > 0) {\n        const payload = {};\n        payload[date.value] = prioritiesList; // Update MULTIPLE field with ONE PATCH Request\n\n        try {\n          await axios.patch(\"http://localhost:8000/task/update_order\", { ...payload\n          }, {\n            headers: authHeader()\n          });\n          console.log(\"Multiple Rows Update!\");\n        } catch (err) {\n          console.log(err);\n\n          if (err.response.status === 401) {\n            localStorage.removeItem(\"user\");\n          }\n        }\n\n        tasksList.value = await loadTasks();\n        loadOneTask(date.value);\n      }\n    } // Checking or unchecking specific object in an array\n\n\n    async function checkUncheck(element) {\n      try {\n        await axios.patch(\"http://localhost:8000/task/update/\" + element.task_id, {\n          completed: element.completed ? false : true\n        }, {\n          headers: authHeader()\n        });\n        console.log(\"Completed!\"); // rerender ALL to-do tasks\n\n        tasksList.value = await loadTasks(); // get selected date's slice\n\n        loadOneTask(date.value);\n      } catch (err) {\n        console.log(err);\n\n        if (err.response.status === 401) {\n          localStorage.removeItem(\"user\");\n        }\n      }\n\n      countTasks();\n    } // Deleting specific task\n\n\n    async function deleteTask(element) {\n      try {\n        await axios.get(\"http://localhost:8000/task/delete/\" + element.task_id, {\n          headers: authHeader()\n        }); // rerender ALL to-do tasks\n\n        console.log(\"Deleted!\");\n        tasksList.value = await loadTasks(); // get selected date's slice\n\n        loadOneTask(date.value);\n      } catch (err) {\n        console.log(err);\n\n        if (err.response.status === 401) {\n          localStorage.removeItem(\"user\");\n        }\n      }\n\n      updatePriority();\n    }\n\n    const __returned__ = {\n      date,\n      invalidInput,\n      enteredText,\n      editedText,\n      showButtons,\n      tasksList,\n      tasksSlice,\n      display,\n      loadTasks,\n      loadOneTask,\n      notCompletedTasks,\n      completedTasks,\n      totalTasks,\n      countTasks,\n      formatDate,\n      clearInvalidInput,\n      handleDate,\n      editText,\n      applyEditChanges,\n      makeEditable,\n      addNewTask,\n      updatePriority,\n      checkUncheck,\n      deleteTask,\n      reactive,\n      ref,\n      onMounted,\n      onUpdated,\n      onBeforeMount,\n      draggable,\n      PostIt,\n      authHeader,\n      axios,\n      Datepicker\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","onMounted","onUpdated","onBeforeMount","draggable","PostIt","authHeader","axios","Datepicker","date","Date","toISOString","slice","invalidInput","enteredText","editedText","showButtons","tasksList","tasksSlice","display","loadTasks","response","get","headers","result","data","newArray","forEach","element","filter","arr","length","push","tasks","editable","idx","findIndex","console","log","err","status","localStorage","removeItem","loadOneTask","task_date","value","sort","a","b","priority","notCompletedTasks","completedTasks","totalTasks","countTasks","ob","completed","formatDate","dateInput","toLocaleDateString","month","year","day","clearInvalidInput","handleDate","modelData","editText","event","target","innerText","applyEditChanges","text","patch","task_id","makeEditable","el","addNewTask","post","updatePriority","prioritiesList","Number","Object","keys","payload","checkUncheck","deleteTask"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/pages/TheTasks.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <the-header class=\"header\" />\r\n    <div class=\"grid-item-todo\">\r\n      <post-it>\r\n        <div v-if=\"!display\" class=\"no-tasks\">No Tasks to Display</div>\r\n        <div v-else>\r\n          <h1>{{ formatDate(new Date(tasksSlice.date)) }}</h1>\r\n          <div class=\"flex-headers\">\r\n            <div class=\"header-number\">#</div>\r\n            <div class=\"header-text\">Description</div>\r\n            <div class=\"header-edit\" v-show=\"showButtons\">Edit</div>\r\n            <div class=\"header-delete\" v-show=\"showButtons\">Del.</div>\r\n            <div class=\"header-completed\">Status</div>\r\n          </div>\r\n        </div>\r\n        <draggable\r\n          :list=\"tasksSlice.tasks\"\r\n          item-key=\"task_id\"\r\n          @change=\"updatePriority\"\r\n        >\r\n          <template #item=\"{ element }\">\r\n            <div\r\n              class=\"flexbox\"\r\n              @mouseover=\"showButtons = element.priority\"\r\n              @mouseout=\"showButtons = null\"\r\n            >\r\n              <div class=\"flex-id\">\r\n                <p>{{ element.priority }}</p>\r\n              </div>\r\n              <div\r\n                class=\"flex-text\"\r\n                :class=\"{ editSelectedBorder: element.editable }\"\r\n              >\r\n                <p\r\n                  :contenteditable=\"element.editable\"\r\n                  @input=\"editText\"\r\n                  @blur=\"applyEditChanges(element)\"\r\n                >\r\n                  {{ element.text }}\r\n                </p>\r\n              </div>\r\n              <div class=\"flex-buttons\">\r\n                <font-awesome-icon\r\n                  icon=\"fas fa-pen\"\r\n                  class=\"edit-icon\"\r\n                  :class=\"{ editSelected: element.editable }\"\r\n                  @click=\"makeEditable(element)\"\r\n                  v-show=\"showButtons === element.priority\"\r\n                />\r\n                <font-awesome-icon\r\n                  @click=\"deleteTask(element)\"\r\n                  icon=\"fas\r\n              fa-trash\"\r\n                  class=\"delete-icon\"\r\n                  v-show=\"showButtons === element.priority\"\r\n                />\r\n                <font-awesome-icon\r\n                  icon=\"fas fa-check\"\r\n                  class=\"check-icon\"\r\n                  :class=\"{ isChecked: element.completed }\"\r\n                  :id=\"element.id\"\r\n                  v-model=\"element.completed\"\r\n                  @click=\"checkUncheck(element)\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </draggable>\r\n        <form class=\"form-control\" @submit.prevent=\"addNewTask\">\r\n          <input\r\n            class=\"task-input\"\r\n            @blur=\"clearInvalidInput\"\r\n            @keyup=\"clearInvalidInput\"\r\n            v-model=\"enteredText\"\r\n            type=\"text\"\r\n          />\r\n          <button class=\"button-74\">add task</button>\r\n        </form>\r\n        <span v-if=\"invalidInput\" class=\"invalid-input\">Please Enter Text</span>\r\n      </post-it>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <h1>{{ date }}</h1>\r\n      <Datepicker\r\n        inline\r\n        :enableTimePicker=\"false\"\r\n        :monthChangeOnScroll=\"false\"\r\n        v-model=\"date\"\r\n        autoApply\r\n        @update:modelValue=\"handleDate\"\r\n      />\r\n      <div v-if=\"totalTasks\" class=\"task-status\">\r\n        <p>\r\n          # Tasks: <span id=\"total-tasks\">{{ totalTasks }}</span>\r\n        </p>\r\n        <p>\r\n          # Completed tasks:\r\n          <span id=\"complete-tasks\">{{ completedTasks }}</span>\r\n        </p>\r\n        <p>\r\n          # Not completed tasks:\r\n          <span id=\"uncomplete-tasks\">{{ notCompletedTasks }}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <the-footer class=\"footer\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// eslint-disable-next-line\r\nimport { reactive, ref, onMounted, onUpdated, onBeforeMount } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nimport PostIt from \"../components/layout/PostIt.vue\";\r\n\r\nimport authHeader from \"@/components/services/auth-header\";\r\nimport axios from \"axios\";\r\n\r\nimport Datepicker from \"@vuepic/vue-datepicker\";\r\nimport \"@vuepic/vue-datepicker/dist/main.css\";\r\n\r\nconst date = ref(new Date().toISOString().slice(0, 10));\r\n\r\nconst invalidInput = ref(false);\r\n\r\nconst enteredText = ref(\"\");\r\n\r\nconst editedText = ref(\"\");\r\n\r\nconst showButtons = ref(null);\r\n\r\n// Getting array for specific date\r\nconst tasksList = reactive([]);\r\nconst tasksSlice = ref([]);\r\nconst display = ref(false);\r\n\r\nasync function loadTasks() {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:8000/task\", {\r\n      headers: authHeader(),\r\n    });\r\n    // working with response\r\n    // console.log(response);\r\n    const result = response.data;\r\n\r\n    const newArray = reactive([]);\r\n    result.forEach((element) => {\r\n      if (!newArray.filter((arr) => arr[\"date\"] === element.date).length > 0) {\r\n        newArray.push({\r\n          date: element.date,\r\n          tasks: [{ ...element, editable: false }],\r\n        });\r\n      } else {\r\n        const idx = newArray.findIndex((arr) => arr.date === element.date);\r\n        newArray[idx].tasks.push({ ...element, editable: false });\r\n      }\r\n    });\r\n    // tasksList.value = newArray;\r\n    console.log(\"Load...\");\r\n    return newArray;\r\n  } catch (err) {\r\n    if (err.response.status === 401) {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n    console.log(err.response.status);\r\n  }\r\n}\r\nfunction loadOneTask(task_date) {\r\n  if (tasksList.value.filter((arr) => arr[\"date\"] === task_date).length === 0) {\r\n    // eslint-disable-next-line\r\n    display.value = false;\r\n    tasksSlice.value = [];\r\n  } else {\r\n    // console.log(tasksList.value.filter((arr) => arr[\"date\"] === task_date)[0]);\r\n    tasksSlice.value = tasksList.value.filter(\r\n      (arr) => arr[\"date\"] === task_date\r\n    )[0];\r\n    display.value = true;\r\n    // SORT THE SLICE\r\n    tasksSlice.value.tasks.sort((a, b) =>\r\n      a.priority > b.priority ? 1 : b.priority > a.priority ? -1 : 0\r\n    );\r\n  }\r\n}\r\n// SEE IF LOGGED IN\r\n\r\n// Count the number of tasks\r\nconst notCompletedTasks = ref(null);\r\nconst completedTasks = ref(null);\r\nconst totalTasks = ref(null);\r\n\r\nfunction countTasks() {\r\n  if (\"date\" in tasksSlice.value) {\r\n    console.log(\"YES\");\r\n    totalTasks.value = tasksSlice.value.tasks.length;\r\n    notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n      (ob) => !ob.completed\r\n    ).length;\r\n    completedTasks.value = totalTasks.value - notCompletedTasks.value;\r\n  } else {\r\n    console.log(\"NO\");\r\n\r\n    totalTasks.value = null;\r\n    completedTasks.value = null;\r\n    notCompletedTasks.value = null;\r\n  }\r\n}\r\n\r\nif (tasksSlice.value.length > 0) {\r\n  notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n    (ob) => !ob.completed\r\n  ).length;\r\n}\r\n\r\nonMounted(async () => {\r\n  tasksList.value = await loadTasks();\r\n  loadOneTask(date.value);\r\n  countTasks();\r\n  console.log(tasksSlice.value);\r\n  // updateList();\r\n});\r\n\r\nonUpdated(() => {\r\n  countTasks();\r\n});\r\n\r\n// custom function to return date in DD month-long YYYY format\r\nfunction formatDate(dateInput) {\r\n  return dateInput.toLocaleDateString(\"en-US\", {\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    day: \"numeric\",\r\n  });\r\n}\r\n\r\n// clear invalid input - to be used at blur\r\nfunction clearInvalidInput() {\r\n  invalidInput.value = false;\r\n}\r\n\r\n// WORKING WITH CALENDAR\r\n\r\nconst handleDate = (modelData) => {\r\n  date.value = modelData.toISOString().slice(0, 10);\r\n  // getting new slice based on picked date\r\n  tasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === date.value)[0];\r\n  display.value = true;\r\n\r\n  // creating empty array if there no tasks on picked date\r\n  if (!tasksSlice.value) {\r\n    tasksSlice.value = ref([]);\r\n    display.value = false;\r\n  }\r\n  loadOneTask(date.value);\r\n};\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\nasync function applyEditChanges(element) {\r\n  // No need to send HTTP request if Text is unchanged\r\n  if (editedText.value && editedText.value !== element.text) {\r\n    try {\r\n      await axios.patch(\r\n        \"http://localhost:8000/task/update/\" + element.task_id,\r\n        { text: editedText.value },\r\n        { headers: authHeader() }\r\n      );\r\n      console.log(\"Edited!\");\r\n      // rerender ALL to-do tasks\r\n      tasksList.value = await loadTasks();\r\n      // get selected date's slice\r\n      loadOneTask(date.value);\r\n    } catch (err) {\r\n      if (err.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n      console.log(err);\r\n    }\r\n  }\r\n}\r\n\r\n// make SELECTED paragraph tag editable\r\n// No link with backend here - elements become uneditable after refresh\r\nfunction makeEditable(element) {\r\n  tasksSlice.value.tasks.forEach((el, idx) => {\r\n    if (element.task_id == el.task_id) {\r\n      tasksSlice.value.tasks[idx].editable =\r\n        !tasksSlice.value.tasks[idx].editable;\r\n    }\r\n  });\r\n}\r\n\r\n// adding the task - Post Request\r\n\r\nasync function addNewTask() {\r\n  // priority is 1 if there are not tasks on that day, else it is autoincremented\r\n  const priority =\r\n    \"date\" in tasksSlice.value ? tasksSlice.value.tasks.length + 1 : 1;\r\n  if (enteredText.value !== \"\") {\r\n    try {\r\n      await axios.post(\r\n        \"http://localhost:8000/task\",\r\n        {\r\n          priority: priority,\r\n          date: date.value,\r\n          text: enteredText.value,\r\n          completed: false,\r\n        },\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      );\r\n      console.log(\"Add request\");\r\n\r\n      // rerender ALL to-do tasks\r\n      tasksList.value = await loadTasks();\r\n      // get selected date's slice\r\n      loadOneTask(date.value);\r\n      //clear input field\r\n      enteredText.value = \"\";\r\n    } catch (err) {\r\n      if (err.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n      console.log(err);\r\n    }\r\n  } else {\r\n    invalidInput.value = true;\r\n  }\r\n}\r\n\r\n// update tasks index/id on change - on drag / also used for deletion\r\nasync function updatePriority() {\r\n  // GET changed priorities FIRST\r\n  const prioritiesList = {};\r\n  for (const idx in tasksSlice.value.tasks) {\r\n    if (tasksSlice.value.tasks[idx].priority !== Number(idx) + 1) {\r\n      prioritiesList[tasksSlice.value.tasks[idx].task_id] = Number(idx) + 1;\r\n    }\r\n  }\r\n  if (Object.keys(prioritiesList).length > 0) {\r\n    const payload = {};\r\n    payload[date.value] = prioritiesList;\r\n    // Update MULTIPLE field with ONE PATCH Request\r\n    try {\r\n      await axios.patch(\r\n        \"http://localhost:8000/task/update_order\",\r\n        {\r\n          ...payload,\r\n        },\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      );\r\n      console.log(\"Multiple Rows Update!\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      if (err.response.status === 401) {\r\n        localStorage.removeItem(\"user\");\r\n      }\r\n    }\r\n\r\n    tasksList.value = await loadTasks();\r\n    loadOneTask(date.value);\r\n  }\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nasync function checkUncheck(element) {\r\n  try {\r\n    await axios.patch(\r\n      \"http://localhost:8000/task/update/\" + element.task_id,\r\n      { completed: element.completed ? false : true },\r\n      { headers: authHeader() }\r\n    );\r\n    console.log(\"Completed!\");\r\n    // rerender ALL to-do tasks\r\n    tasksList.value = await loadTasks();\r\n    // get selected date's slice\r\n    loadOneTask(date.value);\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (err.response.status === 401) {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  }\r\n  countTasks();\r\n}\r\n\r\n// Deleting specific task\r\n\r\nasync function deleteTask(element) {\r\n  try {\r\n    await axios.get(\"http://localhost:8000/task/delete/\" + element.task_id, {\r\n      headers: authHeader(),\r\n    });\r\n\r\n    // rerender ALL to-do tasks\r\n    console.log(\"Deleted!\");\r\n    tasksList.value = await loadTasks();\r\n    // get selected date's slice\r\n    loadOneTask(date.value);\r\n  } catch (err) {\r\n    console.log(err);\r\n    if (err.response.status === 401) {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  }\r\n  updatePriority();\r\n}\r\n</script>\r\n\r\n<style>\r\n/* STYLING CALENDAR */\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light {\r\n  background-color: transparent;\r\n  flex-grow: 1;\r\n  margin: 10px 10px;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar_header {\r\n  width: 100%;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar {\r\n  width: 100%;\r\n}\r\n</style>\r\n<style scoped>\r\n* {\r\n  font-family: \"Kalam\", cursive;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n.form-control {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-input {\r\n  width: 80%;\r\n  margin-left: 30px;\r\n  margin-right: 10px;\r\n  line-height: 25px;\r\n  font-size: 18px;\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n}\r\n\r\n.no-tasks {\r\n  height: 100px;\r\n  justify-content: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin-top: 40px;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 60px 1fr 60px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  /* background: #e7e7b6; */\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 1fr 50px;\r\n    gap: 1px;\r\n  }\r\n  .header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    margin-top: 2px;\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  .footer {\r\n    grid-row: 4/5;\r\n  }\r\n  .form-control {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 60px;\r\n  }\r\n  .button-74 {\r\n    width: 90px;\r\n    flex-shrink: 0;\r\n    margin-top: 10px;\r\n    margin-right: 40px;\r\n  }\r\n}\r\n\r\n/* TO-DO HEADINGS WITH FLEXBOX */\r\n\r\n.flex-headers {\r\n  display: flex;\r\n  /* background-color: rgb(153, 185, 66); */\r\n  border-bottom: 2px solid black;\r\n  margin: 0px 10px;\r\n  font-size: 16px;\r\n  padding: 5px 0px;\r\n  font-weight: bold;\r\n}\r\n.header-number {\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  flex-basis: 20px;\r\n}\r\n.header-text {\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.header-edit,\r\n.header-delete {\r\n  margin-right: 5px;\r\n}\r\n.header-completed {\r\n  margin-left: auto;\r\n  margin-right: 5px;\r\n}\r\n\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  gap: 5px;\r\n  margin-top: 0px;\r\n}\r\n.flex-text {\r\n  /* background: lightgray; */\r\n  text-align: left;\r\n  margin-left: 15px;\r\n  flex: 1;\r\n}\r\n\r\n.flex-id {\r\n  flex-basis: 15px;\r\n}\r\n.flex-id p {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Change border of the text if edit is selected*/\r\n\r\n.editSelectedBorder {\r\n  border: 1px solid orange;\r\n}\r\n.flex-buttons {\r\n  /* background: lightyellow; */\r\n  flex-basis: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  font-size: 18px;\r\n}\r\n.edit-icon:hover {\r\n  color: rgb(59, 166, 59);\r\n}\r\n\r\n.delete-icon:hover {\r\n  color: #9b4848;\r\n}\r\n\r\n/* CHECKBOX */\r\n.check-icon {\r\n  margin-left: auto;\r\n  margin-right: 5px;\r\n  color: #b04b4b;\r\n  font-size: 26px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n  margin-top: 5px;\r\n}\r\n\r\n.isChecked {\r\n  color: green;\r\n}\r\n\r\n/* BUTTON */\r\n.button-74 {\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n  border-radius: 25px;\r\n  box-shadow: #422800 3px 3px 0 0;\r\n  color: #422800;\r\n  cursor: pointer;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  padding: 0 18px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  flex: 0;\r\n  margin-right: 15px;\r\n  flex-basis: 100px;\r\n}\r\n\r\n.button-74:hover {\r\n  background-color: #fff;\r\n}\r\n\r\n.button-74:active {\r\n  box-shadow: #422800 2px 2px 0 0;\r\n  transform: translate(2px, 2px);\r\n}\r\n\r\n.invalid-input {\r\n  color: #b04b4b;\r\n  margin-right: 50px;\r\n  font-weight: bold;\r\n}\r\n.task-status p {\r\n  display: inline-block;\r\n  margin-right: 20px;\r\n}\r\n#total-tasks {\r\n  color: black;\r\n  font-weight: bold;\r\n}\r\n#complete-tasks {\r\n  color: #479d16;\r\n  font-weight: bold;\r\n}\r\n#uncomplete-tasks {\r\n  color: #841460;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}