{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport TheLogin from \"./pages/TheLogin\";\nimport TheRegistration from \"./pages/TheRegistration.vue\";\nimport TheTasks from \"./pages/TheTasks.vue\";\nimport { useAuthStore } from \"../src/components/store/userAuth.js\"; // const authStore = useAuthStore();\n// const ifAuthenticated = (to, from, next) => {\n//   if (JSON.parse(localStorage.getItem(\"user\")) && !authStore.errorLogIn) {\n//     next();\n//     return;\n//   } else {\n//     next(\"/auth\");\n//   }\n// };\n\nconst routes = [{\n  path: \"/auth\",\n  name: \"Authorization\",\n  component: TheLogin\n}, {\n  path: \"/register\",\n  name: \"Registration\",\n  component: TheRegistration\n}, {\n  path: \"/tasks\",\n  name: \"Tasks\",\n  component: TheTasks,\n  // beforeEnter: ifAuthenticated,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach(async (to, from) => {\n  const authStore = useAuthStore();\n\n  if (to.meta.requiresAuth && !authStore.isAuthenticated()) {\n    console.log(from);\n    return {\n      path: \"/auth\",\n      query: {\n        redirect: to.fullPath\n      }\n    };\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","TheLogin","TheRegistration","TheTasks","useAuthStore","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","authStore","isAuthenticated","console","log","query","redirect","fullPath"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport TheLogin from \"./pages/TheLogin\";\r\nimport TheRegistration from \"./pages/TheRegistration.vue\";\r\nimport TheTasks from \"./pages/TheTasks.vue\";\r\n\r\nimport { useAuthStore } from \"../src/components/store/userAuth.js\";\r\n\r\n// const authStore = useAuthStore();\r\n\r\n// const ifAuthenticated = (to, from, next) => {\r\n//   if (JSON.parse(localStorage.getItem(\"user\")) && !authStore.errorLogIn) {\r\n//     next();\r\n//     return;\r\n//   } else {\r\n//     next(\"/auth\");\r\n//   }\r\n// };\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/auth\",\r\n    name: \"Authorization\",\r\n    component: TheLogin,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    name: \"Registration\",\r\n    component: TheRegistration,\r\n  },\r\n\r\n  {\r\n    path: \"/tasks\",\r\n    name: \"Tasks\",\r\n    component: TheTasks,\r\n    // beforeEnter: ifAuthenticated,\r\n    meta: { requiresAuth: true },\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach(async (to, from) => {\r\n  const authStore = useAuthStore();\r\n  if (to.meta.requiresAuth && !authStore.isAuthenticated()) {\r\n    console.log(from);\r\n    return {\r\n      path: \"/auth\",\r\n      query: { redirect: to.fullPath },\r\n    };\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA+C,YAA/C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAASC,YAAT,QAA6B,qCAA7B,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,OADR;EAEEC,IAAI,EAAE,eAFR;EAGEC,SAAS,EAAEP;AAHb,CADa,EAMb;EACEK,IAAI,EAAE,WADR;EAEEC,IAAI,EAAE,cAFR;EAGEC,SAAS,EAAEN;AAHb,CANa,EAYb;EACEI,IAAI,EAAE,QADR;EAEEC,IAAI,EAAE,OAFR;EAGEC,SAAS,EAAEL,QAHb;EAIE;EACAM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAhB;AALR,CAZa,CAAf;AAqBA,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,gBAAgB,EADC;EAE1BK;AAF0B,CAAD,CAA3B;AAKAM,MAAM,CAACE,UAAP,CAAkB,OAAOC,EAAP,EAAWC,IAAX,KAAoB;EACpC,MAAMC,SAAS,GAAGZ,YAAY,EAA9B;;EACA,IAAIU,EAAE,CAACL,IAAH,CAAQC,YAAR,IAAwB,CAACM,SAAS,CAACC,eAAV,EAA7B,EAA0D;IACxDC,OAAO,CAACC,GAAR,CAAYJ,IAAZ;IACA,OAAO;MACLT,IAAI,EAAE,OADD;MAELc,KAAK,EAAE;QAAEC,QAAQ,EAAEP,EAAE,CAACQ;MAAf;IAFF,CAAP;EAID;AACF,CATD;AAWA,eAAeX,MAAf"},"metadata":{},"sourceType":"module"}