{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-10659e34\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"grid-container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, \"HEADER GOES HERE\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"grid-item-todo\"\n};\nconst _hoisted_4 = {\n  class: \"flexbox\"\n};\nconst _hoisted_5 = {\n  class: \"flex-text\"\n};\nconst _hoisted_6 = [\"contenteditable\", \"onBlur\"];\nconst _hoisted_7 = {\n  class: \"flex-buttons\"\n};\nconst _hoisted_8 = [\"id\", \"onUpdate:modelValue\", \"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onSubmit\"];\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"text \", -1\n/* HOISTED */\n));\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"add task\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = {\n  class: \"grid-item-calendar\"\n};\n\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"My Calendar\", -1\n/* HOISTED */\n));\n\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"FOOTER GOES HERE\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, _toDisplayString($setup.date), 1\n  /* TEXT */\n  ), _createVNode($setup[\"draggable\"], {\n    list: $setup.myArray,\n    \"item-key\": \"id\",\n    onChange: $setup.updateList\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", {\n      contenteditable: element.editable,\n      class: \"text\",\n      onInput: $setup.editText,\n      onBlur: $event => $setup.applyEditChanges(element)\n    }, _toDisplayString(element.text), 41\n    /* TEXT, PROPS, HYDRATE_EVENTS */\n    , _hoisted_6)]), _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      class: \"check\",\n      id: element.id,\n      \"onUpdate:modelValue\": $event => element.completed = $event,\n      onClick: $event => $setup.checkUncheck(element)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_8), [[_vModelCheckbox, element.completed]]), element.completed === true ? (_openBlock(), _createElementBlock(\"a\", {\n      key: 0,\n      class: \"close\",\n      onClick: $event => $setup.deleteTask(element)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_9)) : (_openBlock(), _createBlock(_component_font_awesome_icon, {\n      key: 1,\n      icon: \"fas fa-pen\",\n      class: _normalizeClass([\"edit-icon\", {\n        editSelected: element.editable\n      }]),\n      onClick: $event => $setup.makeEditable(element)\n    }, null, 8\n    /* PROPS */\n    , [\"class\", \"onClick\"]))])])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\"]), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.addTask, [\"prevent\"])\n  }, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.task = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.task]]), _hoisted_12], 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_10)]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createVNode($setup[\"FullCalendar\"], {\n    options: $setup.calendarOptions\n  })]), _hoisted_15]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;gEACTC,oBAAiC,QAAjC,EAAiC,IAAjC,EAAQ,kBAAR,EAAwB;AAAA;AAAxB;;;EACKD,KAAK,EAAC;;;EAIAA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;EAUNA,KAAK,EAAC;;;;;;iEA0BfC,oBAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY;AAAA;AAAZ;;iEAEAA,oBAAyB,QAAzB,EAAyB,IAAzB,EAAQ,UAAR,EAAgB;AAAA;AAAhB;;;EAGCD,KAAK,EAAC;;;iEACTC,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,EAAe;AAAA;AAAf;;iEAGFA,oBAES,QAFT,EAES,IAFT,EAES,cADPA,oBAAuB,GAAvB,EAAuB,IAAvB,EAAG,kBAAH,CACO,CAFT;;AAAA;;;;;uBApDFC,oBAuDM,KAvDN,cAuDM,CAtDJC,UAsDI,EArDJF,oBA6CM,KA7CN,cA6CM,CA5CJA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAmBG,iBAAZC,WAAY,CAAnB,EAAW;EAAA;EAAX,CA4CI,EA3CJC,aAqCYD,mBArCZ,EAqCY;IArCAE,IAAI,EAAEF,cAqCN;IArCe,YAAS,IAqCxB;IArC8BG,QAAM,EAAEH;EAqCtC,CArCZ;IACaI,IAAI,WACb,CAiCM;MAlCWC;IAkCX,CAjCN,KADwB,CACxBT,oBAiCM,KAjCN,cAiCM,CAhCJA,oBASM,KATN,cASM,CARJA,oBAOI,GAPJ,EAOI;MANDU,eAAe,EAAED,OAAO,CAACE,QAMxB;MALFZ,KAAK,EAAC,MAKJ;MAJDa,OAAK,EAAER,eAIN;MAHDS,MAAI,YAAET,wBAAiBK,OAAjB;IAGL,CAPJ,mBAMKA,OAAO,CAACK,KANb,EAMiB;IAAA;IANjB,EAMiBC,UANjB,CAQI,CATN,CAgCI,EAtBJf,oBAqBM,KArBN,cAqBM,iBApBJA,oBAME,OANF,EAME;MALAgB,IAAI,EAAC,UAKL;MAJAjB,KAAK,EAAC,OAIN;MAHCkB,EAAE,EAAER,OAAO,CAACQ,EAGb;uCAFSR,OAAO,CAACS,YAASC,MAE1B;MADCC,OAAK,YAAEhB,oBAAaK,OAAb;IACR,CANF;;IAAA,kCAIWA,OAAO,CAACS,YAgBf,EATIT,OAAO,CAACS,SAAR,KAAiB,sBAHzBjB,oBAIK,GAJL,EAIK;YAAA;MAHHF,KAAK,EAAC,OAGH;MAFFqB,OAAK,YAAEhB,kBAAWK,OAAX;IAEL,CAJL;;IAAA,gCAKAY,aAMEC,4BANF,EAME;YAAA;MALAC,IAAI,EAAC,YAKL;MAJAxB,KAAK,mBAAC,WAAD,EAAY;QAAAyB,cACOf,OAAO,CAACE;MADf,CAAZ,EAIL;MADCS,OAAK,YAAEhB,oBAAaK,OAAb;IACR,CANF;;IAAA,wBAOI,CArBN,CAsBI,CAjCN,CADwB,CAAX;;;;GADjB;;EAAA,WA2CI,EALJT,oBAIO,MAJP,EAIO;IAJAyB,QAAM,iBAAUrB,cAAV,EAAiB,WAAjB;EAIN,CAJP,GACEsB,6BACA1B,oBAAoC,OAApC,EAAoC;+DAApBI,cAAIe,OAAgB;IAAdH,IAAI,EAAC;EAAS,CAApC;;EAAA,kBAAgBZ,gBAChBuB,YAHF;;EAAA,cAKI,CA7CN,CAqDI,EAPJ3B,oBAGM,KAHN,eAGM,CAFJ4B,WAEI,EADJvB,aAA2CD,sBAA3C,EAA2C;IAA5ByB,OAAO,EAAEzB;EAAmB,CAA3C,CACI,CAHN,CAOI,EAHJ0B,WAGI,CAvDN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_toDisplayString","$setup","_createVNode","list","onChange","item","element","contenteditable","editable","onInput","onBlur","text","_hoisted_6","type","id","completed","$event","onClick","_createBlock","_component_font_awesome_icon","icon","editSelected","onSubmit","_hoisted_11","_hoisted_12","_hoisted_14","options","_hoisted_15"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <header>HEADER GOES HERE</header>\r\n    <div class=\"grid-item-todo\">\r\n      <h1>{{ date }}</h1>\r\n      <draggable :list=\"myArray\" item-key=\"id\" @change=\"updateList\">\r\n        <template #item=\"{ element }\">\r\n          <div class=\"flexbox\">\r\n            <div class=\"flex-text\">\r\n              <p\r\n                :contenteditable=\"element.editable\"\r\n                class=\"text\"\r\n                @input=\"editText\"\r\n                @blur=\"applyEditChanges(element)\"\r\n              >\r\n                {{ element.text }}\r\n              </p>\r\n            </div>\r\n            <div class=\"flex-buttons\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"check\"\r\n                :id=\"element.id\"\r\n                v-model=\"element.completed\"\r\n                @click=\"checkUncheck(element)\"\r\n              />\r\n\r\n              <a\r\n                class=\"close\"\r\n                @click=\"deleteTask(element)\"\r\n                v-if=\"element.completed === true\"\r\n              ></a>\r\n              <font-awesome-icon\r\n                icon=\"fas fa-pen\"\r\n                class=\"edit-icon\"\r\n                :class=\"{ editSelected: element.editable }\"\r\n                v-else\r\n                @click=\"makeEditable(element)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </draggable>\r\n      <form @submit.prevent=\"addTask\">\r\n        <label>text </label>\r\n        <input v-model=\"task\" type=\"text\" />\r\n        <button>add task</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <h1>My Calendar</h1>\r\n      <FullCalendar :options=\"calendarOptions\" />\r\n    </div>\r\n    <footer>\r\n      <p>FOOTER GOES HERE</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\n\r\nimport FullCalendar from \"@fullcalendar/vue3\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst task = ref();\r\n\r\nconst date = ref(\"1/1/2022\");\r\n\r\nconst editedText = ref(\"\");\r\n\r\nconst myArray = reactive([\r\n  { text: \"AAA\", id: 1, completed: true, editable: false },\r\n  { text: \"BBB\", id: 2, completed: false, editable: false },\r\n  { text: \"CCC\", id: 3, completed: false, editable: false },\r\n  { text: \"DDD\", id: 4, completed: true, editable: false },\r\n]);\r\n\r\nconst calendarOptions = {\r\n  plugins: [dayGridPlugin, interactionPlugin],\r\n  initialView: \"dayGridMonth\",\r\n  dateClick: handleDateClick,\r\n  events: [\r\n    { title: \"3 tasks\", date: \"2022-10-06\" },\r\n    { title: \"event 2\", date: \"2019-04-02\" },\r\n  ],\r\n  eventColor: \"transparent\",\r\n  eventTextColor: \"red\",\r\n  selectable: true,\r\n};\r\n\r\n// WORKING WITH CALENDAR\r\n\r\nfunction handleDateClick(arg) {\r\n  alert(\"date click!\" + arg.dateStr);\r\n  date.value = arg.dateStr;\r\n}\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\n\r\nfunction applyEditChanges(element) {\r\n  if (editedText.value) {\r\n    myArray.forEach((el, idx) => {\r\n      if (element.id === el.id) {\r\n        myArray[idx].text = editedText.value;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// make SELECTED paragraph tag editable\r\nfunction makeEditable(element) {\r\n  myArray.forEach((el, idx) => {\r\n    if (element.id === el.id) {\r\n      myArray[idx].editable = !myArray[idx].editable;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTask() {\r\n  myArray.push({\r\n    text: task.value,\r\n    id: myArray.length + 1,\r\n    checked: false,\r\n  });\r\n  task.value = \"\";\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  myArray.forEach((element, index) => {\r\n    myArray[index].id = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray[index].completed = !myArray[index].completed;\r\n}\r\n\r\nfunction deleteTask(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray.splice(index, 1);\r\n  updateList();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 80px 1fr 80px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background: skyblue;\r\n  /* making HEADER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background: lightblue;\r\n  /* making FOOTER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n  background: lightgreen;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  background: lightsteelblue;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 80px 1fr 1fr 80px;\r\n  }\r\n  header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  footer {\r\n    grid-row: 4/5;\r\n  }\r\n}\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.flex-text {\r\n  background: lightgray;\r\n  flex-basis: 400px;\r\n}\r\n\r\n.flex-buttons {\r\n  flex: 1;\r\n  background: lightyellow;\r\n}\r\n\r\n.edit-icon {\r\n  margin-top: 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n}\r\n\r\n.text {\r\n  padding-left: 0px;\r\n}\r\n\r\n.list-item {\r\n  border: 1px solid black;\r\n}\r\n\r\n/* CLOSE BUTTON */\r\n.close {\r\n  position: relative;\r\n  opacity: 0.4;\r\n  top: 10px;\r\n  /* float: right; */\r\n}\r\n.close:hover {\r\n  opacity: 1;\r\n}\r\n.close:before,\r\n.close:after {\r\n  position: absolute;\r\n  left: 15px;\r\n  content: \" \";\r\n  height: 22px;\r\n  width: 3px;\r\n  background-color: #333;\r\n}\r\n.close:before {\r\n  transform: rotate(45deg);\r\n}\r\n.close:after {\r\n  transform: rotate(-45deg);\r\n}\r\n/* CLOSE BUTTON */\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}