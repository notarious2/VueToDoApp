{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from \"pinia\";\nimport axios from \"axios\";\nimport authHeader from \"../services/auth-header\";\nexport const useTaskStore = defineStore(\"tasks\", {\n  state: () => ({\n    display: false,\n    tasksList: [],\n    tasksSlice: []\n  }),\n  actions: {\n    async loadTasks() {\n      try {\n        const response = await axios.get(\"http://localhost:8000/task\", {\n          headers: authHeader()\n        }); // working with response\n\n        const result = response.data;\n        const newArray = [];\n        result.forEach(element => {\n          if (!newArray.filter(arr => arr[\"date\"] === element.date).length > 0) {\n            newArray.push({\n              date: element.date,\n              tasks: [{ ...element,\n                editable: false\n              }]\n            });\n          } else {\n            const idx = newArray.findIndex(arr => arr.date === element.date);\n            newArray[idx].tasks.push({ ...element,\n              editable: false\n            });\n          }\n        }); // tasksList.value = newArray;\n\n        console.log(\"Load...\");\n        return newArray;\n      } catch (err) {\n        if (err.response.status === 401) {\n          localStorage.removeItem(\"user\");\n        }\n\n        console.log(err.response.status);\n      }\n    },\n\n    loadOneTask(task_date) {\n      if (this.tasksList.filter(arr => arr[\"date\"] === task_date).length === 0) {\n        this.display = false;\n        this.tasksSlice = [];\n      } else {\n        // console.log(tasksList.value.filter((arr) => arr[\"date\"] === task_date)[0]);\n        this.tasksSlice = this.tasksList.filter(arr => arr[\"date\"] === task_date)[0];\n        this.display = true; // SORT THE SLICE\n\n        this.tasksSlice.tasks.sort((a, b) => a.priority > b.priority ? 1 : b.priority > a.priority ? -1 : 0);\n      }\n    },\n\n    // Checking or unchecking specific object in an array\n    async checkUncheck(element) {\n      try {\n        await axios.patch(\"http://localhost:8000/task/update/\" + element.task_id, {\n          completed: element.completed ? false : true\n        }, {\n          headers: authHeader()\n        });\n        console.log(\"Completed!\"); // rerender ALL to-do tasks\n\n        this.tasksList = await this.loadTasks(); // get selected date's slice\n\n        this.loadOneTask(this.date);\n      } catch (err) {\n        console.log(err);\n\n        if (err.response.status === 401) {\n          localStorage.removeItem(\"user\");\n        }\n      }\n    },\n\n    // adding the task - Post Request\n    async addNewTask() {\n      // priority is 1 if there are not tasks on that day, else it is autoincremented\n      const priority = \"date\" in tasksSlice.value ? tasksSlice.value.tasks.length + 1 : 1;\n\n      if (enteredText.value !== \"\") {\n        try {\n          await axios.post(\"http://localhost:8000/task\", {\n            priority: priority,\n            date: date.value,\n            text: enteredText.value,\n            completed: false\n          }, {\n            headers: authHeader()\n          });\n          console.log(\"Add request\"); // rerender ALL to-do tasks\n\n          tasksList.value = await loadTasks(); // get selected date's slice\n\n          loadOneTask(date.value); //clear input field\n\n          enteredText.value = \"\";\n        } catch (err) {\n          if (err.response.status === 401) {\n            localStorage.removeItem(\"user\");\n          }\n\n          console.log(err);\n        }\n      } else {\n        invalidInput.value = true;\n      }\n    }\n\n  }\n});","map":{"version":3,"names":["defineStore","axios","authHeader","useTaskStore","state","display","tasksList","tasksSlice","actions","loadTasks","response","get","headers","result","data","newArray","forEach","element","filter","arr","date","length","push","tasks","editable","idx","findIndex","console","log","err","status","localStorage","removeItem","loadOneTask","task_date","sort","a","b","priority","checkUncheck","patch","task_id","completed","addNewTask","value","enteredText","post","text","invalidInput"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/components/store/TaskStore.js"],"sourcesContent":["import { defineStore } from \"pinia\";\r\nimport axios from \"axios\";\r\nimport authHeader from \"../services/auth-header\";\r\n\r\nexport const useTaskStore = defineStore(\"tasks\", {\r\n  state: () => ({\r\n    display: false,\r\n    tasksList: [],\r\n    tasksSlice: [],\r\n  }),\r\n  actions: {\r\n    async loadTasks() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8000/task\", {\r\n          headers: authHeader(),\r\n        });\r\n        // working with response\r\n        const result = response.data;\r\n        const newArray = [];\r\n        result.forEach((element) => {\r\n          if (\r\n            !newArray.filter((arr) => arr[\"date\"] === element.date).length > 0\r\n          ) {\r\n            newArray.push({\r\n              date: element.date,\r\n              tasks: [{ ...element, editable: false }],\r\n            });\r\n          } else {\r\n            const idx = newArray.findIndex((arr) => arr.date === element.date);\r\n            newArray[idx].tasks.push({ ...element, editable: false });\r\n          }\r\n        });\r\n        // tasksList.value = newArray;\r\n        console.log(\"Load...\");\r\n        return newArray;\r\n      } catch (err) {\r\n        if (err.response.status === 401) {\r\n          localStorage.removeItem(\"user\");\r\n        }\r\n        console.log(err.response.status);\r\n      }\r\n    },\r\n    loadOneTask(task_date) {\r\n      if (\r\n        this.tasksList.filter((arr) => arr[\"date\"] === task_date).length === 0\r\n      ) {\r\n        this.display = false;\r\n        this.tasksSlice = [];\r\n      } else {\r\n        // console.log(tasksList.value.filter((arr) => arr[\"date\"] === task_date)[0]);\r\n        this.tasksSlice = this.tasksList.filter(\r\n          (arr) => arr[\"date\"] === task_date\r\n        )[0];\r\n        this.display = true;\r\n        // SORT THE SLICE\r\n        this.tasksSlice.tasks.sort((a, b) =>\r\n          a.priority > b.priority ? 1 : b.priority > a.priority ? -1 : 0\r\n        );\r\n      }\r\n    },\r\n\r\n    // Checking or unchecking specific object in an array\r\n    async checkUncheck(element) {\r\n      try {\r\n        await axios.patch(\r\n          \"http://localhost:8000/task/update/\" + element.task_id,\r\n          { completed: element.completed ? false : true },\r\n          { headers: authHeader() }\r\n        );\r\n        console.log(\"Completed!\");\r\n        // rerender ALL to-do tasks\r\n        this.tasksList = await this.loadTasks();\r\n        // get selected date's slice\r\n        this.loadOneTask(this.date);\r\n      } catch (err) {\r\n        console.log(err);\r\n        if (err.response.status === 401) {\r\n          localStorage.removeItem(\"user\");\r\n        }\r\n      }\r\n    },\r\n    // adding the task - Post Request\r\n    async addNewTask() {\r\n      // priority is 1 if there are not tasks on that day, else it is autoincremented\r\n      const priority =\r\n        \"date\" in tasksSlice.value ? tasksSlice.value.tasks.length + 1 : 1;\r\n      if (enteredText.value !== \"\") {\r\n        try {\r\n          await axios.post(\r\n            \"http://localhost:8000/task\",\r\n            {\r\n              priority: priority,\r\n              date: date.value,\r\n              text: enteredText.value,\r\n              completed: false,\r\n            },\r\n            {\r\n              headers: authHeader(),\r\n            }\r\n          );\r\n          console.log(\"Add request\");\r\n\r\n          // rerender ALL to-do tasks\r\n          tasksList.value = await loadTasks();\r\n          // get selected date's slice\r\n          loadOneTask(date.value);\r\n          //clear input field\r\n          enteredText.value = \"\";\r\n        } catch (err) {\r\n          if (err.response.status === 401) {\r\n            localStorage.removeItem(\"user\");\r\n          }\r\n          console.log(err);\r\n        }\r\n      } else {\r\n        invalidInput.value = true;\r\n      }\r\n    },\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}