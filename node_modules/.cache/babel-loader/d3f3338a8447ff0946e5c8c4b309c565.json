{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-10659e34\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"grid-container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, \"HEADER GOES HERE\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"grid-item-todo\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"no-tasks\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"flex-headers\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"header-number\\\" data-v-10659e34>#</div><div class=\\\"header-text\\\" data-v-10659e34>Description</div><div class=\\\"header-edit\\\" data-v-10659e34>Edit</div><div class=\\\"header-delete\\\" data-v-10659e34>Del.</div><div class=\\\"header-completed\\\" data-v-10659e34>Status</div>\", 5);\n\nconst _hoisted_11 = [_hoisted_6];\nconst _hoisted_12 = {\n  class: \"flexbox\"\n};\nconst _hoisted_13 = {\n  class: \"flex-id\"\n};\nconst _hoisted_14 = [\"contenteditable\", \"onBlur\"];\nconst _hoisted_15 = {\n  class: \"flex-buttons\"\n};\nconst _hoisted_16 = [\"onSubmit\"];\n\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"button-74\"\n}, \"add task\", -1\n/* HOISTED */\n));\n\nconst _hoisted_18 = {\n  class: \"grid-item-calendar\"\n};\n\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"FOOTER GOES HERE\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, _toDisplayString($setup.tasksSlice.date), 1\n  /* TEXT */\n  ), !$setup.display ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"No Tasks to Display\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_11)), _createVNode($setup[\"draggable\"], {\n    list: $setup.tasksSlice.tasks,\n    \"item-key\": \"task_id\",\n    onChange: $setup.updateList\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"p\", null, _toDisplayString(element.priority), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"flex-text\", {\n        editSelectedBorder: element.editable\n      }])\n    }, [_createElementVNode(\"p\", {\n      contenteditable: element.editable,\n      onInput: $setup.editText,\n      onBlur: $event => $setup.applyEditChanges(element)\n    }, _toDisplayString(element.text), 41\n    /* TEXT, PROPS, HYDRATE_EVENTS */\n    , _hoisted_14)], 2\n    /* CLASS */\n    ), _createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_font_awesome_icon, {\n      icon: \"fas fa-pen\",\n      class: _normalizeClass([\"edit-icon\", {\n        editSelected: element.editable\n      }]),\n      onClick: $event => $setup.makeEditable(element)\n    }, null, 8\n    /* PROPS */\n    , [\"class\", \"onClick\"]), _createVNode(_component_font_awesome_icon, {\n      onClick: $event => $setup.deleteTask(element),\n      icon: \"fas\\r\\n              fa-trash\",\n      class: \"delete-icon\"\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_font_awesome_icon, {\n      icon: \"fas fa-check\",\n      class: _normalizeClass([\"check-icon\", {\n        isChecked: element.completed\n      }]),\n      id: element.id,\n      modelValue: element.completed,\n      \"onUpdate:modelValue\": $event => element.completed = $event,\n      onClick: $event => $setup.checkUncheck(element)\n    }, null, 8\n    /* PROPS */\n    , [\"class\", \"id\", \"modelValue\", \"onUpdate:modelValue\", \"onClick\"])])])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\"]), _createElementVNode(\"form\", {\n    class: \"form-control\",\n    onSubmit: _withModifiers($setup.addTask, [\"prevent\"])\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"task-input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.task = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.task]]), _hoisted_17], 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_16)]), _createElementVNode(\"div\", _hoisted_18, [_createCommentVNode(\" <FullCalendar\\r\\n        :options=\\\"calendarOptions\\\"\\r\\n        ref=\\\"calendar\\\"\\r\\n        class=\\\"calendar\\\"\\r\\n        @click=\\\"pickDate\\\" \\r\\n           />\"), _createVNode($setup[\"Datepicker\"], {\n    inline: \"\",\n    enableTimePicker: false,\n    modelValue: $setup.date,\n    \"onUpdate:modelValue\": [_cache[1] || (_cache[1] = $event => $setup.date = $event), $setup.handleDate],\n    autoApply: \"\"\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"]), _createElementVNode(\"h1\", null, _toDisplayString($setup.date), 1\n  /* TEXT */\n  ), _createCommentVNode(\" <h1>{{ date }}</h1> \"), _createCommentVNode(\" <h1>{{ date.toISOString().slice(0, 10) }}</h1> \"), _createCommentVNode(\" <h1>{{ date.toISOString().slice(0, 10) }}</h1> \"), _createCommentVNode(\" <h1>{{ formatDates(dateCal) }}</h1> \"), _createCommentVNode(\" <h1>{{ formatDates(new Date(\\\"2022-10-14\\\")) }}</h1> \")]), _hoisted_19]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_6","_createElementBlock","_hoisted_2","_toDisplayString","$setup","date","_hoisted_11","_createVNode","list","tasks","onChange","item","element","priority","editSelectedBorder","editable","contenteditable","onInput","onBlur","text","_hoisted_14","_component_font_awesome_icon","icon","editSelected","onClick","isChecked","completed","id","$event","onSubmit","type","_hoisted_17","_createCommentVNode","inline","enableTimePicker","autoApply","_hoisted_19"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <header>HEADER GOES HERE</header>\r\n    <div class=\"grid-item-todo\">\r\n      <h1>{{ tasksSlice.date }}</h1>\r\n      <div v-if=\"!display\" class=\"no-tasks\">No Tasks to Display</div>\r\n      <div v-else class=\"flex-headers\">\r\n        <div class=\"header-number\">#</div>\r\n        <div class=\"header-text\">Description</div>\r\n        <div class=\"header-edit\">Edit</div>\r\n        <div class=\"header-delete\">Del.</div>\r\n        <div class=\"header-completed\">Status</div>\r\n      </div>\r\n      <draggable\r\n        :list=\"tasksSlice.tasks\"\r\n        item-key=\"task_id\"\r\n        @change=\"updateList\"\r\n      >\r\n        <template #item=\"{ element }\">\r\n          <div class=\"flexbox\">\r\n            <div class=\"flex-id\">\r\n              <p>{{ element.priority }}</p>\r\n            </div>\r\n            <div\r\n              class=\"flex-text\"\r\n              :class=\"{ editSelectedBorder: element.editable }\"\r\n            >\r\n              <p\r\n                :contenteditable=\"element.editable\"\r\n                @input=\"editText\"\r\n                @blur=\"applyEditChanges(element)\"\r\n              >\r\n                {{ element.text }}\r\n              </p>\r\n            </div>\r\n            <div class=\"flex-buttons\">\r\n              <font-awesome-icon\r\n                icon=\"fas fa-pen\"\r\n                class=\"edit-icon\"\r\n                :class=\"{ editSelected: element.editable }\"\r\n                @click=\"makeEditable(element)\"\r\n              />\r\n              <font-awesome-icon\r\n                @click=\"deleteTask(element)\"\r\n                icon=\"fas\r\n              fa-trash\"\r\n                class=\"delete-icon\"\r\n              />\r\n              <font-awesome-icon\r\n                icon=\"fas fa-check\"\r\n                class=\"check-icon\"\r\n                :class=\"{ isChecked: element.completed }\"\r\n                :id=\"element.id\"\r\n                v-model=\"element.completed\"\r\n                @click=\"checkUncheck(element)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </draggable>\r\n      <form class=\"form-control\" @submit.prevent=\"addTask\">\r\n        <input class=\"task-input\" v-model=\"task\" type=\"text\" />\r\n        <button class=\"button-74\">add task</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <!-- <FullCalendar\r\n        :options=\"calendarOptions\"\r\n        ref=\"calendar\"\r\n        class=\"calendar\"\r\n        @click=\"pickDate\" \r\n           />-->\r\n      <Datepicker\r\n        inline\r\n        :enableTimePicker=\"false\"\r\n        v-model=\"date\"\r\n        autoApply\r\n        @update:modelValue=\"handleDate\"\r\n      />\r\n      <h1>{{ date }}</h1>\r\n      <!-- <h1>{{ date }}</h1> -->\r\n      <!-- <h1>{{ date.toISOString().slice(0, 10) }}</h1> -->\r\n\r\n      <!-- <h1>{{ date.toISOString().slice(0, 10) }}</h1> -->\r\n      <!-- <h1>{{ formatDates(dateCal) }}</h1> -->\r\n      <!-- <h1>{{ formatDates(new Date(\"2022-10-14\")) }}</h1> -->\r\n    </div>\r\n    <footer>\r\n      <p>FOOTER GOES HERE</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, watch, onMounted } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\n\r\nimport authHeader from \"@/components/services/auth-header\";\r\nimport axios from \"axios\";\r\n\r\n// import FullCalendar from \"@fullcalendar/vue3\";\r\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\r\n// import interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nimport Datepicker from \"@vuepic/vue-datepicker\";\r\nimport \"@vuepic/vue-datepicker/dist/main.css\";\r\n\r\n// custom function to return date in DD month-long YYYY format\r\n// function formatDates(dateInput) {\r\n//   return dateInput.toLocaleDateString(\"en-US\", {\r\n//     month: \"long\",\r\n//     year: \"numeric\",\r\n//     day: \"numeric\",\r\n//   });\r\n// }\r\n\r\nconst date = ref(new Date());\r\n\r\nconst task = ref();\r\n\r\nconst tasks = ref([]);\r\n\r\n// const dateCal = ref(new Date());\r\n\r\nconst editedText = ref(\"\");\r\n\r\nconst tasksList = reactive([\r\n  {\r\n    date: \"2022-10-12\",\r\n    tasks: [\r\n      {\r\n        text: \"BBB\",\r\n        priority: 1,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X12\",\r\n      },\r\n      {\r\n        text: \"CCC\",\r\n        priority: 2,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X123\",\r\n      },\r\n      {\r\n        text: \"CCC\",\r\n        priority: 3,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X1124\",\r\n      },\r\n      {\r\n        text: \"DDD\",\r\n        priority: 4,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sd\",\r\n      },\r\n      {\r\n        text: \"AAA\",\r\n        priority: 6,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sda\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    date: \"2022-10-13\",\r\n    tasks: [\r\n      {\r\n        text: \"Uno\",\r\n        priority: 1,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X12\",\r\n      },\r\n      {\r\n        text: \"Dos\",\r\n        priority: 2,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X123\",\r\n      },\r\n      {\r\n        text: \"Tres\",\r\n        priority: 3,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X1124\",\r\n      },\r\n      {\r\n        text: \"Quatro\",\r\n        priority: 4,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sd\",\r\n      },\r\n      {\r\n        text: \"Cinco\",\r\n        priority: 6,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sda\",\r\n      },\r\n    ],\r\n  },\r\n]);\r\n// Getting array for specific date\r\nconst tasksSlice = ref([]);\r\n\r\ntasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === \"2022-10-12\")[0];\r\n\r\nconsole.log(\"Initial tasks\", tasksSlice.value);\r\n\r\nconsole.log(\"result\", tasksSlice.value.length);\r\n\r\n// Count the number of completed tasks\r\nconst notCompletedTasks = ref(null);\r\nif (tasksSlice.value.length > 0) {\r\n  notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n    (ob) => !ob.completed\r\n  ).length;\r\n}\r\n\r\n// To display if there are tasks\r\nconst display = tasksSlice.value.tasks.length > 0 ? ref(true) : ref(false);\r\n\r\nconsole.log(\"initial display\", display.value);\r\n\r\nasync function loadTasks() {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:8000/task\", {\r\n      headers: authHeader(),\r\n    });\r\n    // working with response\r\n    const result = response.data;\r\n    for (const key of Object.keys(result)) {\r\n      tasks.value.push(result[key]);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nonMounted(() => {\r\n  console.log(\"Mounted\");\r\n\r\n  // updateList();\r\n  loadTasks(); //Load tasks from backend\r\n  console.log(\"tasks\", tasks.value);\r\n});\r\n\r\n// WATCHING TO-DO LIST TO DISPLAY/NOT DISPLAY\r\n// WATCHING TO-DO LIST TO DISPLAY # UNCOMPLETED TASKS\r\n\r\nwatch(tasksSlice.value, function () {\r\n  console.log(\"watching...\");\r\n  if (tasksSlice.value.tasks.length > 0) {\r\n    display.value = true;\r\n    notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n      (ob) => ob.completed\r\n    ).length;\r\n  } else {\r\n    display.value = false;\r\n  }\r\n});\r\n\r\nwatch(date.value, function () {\r\n  console.log(\"date changed!\");\r\n});\r\n// WORKING WITH CALENDAR\r\n\r\n// function handleDateClick(arg) {\r\n//   // alert(\"date click!\" + arg.dateStr);\r\n//   date.value = formatDate(arg.date, {\r\n//     month: \"long\",\r\n//     year: \"numeric\",\r\n//     day: \"numeric\",\r\n//   });\r\n//   // changing slice based on new date picked\r\n//   if (tasksList.filter((arr) => arr[\"date\"] === date.value)[0]) {\r\n//     tasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === date.value)[0];\r\n//   } else {\r\n//     tasksSlice.value = ref([]);\r\n//   }\r\n// }\r\n\r\nconst handleDate = (modelData) => {\r\n  date.value = modelData.toISOString().slice(0, 10);\r\n  // getting new slice based on picked date\r\n  tasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === date.value)[0];\r\n};\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\n\r\nfunction applyEditChanges(element) {\r\n  if (editedText.value) {\r\n    tasksSlice.value.tasks.forEach((el, idx) => {\r\n      if (element.task_id === el.task_id) {\r\n        tasksSlice.value.tasks[idx].text = editedText.value;\r\n      }\r\n    });\r\n  }\r\n}\r\nconsole.log(\"tasks:\", tasksSlice.value.tasks);\r\n\r\n// make SELECTED paragraph tag editable\r\nfunction makeEditable(element) {\r\n  tasksSlice.value.tasks.forEach((el, idx) => {\r\n    if (element.task_id == el.task_id) {\r\n      tasksSlice.value.tasks[idx].editable =\r\n        !tasksSlice.value.tasks[idx].editable;\r\n      console.log(idx, tasksSlice.value.tasks[idx]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTask() {\r\n  console.log(tasksSlice.value);\r\n  tasksSlice.value.tasks.push({\r\n    text: task.value,\r\n    priority: tasksSlice.value.tasks.length + 1,\r\n    checked: false,\r\n    completed: false,\r\n    task_id: (Math.random() + 1).toString(36).substring(7),\r\n  });\r\n  task.value = \"\";\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  tasksSlice.value.tasks.forEach((element, index) => {\r\n    tasksSlice.value.tasks[index].priority = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = tasksSlice.value.tasks.indexOf(element);\r\n  tasksSlice.value.tasks[index].completed =\r\n    !tasksSlice.value.tasks[index].completed;\r\n}\r\n// Deleting specific task\r\n\r\nfunction deleteTask(element) {\r\n  let index = tasksSlice.value.tasks.indexOf(element);\r\n  tasksSlice.value.tasks.splice(index, 1);\r\n  updateList();\r\n}\r\n</script>\r\n\r\n<style>\r\n/* STYLING CALENDAR */\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light {\r\n  background-color: transparent;\r\n  flex-grow: 1;\r\n  margin: 10px 10px;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar_header {\r\n  width: 100%;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar {\r\n  width: 100%;\r\n}\r\n</style>\r\n<style scoped>\r\n* {\r\n  font-family: \"Kalam\", cursive;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n.form-control {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-input {\r\n  width: 80%;\r\n  margin-left: 30px;\r\n  margin-right: 10px;\r\n  line-height: 25px;\r\n  font-size: 18px;\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n}\r\n\r\n.no-tasks {\r\n  height: 100px;\r\n  justify-content: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 60px 1fr 60px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background: skyblue;\r\n  /* making HEADER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.calendar {\r\n  margin-top: 10px;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background: lightblue;\r\n  /* making FOOTER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n  background: lightgreen;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  background: lightsteelblue;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 1fr 50px;\r\n  }\r\n  header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  footer {\r\n    grid-row: 4/5;\r\n  }\r\n  .form-control {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 60px;\r\n  }\r\n  .button-74 {\r\n    width: 90px;\r\n    flex-shrink: 0;\r\n    margin-top: 10px;\r\n    margin-right: 40px;\r\n  }\r\n}\r\n\r\n/* TO-DO HEADINGS WITH FLEXBOX */\r\n\r\n.flex-headers {\r\n  display: flex;\r\n  background-color: rgb(97, 213, 136);\r\n  margin: 0px 10px;\r\n  font-size: 14px;\r\n  padding: 5px 0px;\r\n}\r\n.header-number {\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  flex-basis: 20px;\r\n}\r\n.header-text {\r\n  flex-grow: 1;\r\n}\r\n\r\n.header-edit,\r\n.header-delete {\r\n  margin-right: 5px;\r\n}\r\n.header-completed {\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  gap: 5px;\r\n}\r\n.flex-text {\r\n  background: lightgray;\r\n  flex: 1;\r\n}\r\n\r\n.flex-id {\r\n  flex-basis: 15px;\r\n}\r\n.flex-id p {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Change border of the text if edit is selected*/\r\n\r\n.editSelectedBorder {\r\n  border: 1px solid orange;\r\n}\r\n.flex-buttons {\r\n  background: lightyellow;\r\n  flex-basis: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.delete-icon:hover {\r\n  color: #9b4848;\r\n}\r\n\r\n/* CHECKBOX */\r\n.check-icon {\r\n  margin-left: 15px;\r\n  color: #b04b4b;\r\n  font-size: 26px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n  margin-top: 5px;\r\n}\r\n\r\n.isChecked {\r\n  color: green;\r\n}\r\n\r\n/* BUTTON */\r\n.button-74 {\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n  border-radius: 25px;\r\n  box-shadow: #422800 3px 3px 0 0;\r\n  color: #422800;\r\n  cursor: pointer;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  padding: 0 18px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  flex: 0;\r\n  margin-right: 15px;\r\n  flex-basis: 100px;\r\n}\r\n\r\n.button-74:hover {\r\n  background-color: #fff;\r\n}\r\n\r\n.button-74:active {\r\n  box-shadow: #422800 2px 2px 0 0;\r\n  transform: translate(2px, 2px);\r\n}\r\n\r\n/* @media (min-width: 768px) {\r\n  .button-74 {\r\n    min-width: 120px;\r\n    padding: 0 25px;\r\n  }\r\n} */\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}