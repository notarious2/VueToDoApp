{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref } from \"vue\";\nimport draggable from \"vuedraggable\";\nexport default {\n  __name: 'TasksTemplate2',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const task = ref();\n    const date = \"1/1/2022\";\n    const myArray = reactive([{\n      name: \"AAA\",\n      id: 1,\n      completed: true\n    }, {\n      name: \"BBB\",\n      id: 2,\n      completed: false\n    }, {\n      name: \"CCC\",\n      id: 3,\n      completed: false\n    }, {\n      name: \"DDD\",\n      id: 4,\n      completed: true\n    }]);\n\n    function addTask() {\n      myArray.push({\n        name: task.value,\n        id: myArray.length + 1,\n        checked: false\n      });\n      task.value = \"\";\n    } // update tasks index/id on change - on drag\n\n\n    function updateList() {\n      myArray.forEach((element, index) => {\n        myArray[index].id = index + 1;\n      });\n    } // Checking or unchecking specific object in an array\n\n\n    function checkUncheck(element) {\n      let index = myArray.indexOf(element);\n      myArray[index].completed = !myArray[index].completed;\n      console.log(myArray);\n    }\n\n    function deleteTask(element) {\n      let index = myArray.indexOf(element);\n      myArray.splice(index, 1);\n      console.log(myArray);\n      updateList();\n    }\n\n    const __returned__ = {\n      task,\n      date,\n      myArray,\n      addTask,\n      updateList,\n      checkUncheck,\n      deleteTask,\n      reactive,\n      ref,\n      draggable\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AAyDA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,KAA9B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;;;;;;;IAEA,MAAMC,IAAI,GAAGF,GAAG,EAAhB;IAEA,MAAMG,IAAI,GAAG,UAAb;IAEA,MAAMC,OAAO,GAAGL,QAAQ,CAAC,CACvB;MAAEM,IAAI,EAAE,KAAR;MAAeC,EAAE,EAAE,CAAnB;MAAsBC,SAAS,EAAE;IAAjC,CADuB,EAEvB;MAAEF,IAAI,EAAE,KAAR;MAAeC,EAAE,EAAE,CAAnB;MAAsBC,SAAS,EAAE;IAAjC,CAFuB,EAGvB;MAAEF,IAAI,EAAE,KAAR;MAAeC,EAAE,EAAE,CAAnB;MAAsBC,SAAS,EAAE;IAAjC,CAHuB,EAIvB;MAAEF,IAAI,EAAE,KAAR;MAAeC,EAAE,EAAE,CAAnB;MAAsBC,SAAS,EAAE;IAAjC,CAJuB,CAAD,CAAxB;;IAOA,SAASC,OAAT,GAAmB;MACjBJ,OAAO,CAACK,IAAR,CAAa;QACXJ,IAAI,EAAEH,IAAI,CAACQ,KADA;QAEXJ,EAAE,EAAEF,OAAO,CAACO,MAAR,GAAiB,CAFV;QAGXC,OAAO,EAAE;MAHE,CAAb;MAKAV,IAAI,CAACQ,KAAL,GAAa,EAAb;IACD,EACD;;;IACA,SAASG,UAAT,GAAsB;MACpBT,OAAO,CAACU,OAAR,CAAgB,CAACC,OAAD,EAAUC,KAAV,KAAoB;QAClCZ,OAAO,CAACY,KAAD,CAAP,CAAeV,EAAf,GAAoBU,KAAK,GAAG,CAA5B;MACD,CAFD;IAGD,EAED;;;IACA,SAASC,YAAT,CAAsBF,OAAtB,EAA+B;MAC7B,IAAIC,KAAK,GAAGZ,OAAO,CAACc,OAAR,CAAgBH,OAAhB,CAAZ;MACAX,OAAO,CAACY,KAAD,CAAP,CAAeT,SAAf,GAA2B,CAACH,OAAO,CAACY,KAAD,CAAP,CAAeT,SAA3C;MACAY,OAAO,CAACC,GAAR,CAAYhB,OAAZ;IACD;;IAED,SAASiB,UAAT,CAAoBN,OAApB,EAA6B;MAC3B,IAAIC,KAAK,GAAGZ,OAAO,CAACc,OAAR,CAAgBH,OAAhB,CAAZ;MACAX,OAAO,CAACkB,MAAR,CAAeN,KAAf,EAAsB,CAAtB;MACAG,OAAO,CAACC,GAAR,CAAYhB,OAAZ;MACAS,UAAU;IACX","names":["reactive","ref","draggable","task","date","myArray","name","id","completed","addTask","push","value","length","checked","updateList","forEach","element","index","checkUncheck","indexOf","console","log","deleteTask","splice"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/pages/TasksTemplate2.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>{{ date }}</h1>\r\n    <draggable :list=\"myArray\" item-key=\"id\" @change=\"updateList\">\r\n      <template #item=\"{ element }\">\r\n        <div class=\"list-item\">\r\n          <div class=\"checkbox\">\r\n            <p class=\"text\">{{ element.id }} {{ element.name }}</p>\r\n            <input\r\n              type=\"checkbox\"\r\n              class=\"check\"\r\n              :id=\"element.id\"\r\n              v-model=\"element.completed\"\r\n              @click=\"checkUncheck(element)\"\r\n            />\r\n            <label :for=\"element.id\" class=\"label\">\r\n              <!-- TO-DO TEXT -->\r\n              <svg viewBox=\"0 0 100 100\" height=\"50\" width=\"50\">\r\n                <rect\r\n                  x=\"30\"\r\n                  y=\"20\"\r\n                  width=\"50\"\r\n                  height=\"50\"\r\n                  stroke=\"black\"\r\n                  fill=\"none\"\r\n                />\r\n                <g transform=\"translate(0,-952.36216)\" id=\"layer1\">\r\n                  <path\r\n                    id=\"path4146\"\r\n                    d=\"m 55,978 c -73,19 46,71 15,2 C 60,959 13,966 30,1007 c 12,30 61,13 46,-23\"\r\n                    fill=\"none\"\r\n                    stroke=\"black\"\r\n                    stroke-width=\"4\"\r\n                    class=\"path1\"\r\n                  />\r\n                </g>\r\n              </svg>\r\n              <!-- DELETE BUTTON IF TASK IS COMPLETED -->\r\n            </label>\r\n            <a\r\n              class=\"close\"\r\n              @click=\"deleteTask(element)\"\r\n              v-if=\"element.completed === true\"\r\n            ></a>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </draggable>\r\n    <form @submit.prevent=\"addTask\">\r\n      <label>text </label>\r\n      <input v-model=\"task\" type=\"text\" />\r\n      <button>add task</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\n\r\nconst task = ref();\r\n\r\nconst date = \"1/1/2022\";\r\n\r\nconst myArray = reactive([\r\n  { name: \"AAA\", id: 1, completed: true },\r\n  { name: \"BBB\", id: 2, completed: false },\r\n  { name: \"CCC\", id: 3, completed: false },\r\n  { name: \"DDD\", id: 4, completed: true },\r\n]);\r\n\r\nfunction addTask() {\r\n  myArray.push({\r\n    name: task.value,\r\n    id: myArray.length + 1,\r\n    checked: false,\r\n  });\r\n  task.value = \"\";\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  myArray.forEach((element, index) => {\r\n    myArray[index].id = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray[index].completed = !myArray[index].completed;\r\n  console.log(myArray);\r\n}\r\n\r\nfunction deleteTask(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray.splice(index, 1);\r\n  console.log(myArray);\r\n  updateList();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: left;\r\n}\r\n\r\n.checkbox {\r\n  display: flex;\r\n}\r\n\r\n/* .label {\r\n  display: flex;\r\n} */\r\n\r\n.container {\r\n  background-color: beige;\r\n  width: 50%;\r\n}\r\n\r\n.list-item {\r\n  background-color: blanchedalmond;\r\n  padding: 2px 2px;\r\n  margin: 2px 2px;\r\n  width: 80%;\r\n  position: relative;\r\n}\r\n/* CHECKBOX RELATED STYLING */\r\n.checkbox:not(:last-child) {\r\n  border-bottom: 2px solid white;\r\n}\r\n.check {\r\n  /* width: 50px;\r\n  height: 50px; */\r\n  position: relative;\r\n  opacity: 0;\r\n}\r\n\r\n.path1 {\r\n  stroke-dasharray: 400;\r\n  stroke-dashoffset: 400;\r\n  transition: 0.5s all;\r\n}\r\n\r\n.check:checked + label svg g path {\r\n  stroke-dashoffset: 0;\r\n}\r\n\r\n/* CLOSE BUTTON */\r\n.close {\r\n  position: relative;\r\n  opacity: 0.3;\r\n  top: 5px;\r\n}\r\n.close:hover {\r\n  opacity: 1;\r\n}\r\n.close:before,\r\n.close:after {\r\n  position: absolute;\r\n  left: 15px;\r\n  content: \" \";\r\n  height: 22px;\r\n  width: 3px;\r\n  background-color: #333;\r\n}\r\n.close:before {\r\n  transform: rotate(45deg);\r\n}\r\n.close:after {\r\n  transform: rotate(-45deg);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}