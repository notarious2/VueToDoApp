{"ast":null,"code":"import { toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07345ca4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"list-item\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"add task\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"draggable\"], {\n    list: $setup.myArray,\n    onEnd: _ctx.endDrag,\n    \"item-key\": \"id\"\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString(element.id) + \" \" + _toDisplayString(element.name) + \" \", 1\n    /* TEXT */\n    ), _withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => element.checked = $event,\n      onClick: $event => $setup.checkUncheck(element)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2), [[_vModelCheckbox, element.checked]]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(element)\n    }, \"remove\", 8\n    /* PROPS */\n    , _hoisted_3)]), _hoisted_4]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\", \"onEnd\"]);\n}","map":{"version":3,"mappings":";;;;;EAGWA,KAAK,EAAC;;;;;gEASXC,oBAAyB,QAAzB,EAAyB,IAAzB,EAAQ,UAAR,EAAgB;AAAA;AAAhB;;;uBAXJC,aAaYC,mBAbZ,EAaY;IAbAC,IAAI,EAAED,cAaN;IAbgBE,KAAG,EAAEC,YAarB;IAb8B,YAAS;EAavC,CAbZ;IACaC,IAAI,WACb,CAQM;MATWC;IASX,CARN,KADwB,CACxBP,oBAQM,KARN,cAQM,mCAPDO,OAAO,CAACC,MAAK,MAACC,iBAAGF,OAAO,CAACG,IAAX,IAAkB,KACnC;IAAA;KAMI,kBANJV,oBAIE,OAJF,EAIE;MAHAW,IAAI,EAAC,UAGL;uCAFSJ,OAAO,CAACK,UAAOC,MAExB;MADCC,OAAK,YAAEZ,oBAAaK,OAAb;IACR,CAJF;;IAAA,kCAEWA,OAAO,CAACK,UAIf,EADJZ,oBAAoD,QAApD,EAAoD;MAA3Cc,OAAK,YAAEZ,kBAAWK,OAAX;IAAoC,CAApD,EAAqC,QAArC,EAA2C;IAAA;IAA3C,EAA2CQ,UAA3C,CACI,CARN,CADwB,EAUxBC,UAVwB,CAAX;;;;GADjB;;EAAA","names":["class","_createElementVNode","_createBlock","$setup","list","onEnd","_ctx","item","element","id","_toDisplayString","name","type","checked","$event","onClick","_hoisted_3","_hoisted_4"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate2.vue"],"sourcesContent":["<template>\r\n  <draggable :list=\"myArray\" @end=\"endDrag\" item-key=\"id\">\r\n    <template #item=\"{ element }\">\r\n      <div class=\"list-item\">\r\n        {{ element.id }} {{ element.name }}\r\n        <input\r\n          type=\"checkbox\"\r\n          v-model=\"element.checked\"\r\n          @click=\"checkUncheck(element)\"\r\n        />\r\n        <button @click=\"deleteTask(element)\">remove</button>\r\n      </div>\r\n      <button>add task</button>\r\n    </template>\r\n  </draggable>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nconst myArray = reactive([\r\n  { name: \"AAA\", id: 1, checked: true },\r\n  { name: \"BBB\", id: 2, checked: false },\r\n  { name: \"CCC\", id: 3, checked: false },\r\n  { name: \"DDD\", id: 4, checked: true },\r\n]);\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray[index].checked = !myArray[index].checked;\r\n  console.log(myArray);\r\n}\r\n\r\nfunction deleteTask(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray.splice(index, 1);\r\n  console.log(myArray);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n  margin-left: 40px;\r\n}\r\n.list-item {\r\n  background-color: blanchedalmond;\r\n  padding: 2px 2px;\r\n  margin: 2px 2px;\r\n  width: 50%;\r\n  position: relative;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}