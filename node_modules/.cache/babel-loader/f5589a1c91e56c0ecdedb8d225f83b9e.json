{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07345ca4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"list-item\"\n};\nconst _hoisted_2 = [\"onClick\", \"onTouchstart\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"draggable\"], {\n    modelValue: $setup.myArray,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.myArray = $event),\n    onEnd: _ctx.endDrag,\n    \"item-key\": \"id\"\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString(element.id) + \" \" + _toDisplayString(element.name) + \" \", 1\n    /* TEXT */\n    ), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(element),\n      onTouchstart: $event => $setup.deleteTask(element)\n    }, \" x \", 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_2)])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\", \"onEnd\"]);\n}","map":{"version":3,"mappings":";;;;;EAGWA,KAAK,EAAC;;;;uBAFfC,aASYC,mBATZ,EASY;gBATQA,cASR;+DATQA,iBAAOC,OASf;IATkBC,KAAG,EAAEC,YASvB;IATgC,YAAS;EASzC,CATZ;IACaC,IAAI,WACb,CAKM;MANWC;IAMX,CALN,KADwB,CACxBC,oBAKM,KALN,cAKM,mCAJDD,OAAO,CAACE,MAAK,MAACC,iBAAGH,OAAO,CAACI,IAAX,IAAkB,KACnC;IAAA;KAGI,EAHJH,oBAES,QAFT,EAES;MAFAI,OAAK,YAAEV,kBAAWK,OAAX,CAEP;MAF6BM,YAAU,YAAEX,kBAAWK,OAAX;IAEzC,CAFT,EAAuE,KAAvE,EAEA;IAAA;IAFA,EAEAO,UAFA,CAGI,CALN,CADwB,CAAX;;;;GADjB;;EAAA","names":["class","_createBlock","$setup","$event","onEnd","_ctx","item","element","_createElementVNode","id","_toDisplayString","name","onClick","onTouchstart","_hoisted_2"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate2.vue"],"sourcesContent":["<template>\r\n  <draggable v-model=\"myArray\" @end=\"endDrag\" item-key=\"id\">\r\n    <template #item=\"{ element }\">\r\n      <div class=\"list-item\">\r\n        {{ element.id }} {{ element.name }}\r\n        <button @click=\"deleteTask(element)\" @touchstart=\"deleteTask(element)\">\r\n          x\r\n        </button>\r\n      </div>\r\n    </template>\r\n  </draggable>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nconst myArray = reactive([\r\n  { name: \"AAA\", id: 1 },\r\n  { name: \"BBB\", id: 2 },\r\n  { name: \"CCC\", id: 3 },\r\n  { name: \"DDD\", id: 4 },\r\n]);\r\n\r\nfunction deleteTask(element) {\r\n  console.log(element.id);\r\n  console.log(element.name);\r\n  console.log(myArray);\r\n  myArray.splice(element.id, 1);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.list-item {\r\n  background-color: blanchedalmond;\r\n  padding: 2px 2px;\r\n  margin: 2px 2px;\r\n  width: 50%;\r\n  position: relative;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}