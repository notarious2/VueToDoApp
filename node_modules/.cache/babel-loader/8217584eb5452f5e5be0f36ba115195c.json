{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, watch } from \"vue\";\nimport draggable from \"vuedraggable\";\nimport { formatDate } from \"@fullcalendar/core\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nexport default {\n  __name: 'TasksTemplate',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const task = ref();\n    const date = ref(\"1/1/2022\");\n    console.log(date.value);\n    const editedText = ref(\"\");\n    const myArray = reactive([{\n      text: \"AAA\",\n      id: 1,\n      completed: true,\n      editable: false\n    }, {\n      text: \"BBB\",\n      id: 2,\n      completed: false,\n      editable: false\n    }, {\n      text: \"CCC\",\n      id: 3,\n      completed: false,\n      editable: false\n    }, {\n      text: \"DDD\",\n      id: 4,\n      completed: true,\n      editable: false\n    }]);\n    console.log(typeof myArray.values);\n    const display = myArray.value ? ref(false) : ref(true);\n    console.log(display.value);\n    const calendarOptions = {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      dateClick: handleDateClick,\n      events: [{\n        title: \"3 tasks\",\n        date: \"2022-10-06\"\n      }, {\n        title: \"event 2\",\n        date: \"2019-04-02\"\n      }],\n      eventColor: \"transparent\",\n      eventTextColor: \"red\",\n      selectable: true\n    }; // WATCHING TO-DO LIST TO DISPLAY/NOT DISPLAY\n\n    watch(myArray, function () {\n      if (myArray.length > 0) {\n        display.value = true;\n      } else {\n        display.value = false;\n      }\n    }); // WORKING WITH CALENDAR\n\n    function handleDateClick(arg) {\n      // alert(\"date click!\" + arg.dateStr);\n      date.value = formatDate(arg.date, {\n        month: \"long\",\n        year: \"numeric\",\n        day: \"numeric\"\n      });\n    } // listen to input inside edited paragraph text\n\n\n    function editText(event) {\n      editedText.value = event.target.innerText;\n    } // Apply above changes at blur\n\n\n    function applyEditChanges(element) {\n      if (editedText.value) {\n        myArray.forEach((el, idx) => {\n          if (element.id === el.id) {\n            myArray[idx].text = editedText.value;\n          }\n        });\n      }\n    } // make SELECTED paragraph tag editable\n\n\n    function makeEditable(element) {\n      myArray.forEach((el, idx) => {\n        if (element.id === el.id) {\n          myArray[idx].editable = !myArray[idx].editable;\n        }\n      });\n    }\n\n    function addTask() {\n      myArray.push({\n        text: task.value,\n        id: myArray.length + 1,\n        checked: false\n      });\n      task.value = \"\";\n    } // update tasks index/id on change - on drag\n\n\n    function updateList() {\n      myArray.forEach((element, index) => {\n        myArray[index].id = index + 1;\n      });\n    } // Checking or unchecking specific object in an array\n\n\n    function checkUncheck(element) {\n      let index = myArray.indexOf(element);\n      myArray[index].completed = !myArray[index].completed;\n    }\n\n    function deleteTask(element) {\n      let index = myArray.indexOf(element);\n      myArray.splice(index, 1);\n      updateList();\n    }\n\n    const __returned__ = {\n      task,\n      date,\n      editedText,\n      myArray,\n      display,\n      calendarOptions,\n      handleDateClick,\n      editText,\n      applyEditChanges,\n      makeEditable,\n      addTask,\n      updateList,\n      checkUncheck,\n      deleteTask,\n      reactive,\n      ref,\n      watch,\n      draggable,\n      formatDate,\n      FullCalendar,\n      dayGridPlugin,\n      interactionPlugin\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AAoEA,SAASA,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,QAAqC,KAArC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;;;;;;;IAEA,MAAMC,IAAI,GAAGP,GAAG,EAAhB;IAEA,MAAMQ,IAAI,GAAGR,GAAG,CAAC,UAAD,CAAhB;IACAS,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;IAEA,MAAMC,UAAU,GAAGZ,GAAG,CAAC,EAAD,CAAtB;IAEA,MAAMa,OAAO,GAAGd,QAAQ,CAAC,CACvB;MAAEe,IAAI,EAAE,KAAR;MAAeC,EAAE,EAAE,CAAnB;MAAsBC,SAAS,EAAE,IAAjC;MAAuCC,QAAQ,EAAE;IAAjD,CADuB,EAEvB;MAAEH,IAAI,EAAE,KAAR;MAAeC,EAAE,EAAE,CAAnB;MAAsBC,SAAS,EAAE,KAAjC;MAAwCC,QAAQ,EAAE;IAAlD,CAFuB,EAGvB;MAAEH,IAAI,EAAE,KAAR;MAAeC,EAAE,EAAE,CAAnB;MAAsBC,SAAS,EAAE,KAAjC;MAAwCC,QAAQ,EAAE;IAAlD,CAHuB,EAIvB;MAAEH,IAAI,EAAE,KAAR;MAAeC,EAAE,EAAE,CAAnB;MAAsBC,SAAS,EAAE,IAAjC;MAAuCC,QAAQ,EAAE;IAAjD,CAJuB,CAAD,CAAxB;IAOAR,OAAO,CAACC,GAAR,CAAY,OAAOG,OAAO,CAACK,MAA3B;IAEA,MAAMC,OAAO,GAAGN,OAAO,CAACF,KAAR,GAAgBX,GAAG,CAAC,KAAD,CAAnB,GAA6BA,GAAG,CAAC,IAAD,CAAhD;IACAS,OAAO,CAACC,GAAR,CAAYS,OAAO,CAACR,KAApB;IAEA,MAAMS,eAAe,GAAG;MACtBC,OAAO,EAAE,CAAChB,aAAD,EAAgBC,iBAAhB,CADa;MAEtBgB,WAAW,EAAE,cAFS;MAGtBC,SAAS,EAAEC,eAHW;MAItBC,MAAM,EAAE,CACN;QAAEC,KAAK,EAAE,SAAT;QAAoBlB,IAAI,EAAE;MAA1B,CADM,EAEN;QAAEkB,KAAK,EAAE,SAAT;QAAoBlB,IAAI,EAAE;MAA1B,CAFM,CAJc;MAQtBmB,UAAU,EAAE,aARU;MAStBC,cAAc,EAAE,KATM;MAUtBC,UAAU,EAAE;IAVU,CAAxB,EAaA;;IAEA5B,KAAK,CAACY,OAAD,EAAU,YAAY;MACzB,IAAIA,OAAO,CAACiB,MAAR,GAAiB,CAArB,EAAwB;QACtBX,OAAO,CAACR,KAAR,GAAgB,IAAhB;MACD,CAFD,MAEO;QACLQ,OAAO,CAACR,KAAR,GAAgB,KAAhB;MACD;IACF,CANI,CAAL,EAQA;;IAEA,SAASa,eAAT,CAAyBO,GAAzB,EAA8B;MAC5B;MACAvB,IAAI,CAACG,KAAL,GAAaR,UAAU,CAAC4B,GAAG,CAACvB,IAAL,EAAW;QAChCwB,KAAK,EAAE,MADyB;QAEhCC,IAAI,EAAE,SAF0B;QAGhCC,GAAG,EAAE;MAH2B,CAAX,CAAvB;IAKD,EAED;;;IACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;MACvBxB,UAAU,CAACD,KAAX,GAAmByB,KAAK,CAACC,MAAN,CAAaC,SAAhC;IACD,EAED;;;IAEA,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;MACjC,IAAI5B,UAAU,CAACD,KAAf,EAAsB;QACpBE,OAAO,CAAC4B,OAAR,CAAgB,CAACC,EAAD,EAAKC,GAAL,KAAa;UAC3B,IAAIH,OAAO,CAACzB,EAAR,KAAe2B,EAAE,CAAC3B,EAAtB,EAA0B;YACxBF,OAAO,CAAC8B,GAAD,CAAP,CAAa7B,IAAb,GAAoBF,UAAU,CAACD,KAA/B;UACD;QACF,CAJD;MAKD;IACF,EAED;;;IACA,SAASiC,YAAT,CAAsBJ,OAAtB,EAA+B;MAC7B3B,OAAO,CAAC4B,OAAR,CAAgB,CAACC,EAAD,EAAKC,GAAL,KAAa;QAC3B,IAAIH,OAAO,CAACzB,EAAR,KAAe2B,EAAE,CAAC3B,EAAtB,EAA0B;UACxBF,OAAO,CAAC8B,GAAD,CAAP,CAAa1B,QAAb,GAAwB,CAACJ,OAAO,CAAC8B,GAAD,CAAP,CAAa1B,QAAtC;QACD;MACF,CAJD;IAKD;;IAED,SAAS4B,OAAT,GAAmB;MACjBhC,OAAO,CAACiC,IAAR,CAAa;QACXhC,IAAI,EAAEP,IAAI,CAACI,KADA;QAEXI,EAAE,EAAEF,OAAO,CAACiB,MAAR,GAAiB,CAFV;QAGXiB,OAAO,EAAE;MAHE,CAAb;MAKAxC,IAAI,CAACI,KAAL,GAAa,EAAb;IACD,EACD;;;IACA,SAASqC,UAAT,GAAsB;MACpBnC,OAAO,CAAC4B,OAAR,CAAgB,CAACD,OAAD,EAAUS,KAAV,KAAoB;QAClCpC,OAAO,CAACoC,KAAD,CAAP,CAAelC,EAAf,GAAoBkC,KAAK,GAAG,CAA5B;MACD,CAFD;IAGD,EAED;;;IACA,SAASC,YAAT,CAAsBV,OAAtB,EAA+B;MAC7B,IAAIS,KAAK,GAAGpC,OAAO,CAACsC,OAAR,CAAgBX,OAAhB,CAAZ;MACA3B,OAAO,CAACoC,KAAD,CAAP,CAAejC,SAAf,GAA2B,CAACH,OAAO,CAACoC,KAAD,CAAP,CAAejC,SAA3C;IACD;;IAED,SAASoC,UAAT,CAAoBZ,OAApB,EAA6B;MAC3B,IAAIS,KAAK,GAAGpC,OAAO,CAACsC,OAAR,CAAgBX,OAAhB,CAAZ;MACA3B,OAAO,CAACwC,MAAR,CAAeJ,KAAf,EAAsB,CAAtB;MACAD,UAAU;IACX","names":["reactive","ref","watch","draggable","formatDate","FullCalendar","dayGridPlugin","interactionPlugin","task","date","console","log","value","editedText","myArray","text","id","completed","editable","values","display","calendarOptions","plugins","initialView","dateClick","handleDateClick","events","title","eventColor","eventTextColor","selectable","length","arg","month","year","day","editText","event","target","innerText","applyEditChanges","element","forEach","el","idx","makeEditable","addTask","push","checked","updateList","index","checkUncheck","indexOf","deleteTask","splice"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/pages/TasksTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <header>HEADER GOES HERE</header>\r\n    <div class=\"grid-item-todo\">\r\n      <h1>{{ date }}</h1>\r\n      <div v-if=\"!display\">\r\n        <p>NO TASKS TO DISPLAY</p>\r\n      </div>\r\n      <draggable v-else :list=\"myArray\" item-key=\"id\" @change=\"updateList\">\r\n        <template #item=\"{ element }\">\r\n          <div class=\"flexbox\">\r\n            <div class=\"flex-id\">\r\n              <p>{{ element.id }}</p>\r\n            </div>\r\n            <div\r\n              class=\"flex-text\"\r\n              :class=\"{ editSelectedBorder: element.editable }\"\r\n            >\r\n              <p\r\n                :contenteditable=\"element.editable\"\r\n                @input=\"editText\"\r\n                @blur=\"applyEditChanges(element)\"\r\n              >\r\n                {{ element.text }}\r\n              </p>\r\n            </div>\r\n            <div class=\"flex-buttons\">\r\n              <font-awesome-icon\r\n                icon=\"fas fa-pen\"\r\n                class=\"edit-icon\"\r\n                :class=\"{ editSelected: element.editable }\"\r\n                @click=\"makeEditable(element)\"\r\n              />\r\n              <font-awesome-icon\r\n                @click=\"deleteTask(element)\"\r\n                icon=\"fas\r\n              fa-trash\"\r\n                class=\"delete-icon\"\r\n              />\r\n              <font-awesome-icon\r\n                icon=\"fas fa-check\"\r\n                class=\"check-icon\"\r\n                :class=\"{ isChecked: element.completed }\"\r\n                :id=\"element.id\"\r\n                v-model=\"element.completed\"\r\n                @click=\"checkUncheck(element)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </draggable>\r\n      <form @submit.prevent=\"addTask\">\r\n        <label>text </label>\r\n        <input v-model=\"task\" type=\"text\" />\r\n        <button>add task</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <h1>My Calendar</h1>\r\n      <FullCalendar :options=\"calendarOptions\" />\r\n    </div>\r\n    <footer>\r\n      <p>FOOTER GOES HERE</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, watch } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nimport { formatDate } from \"@fullcalendar/core\";\r\n\r\nimport FullCalendar from \"@fullcalendar/vue3\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst task = ref();\r\n\r\nconst date = ref(\"1/1/2022\");\r\nconsole.log(date.value);\r\n\r\nconst editedText = ref(\"\");\r\n\r\nconst myArray = reactive([\r\n  { text: \"AAA\", id: 1, completed: true, editable: false },\r\n  { text: \"BBB\", id: 2, completed: false, editable: false },\r\n  { text: \"CCC\", id: 3, completed: false, editable: false },\r\n  { text: \"DDD\", id: 4, completed: true, editable: false },\r\n]);\r\n\r\nconsole.log(typeof myArray.values);\r\n\r\nconst display = myArray.value ? ref(false) : ref(true);\r\nconsole.log(display.value);\r\n\r\nconst calendarOptions = {\r\n  plugins: [dayGridPlugin, interactionPlugin],\r\n  initialView: \"dayGridMonth\",\r\n  dateClick: handleDateClick,\r\n  events: [\r\n    { title: \"3 tasks\", date: \"2022-10-06\" },\r\n    { title: \"event 2\", date: \"2019-04-02\" },\r\n  ],\r\n  eventColor: \"transparent\",\r\n  eventTextColor: \"red\",\r\n  selectable: true,\r\n};\r\n\r\n// WATCHING TO-DO LIST TO DISPLAY/NOT DISPLAY\r\n\r\nwatch(myArray, function () {\r\n  if (myArray.length > 0) {\r\n    display.value = true;\r\n  } else {\r\n    display.value = false;\r\n  }\r\n});\r\n\r\n// WORKING WITH CALENDAR\r\n\r\nfunction handleDateClick(arg) {\r\n  // alert(\"date click!\" + arg.dateStr);\r\n  date.value = formatDate(arg.date, {\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    day: \"numeric\",\r\n  });\r\n}\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\n\r\nfunction applyEditChanges(element) {\r\n  if (editedText.value) {\r\n    myArray.forEach((el, idx) => {\r\n      if (element.id === el.id) {\r\n        myArray[idx].text = editedText.value;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// make SELECTED paragraph tag editable\r\nfunction makeEditable(element) {\r\n  myArray.forEach((el, idx) => {\r\n    if (element.id === el.id) {\r\n      myArray[idx].editable = !myArray[idx].editable;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTask() {\r\n  myArray.push({\r\n    text: task.value,\r\n    id: myArray.length + 1,\r\n    checked: false,\r\n  });\r\n  task.value = \"\";\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  myArray.forEach((element, index) => {\r\n    myArray[index].id = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray[index].completed = !myArray[index].completed;\r\n}\r\n\r\nfunction deleteTask(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray.splice(index, 1);\r\n  updateList();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 60px 1fr 60px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background: skyblue;\r\n  /* making HEADER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background: lightblue;\r\n  /* making FOOTER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n  background: lightgreen;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  background: lightsteelblue;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 1fr 50px;\r\n  }\r\n  header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  footer {\r\n    grid-row: 4/5;\r\n  }\r\n}\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  gap: 10px;\r\n}\r\n.flex-text {\r\n  background: lightgray;\r\n  flex: 1;\r\n}\r\n/* Change border of the text if edit is selected*/\r\n\r\n.editSelectedBorder {\r\n  border: 1px solid orange;\r\n}\r\n.flex-buttons {\r\n  background: lightyellow;\r\n  flex-basis: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n/* CHECKBOX */\r\n.check-icon {\r\n  margin-left: 15px;\r\n  color: #b04b4b;\r\n  font-size: 26px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n}\r\n\r\n.isChecked {\r\n  color: green;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}