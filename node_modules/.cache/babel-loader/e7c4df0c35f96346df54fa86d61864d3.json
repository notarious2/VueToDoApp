{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-10659e34\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"grid-container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, \"HEADER GOES HERE\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"grid-item-todo\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"no-tasks\"\n};\nconst _hoisted_5 = {\n  class: \"flexbox\"\n};\nconst _hoisted_6 = {\n  class: \"flex-id\"\n};\nconst _hoisted_7 = [\"contenteditable\", \"onBlur\"];\nconst _hoisted_8 = {\n  class: \"flex-buttons\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"text \", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"add task\", -1\n/* HOISTED */\n));\n\nconst _hoisted_11 = {\n  class: \"grid-item-calendar\"\n};\n\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"My Calendar\", -1\n/* HOISTED */\n));\n\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"FOOTER GOES HERE\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n\n  const _component_draggable = _resolveComponent(\"draggable\");\n\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.date), 1\n  /* TEXT */\n  ), !_ctx.display ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"No Tasks to Display\")) : (_openBlock(), _createBlock(_component_draggable, {\n    key: 1,\n    list: _ctx.myArray,\n    \"item-key\": \"id\",\n    onChange: _ctx.updateList\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, _toDisplayString(element.id), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"flex-text\", {\n        editSelectedBorder: element.editable\n      }])\n    }, [_createElementVNode(\"p\", {\n      contenteditable: element.editable,\n      onInput: _cache[0] || (_cache[0] = (...args) => _ctx.editText && _ctx.editText(...args)),\n      onBlur: $event => _ctx.applyEditChanges(element)\n    }, _toDisplayString(element.text), 41\n    /* TEXT, PROPS, HYDRATE_EVENTS */\n    , _hoisted_7)], 2\n    /* CLASS */\n    ), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_font_awesome_icon, {\n      icon: \"fas fa-pen\",\n      class: _normalizeClass([\"edit-icon\", {\n        editSelected: element.editable\n      }]),\n      onClick: $event => _ctx.makeEditable(element)\n    }, null, 8\n    /* PROPS */\n    , [\"class\", \"onClick\"]), _createVNode(_component_font_awesome_icon, {\n      onClick: $event => _ctx.deleteTask(element),\n      icon: \"fas\\r\\n              fa-trash\",\n      class: \"delete-icon\"\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createVNode(_component_font_awesome_icon, {\n      icon: \"fas fa-check\",\n      class: _normalizeClass([\"check-icon\", {\n        isChecked: element.completed\n      }]),\n      id: element.id,\n      modelValue: element.completed,\n      \"onUpdate:modelValue\": $event => element.completed = $event,\n      onClick: $event => _ctx.checkUncheck(element)\n    }, null, 8\n    /* PROPS */\n    , [\"class\", \"id\", \"modelValue\", \"onUpdate:modelValue\", \"onClick\"])])])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\", \"onChange\"])), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.addTask && _ctx.addTask(...args), [\"prevent\"]))\n  }, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.task = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.task]]), _hoisted_10], 32\n  /* HYDRATE_EVENTS */\n  )]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createVNode(_component_FullCalendar, {\n    options: _ctx.calendarOptions\n  }, null, 8\n  /* PROPS */\n  , [\"options\"])]), _hoisted_13]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_toDisplayString","_ctx","_createBlock","_component_draggable","list","onChange","item","element","id","editSelectedBorder","editable","contenteditable","onInput","onBlur","text","_hoisted_7","_createVNode","_component_font_awesome_icon","icon","editSelected","onClick","isChecked","completed","$event","onSubmit","_hoisted_9","type","_hoisted_10","_hoisted_12","_component_FullCalendar","options","_hoisted_13"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <header>HEADER GOES HERE</header>\r\n    <div class=\"grid-item-todo\">\r\n      <h1>{{ date }}</h1>\r\n      <div v-if=\"!display\" class=\"no-tasks\">No Tasks to Display</div>\r\n      <draggable v-else :list=\"myArray\" item-key=\"id\" @change=\"updateList\">\r\n        <template #item=\"{ element }\">\r\n          <div class=\"flexbox\">\r\n            <div class=\"flex-id\">\r\n              <p>{{ element.id }}</p>\r\n            </div>\r\n            <div\r\n              class=\"flex-text\"\r\n              :class=\"{ editSelectedBorder: element.editable }\"\r\n            >\r\n              <p\r\n                :contenteditable=\"element.editable\"\r\n                @input=\"editText\"\r\n                @blur=\"applyEditChanges(element)\"\r\n              >\r\n                {{ element.text }}\r\n              </p>\r\n            </div>\r\n            <div class=\"flex-buttons\">\r\n              <font-awesome-icon\r\n                icon=\"fas fa-pen\"\r\n                class=\"edit-icon\"\r\n                :class=\"{ editSelected: element.editable }\"\r\n                @click=\"makeEditable(element)\"\r\n              />\r\n              <font-awesome-icon\r\n                @click=\"deleteTask(element)\"\r\n                icon=\"fas\r\n              fa-trash\"\r\n                class=\"delete-icon\"\r\n              />\r\n              <font-awesome-icon\r\n                icon=\"fas fa-check\"\r\n                class=\"check-icon\"\r\n                :class=\"{ isChecked: element.completed }\"\r\n                :id=\"element.id\"\r\n                v-model=\"element.completed\"\r\n                @click=\"checkUncheck(element)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </draggable>\r\n      <form @submit.prevent=\"addTask\">\r\n        <label>text </label>\r\n        <input v-model=\"task\" type=\"text\" />\r\n        <button>add task</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <h1>My Calendar</h1>\r\n      <FullCalendar :options=\"calendarOptions\" />\r\n    </div>\r\n    <footer>\r\n      <p>FOOTER GOES HERE</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, watch } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nimport { formatDate } from \"@fullcalendar/core\";\r\n\r\nimport FullCalendar from \"@fullcalendar/vue3\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst task = ref();\r\n\r\nconst date = ref(\"1/1/2022\");\r\nconsole.log(date.value);\r\n\r\nconst editedText = ref(\"\");\r\n\r\nconst myArray = reactive([\r\n  { text: \"AAA\", id: 1, completed: true, editable: false },\r\n  { text: \"BBB\", id: 2, completed: false, editable: false },\r\n  { text: \"CCC\", id: 3, completed: false, editable: false },\r\n  { text: \"DDD\", id: 4, completed: true, editable: false },\r\n]);\r\n\r\n// Count the number of completed tasks\r\n\r\nconst completedTasks = ref(myArray.filter((ob) => ob.completed).length);\r\nconsole.log(completedTasks.value);\r\n\r\nconst fullCalendar = ref<InstanceType<typeof FullCalendar>>()\r\nconsole.log(fullCalendar);\r\n// To display if there are tasks\r\nconst display = myArray.length > 0 ? ref(true) : ref(false);\r\n\r\nconst calendarOptions = {\r\n  plugins: [dayGridPlugin, interactionPlugin],\r\n  initialView: \"dayGridMonth\",\r\n  dateClick: handleDateClick,\r\n  events: [\r\n    { title: completedTasks.value + \" tasks\", date: \"2022-10-06\" },\r\n    { title: \"event 2\", date: \"2019-04-02\" },\r\n  ],\r\n  eventColor: \"transparent\",\r\n  eventTextColor: \"red\",\r\n  selectable: true,\r\n};\r\n\r\n// WATCHING TO-DO LIST TO DISPLAY/NOT DISPLAY\r\n\r\nwatch(myArray, function () {\r\n  if (myArray.length > 0) {\r\n    display.value = true;\r\n  } else {\r\n    display.value = false;\r\n  }\r\n});\r\n\r\n// WATCHING TO-DO LIST TO DISPLAY # COMPLETED TASKS\r\nwatch(myArray, function () {\r\n  completedTasks.value = myArray.filter((ob) => ob.completed).length;\r\n  console.log(completedTasks.value);\r\n});\r\n// WORKING WITH CALENDAR\r\n\r\nfunction handleDateClick(arg) {\r\n  // alert(\"date click!\" + arg.dateStr);\r\n  date.value = formatDate(arg.date, {\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    day: \"numeric\",\r\n  });\r\n}\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\n\r\nfunction applyEditChanges(element) {\r\n  if (editedText.value) {\r\n    myArray.forEach((el, idx) => {\r\n      if (element.id === el.id) {\r\n        myArray[idx].text = editedText.value;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// make SELECTED paragraph tag editable\r\nfunction makeEditable(element) {\r\n  myArray.forEach((el, idx) => {\r\n    if (element.id === el.id) {\r\n      myArray[idx].editable = !myArray[idx].editable;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTask() {\r\n  myArray.push({\r\n    text: task.value,\r\n    id: myArray.length + 1,\r\n    checked: false,\r\n  });\r\n  task.value = \"\";\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  myArray.forEach((element, index) => {\r\n    myArray[index].id = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray[index].completed = !myArray[index].completed;\r\n}\r\n\r\nfunction deleteTask(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray.splice(index, 1);\r\n  updateList();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n.no-tasks {\r\n  height: 100px;\r\n  justify-content: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 60px 1fr 60px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background: skyblue;\r\n  /* making HEADER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background: lightblue;\r\n  /* making FOOTER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n  background: lightgreen;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  background: lightsteelblue;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 1fr 50px;\r\n  }\r\n  header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  footer {\r\n    grid-row: 4/5;\r\n  }\r\n}\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  gap: 10px;\r\n}\r\n.flex-text {\r\n  background: lightgray;\r\n  flex: 1;\r\n}\r\n/* Change border of the text if edit is selected*/\r\n\r\n.editSelectedBorder {\r\n  border: 1px solid orange;\r\n}\r\n.flex-buttons {\r\n  background: lightyellow;\r\n  flex-basis: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n/* CHECKBOX */\r\n.check-icon {\r\n  margin-left: 15px;\r\n  color: #b04b4b;\r\n  font-size: 26px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n}\r\n\r\n.isChecked {\r\n  color: green;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}