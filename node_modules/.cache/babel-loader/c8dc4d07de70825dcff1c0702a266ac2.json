{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07345ca4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"list-item\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\",\n  class: \"check\",\n  id: \"check1\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"check1\",\n  class: \"label\"\n}, [/*#__PURE__*/_createElementVNode(\"svg\", {\n  viewBox: \"0 0 100 100\",\n  height: \"50\",\n  width: \"50\"\n}, [/*#__PURE__*/_createElementVNode(\"rect\", {\n  x: \"30\",\n  y: \"20\",\n  width: \"50\",\n  height: \"50\",\n  stroke: \"black\",\n  fill: \"none\"\n}), /*#__PURE__*/_createElementVNode(\"g\", {\n  transform: \"translate(0,-952.36216)\",\n  id: \"layer1\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  id: \"path4146\",\n  d: \"m 55,978 c -73,19 46,71 15,2 C 60,959 13,966 30,1007 c 12,30 61,13 46,-23\",\n  fill: \"none\",\n  stroke: \"black\",\n  \"stroke-width\": \"3\",\n  class: \"path1\"\n})])])], -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onSubmit\"];\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"text \", -1\n/* HOISTED */\n));\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"add task\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($setup.date)), _createVNode($setup[\"draggable\"], {\n    list: $setup.myArray,\n    \"item-key\": \"id\",\n    onChange: $setup.updateList\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createTextVNode(\" \" + _toDisplayString(element.id) + \" \" + _toDisplayString(element.name) + \" \", 1\n    /* TEXT */\n    ), _withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => element.completed = $event,\n      onClick: $event => $setup.checkUncheck(element)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_5), [[_vModelCheckbox, element.completed]]), element.completed === true ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $setup.deleteTask(element)\n    }, \" x \", 8\n    /* PROPS */\n    , _hoisted_6)) : _createCommentVNode(\"v-if\", true)])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\"]), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.addTask, [\"prevent\"])\n  }, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.task = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.task]]), _hoisted_9], 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_7)]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;EAIAA,KAAK,EAAC;;;gEACTC,oBAAmD,OAAnD,EAAmD;EAA5CC,IAAI,EAAC,UAAuC;EAA5BF,KAAK,EAAC,OAAsB;EAAdG,EAAE,EAAC;AAAW,CAAnD;;AAAA;;gEACAF,oBAqBQ,OArBR,EAqBQ;EArBDG,GAAG,EAAC,QAqBH;EArBYJ,KAAK,EAAC;AAqBlB,CArBR,gBACEC,oBAmBM,KAnBN,EAmBM;EAnBDI,OAAO,EAAC,aAmBP;EAnBqBC,MAAM,EAAC,IAmB5B;EAnBiCC,KAAK,EAAC;AAmBvC,CAnBN,gBACEN,oBAOE,MAPF,EAOE;EANAO,CAAC,EAAC,IAMF;EALAC,CAAC,EAAC,IAKF;EAJAF,KAAK,EAAC,IAIN;EAHAD,MAAM,EAAC,IAGP;EAFAI,MAAM,EAAC,OAEP;EADAC,IAAI,EAAC;AACL,CAPF,gBAQAV,oBASI,GATJ,EASI;EATDW,SAAS,EAAC,yBAST;EATmCT,EAAE,EAAC;AAStC,CATJ,gBACEF,oBAOE,MAPF,EAOE;EANAE,EAAE,EAAC,UAMH;EALAU,CAAC,EAAC,2EAKF;EAJAF,IAAI,EAAC,MAIL;EAHAD,MAAM,EAAC,OAGP;EAFA,gBAAa,GAEb;EADAV,KAAK,EAAC;AACN,CAPF,EADF,EATF,EADF;;AAAA;;;;;;gEAuCJC,oBAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY;AAAA;AAAZ;;gEAEAA,oBAAyB,QAAzB,EAAyB,IAAzB,EAAQ,UAAR,EAAgB;AAAA;AAAhB;;;uBA/CJa,oBAiDM,KAjDN,cAiDM,CAhDJb,oBAAmB,IAAnB,EAAmB,IAAnB,EAAmBc,iBAAZC,WAAY,CAAnB,CAgDI,EA/CJC,aAyCYD,mBAzCZ,EAyCY;IAzCAE,IAAI,EAAEF,cAyCN;IAzCe,YAAS,IAyCxB;IAzC8BG,QAAM,EAAEH;EAyCtC,CAzCZ;IACaI,IAAI,WACb,CAqCM;MAtCWC;IAsCX,CArCN,KADwB,CACxBpB,oBAqCM,KArCN,cAqCM,CApCJqB,UAoCI,EAnCJC,UAmCI,mBAdI,MAERR,iBAAGM,OAAO,CAAClB,EAAX,CAFQ,GAEQ,GAFR,GAESY,iBAAGM,OAAO,CAACG,IAAX,CAFT,GAE2B,KACnC;IAAA;KAWI,kBAXJvB,oBAIE,OAJF,EAIE;MAHAC,IAAI,EAAC,UAGL;uCAFSmB,OAAO,CAACI,YAASC,MAE1B;MADCC,OAAK,YAAEX,oBAAaK,OAAb;IACR,CAJF;;IAAA,kCAEWA,OAAO,CAACI,YASf,EAJIJ,OAAO,CAACI,SAAR,KAAiB,sBAFzBX,oBAKS,QALT,EAKS;YAAA;MAJNa,OAAK,YAAEX,kBAAWK,OAAX;IAID,CALT,EAGC,KAHD,EAKA;IAAA;IALA,EAKAO,UALA,sCAMI,CArCN,CADwB,CAAX;;;;GADjB;;EAAA,WA+CI,EALJ3B,oBAIO,MAJP,EAIO;IAJA4B,QAAM,iBAAUb,cAAV,EAAiB,WAAjB;EAIN,CAJP,GACEc,4BACA7B,oBAAoC,OAApC,EAAoC;+DAApBe,cAAIU,OAAgB;IAAdxB,IAAI,EAAC;EAAS,CAApC;;EAAA,kBAAgBc,gBAChBe,WAHF;;EAAA,aAKI,CAjDN","names":["class","_createElementVNode","type","id","for","viewBox","height","width","x","y","stroke","fill","transform","d","_createElementBlock","_toDisplayString","$setup","_createVNode","list","onChange","item","element","_hoisted_3","_hoisted_4","name","completed","$event","onClick","_hoisted_6","onSubmit","_hoisted_8","_hoisted_9"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate2.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1>{{ date }}</h1>\r\n    <draggable :list=\"myArray\" item-key=\"id\" @change=\"updateList\">\r\n      <template #item=\"{ element }\">\r\n        <div class=\"list-item\">\r\n          <input type=\"checkbox\" class=\"check\" id=\"check1\" />\r\n          <label for=\"check1\" class=\"label\">\r\n            <svg viewBox=\"0 0 100 100\" height=\"50\" width=\"50\">\r\n              <rect\r\n                x=\"30\"\r\n                y=\"20\"\r\n                width=\"50\"\r\n                height=\"50\"\r\n                stroke=\"black\"\r\n                fill=\"none\"\r\n              />\r\n              <g transform=\"translate(0,-952.36216)\" id=\"layer1\">\r\n                <path\r\n                  id=\"path4146\"\r\n                  d=\"m 55,978 c -73,19 46,71 15,2 C 60,959 13,966 30,1007 c 12,30 61,13 46,-23\"\r\n                  fill=\"none\"\r\n                  stroke=\"black\"\r\n                  stroke-width=\"3\"\r\n                  class=\"path1\"\r\n                />\r\n              </g>\r\n            </svg>\r\n          </label>\r\n\r\n          {{ element.id }} {{ element.name }}\r\n          <input\r\n            type=\"checkbox\"\r\n            v-model=\"element.completed\"\r\n            @click=\"checkUncheck(element)\"\r\n          />\r\n          <button\r\n            @click=\"deleteTask(element)\"\r\n            v-if=\"element.completed === true\"\r\n          >\r\n            x\r\n          </button>\r\n        </div>\r\n      </template>\r\n    </draggable>\r\n    <form @submit.prevent=\"addTask\">\r\n      <label>text </label>\r\n      <input v-model=\"task\" type=\"text\" />\r\n      <button>add task</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\n\r\nconst task = ref();\r\n\r\nconst date = \"1/1/2022\";\r\n\r\nconst myArray = reactive([\r\n  { name: \"AAA\", id: 1, completed: true },\r\n  { name: \"BBB\", id: 2, completed: false },\r\n  { name: \"CCC\", id: 3, completed: false },\r\n  { name: \"DDD\", id: 4, completed: true },\r\n]);\r\n\r\nfunction addTask() {\r\n  myArray.push({\r\n    name: task.value,\r\n    id: myArray.length + 1,\r\n    checked: false,\r\n  });\r\n  task.value = \"\";\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  myArray.forEach((element, index) => {\r\n    myArray[index].id = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray[index].completed = !myArray[index].completed;\r\n  console.log(myArray);\r\n}\r\n\r\nfunction deleteTask(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray.splice(index, 1);\r\n  console.log(myArray);\r\n  updateList();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n  text-align: left;\r\n}\r\n\r\n.container {\r\n  background-color: beige;\r\n  width: 50%;\r\n}\r\n\r\nbutton {\r\n  margin-left: 40px;\r\n}\r\n.list-item {\r\n  background-color: blanchedalmond;\r\n  padding: 2px 2px;\r\n  margin: 2px 2px;\r\n  width: 80%;\r\n  position: relative;\r\n}\r\n/* CHECKBOX RELATED STYLING */\r\n.checkbox:not(:last-child) {\r\n  border-bottom: 2px solid white;\r\n}\r\n.check {\r\n  /* width: 50px;\r\n  height: 50px; */\r\n  position: relative;\r\n  opacity: 0;\r\n}\r\n\r\n.path1 {\r\n  stroke-dasharray: 400;\r\n  stroke-dashoffset: 400;\r\n  transition: 0.5s all;\r\n}\r\n\r\n.check:checked + label svg g path {\r\n  stroke-dashoffset: 0;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}