{"ast":null,"code":"import { createApp, h } from 'vue';\nimport { createPlugin } from '@fullcalendar/core';\n/*\nwrap it in an object with a `vue` key, which the custom content-type handler system will look for\n*/\n\nexport function wrapVDomGenerator(vDomGenerator) {\n  return function (props) {\n    return {\n      vue: vDomGenerator(props)\n    };\n  };\n}\nexport function createVueContentTypePlugin(appContext) {\n  return createPlugin({\n    contentTypeHandlers: {\n      vue: () => buildVDomHandler(appContext) // looks for the `vue` key\n\n    }\n  });\n}\n\nfunction buildVDomHandler(appContext) {\n  let currentEl;\n  let app;\n  let componentInstance;\n\n  function render(el, vDomContent) {\n    if (currentEl !== el) {\n      if (currentEl && app) {\n        // if changing elements, recreate the vue\n        app.unmount();\n      }\n\n      currentEl = el;\n    }\n\n    if (!app) {\n      app = initApp(vDomContent, appContext); // vue's mount method *replaces* the given element. create an artificial inner el\n\n      let innerEl = document.createElement('span');\n      el.appendChild(innerEl);\n      componentInstance = app.mount(innerEl);\n    } else {\n      componentInstance.content = vDomContent;\n    }\n  }\n\n  function destroy() {\n    if (app) {\n      // needed?\n      app.unmount();\n    }\n  }\n\n  return {\n    render,\n    destroy\n  };\n}\n\nfunction initApp(initialContent, appContext) {\n  // TODO: do something with appContext\n  return createApp({\n    data() {\n      return {\n        content: initialContent\n      };\n    },\n\n    render() {\n      let {\n        content\n      } = this; // the slot result can be an array, but the returned value of a vue component's\n      // render method must be a single node.\n\n      if (content.length === 1) {\n        return content[0];\n      } else {\n        return h('span', {}, content);\n      }\n    }\n\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAcA,SAAd,EAA+DC,CAA/D,QAAoF,KAApF;AACA,SAASC,YAAT,QAAwC,oBAAxC;AAOA;;;;AAGA,OAAM,SAAUC,iBAAV,CAA4BC,aAA5B,EAA+C;EACnD,OAAO,UAASC,KAAT,EAAmB;IACxB,OAAO;MAAEC,GAAG,EAAEF,aAAa,CAACC,KAAD;IAApB,CAAP;EACD,CAFD;AAGD;AAED,OAAM,SAAUE,0BAAV,CAAqCC,UAArC,EAA2D;EAC/D,OAAON,YAAY,CAAC;IAClBO,mBAAmB,EAAE;MACnBH,GAAG,EAAE,MAAMI,gBAAgB,CAACF,UAAD,CADR,CACsB;;IADtB;EADH,CAAD,CAAnB;AAKD;;AAED,SAASE,gBAAT,CAA0BF,UAA1B,EAAgD;EAC9C,IAAIG,SAAJ;EACA,IAAIC,GAAJ;EACA,IAAIC,iBAAJ;;EAEA,SAASC,MAAT,CAAgBC,EAAhB,EAAiCC,WAAjC,EAAqD;IACnD,IAAIL,SAAS,KAAKI,EAAlB,EAAsB;MACpB,IAAIJ,SAAS,IAAIC,GAAjB,EAAsB;QAAE;QACtBA,GAAG,CAACK,OAAJ;MACD;;MACDN,SAAS,GAAGI,EAAZ;IACD;;IAED,IAAI,CAACH,GAAL,EAAU;MACRA,GAAG,GAAGM,OAAO,CAACF,WAAD,EAAcR,UAAd,CAAb,CADQ,CAGR;;MACA,IAAIW,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAd;MACAN,EAAE,CAACO,WAAH,CAAeH,OAAf;MAEAN,iBAAiB,GAAGD,GAAG,CAACW,KAAJ,CAAUJ,OAAV,CAApB;IACD,CARD,MAQO;MACLN,iBAAiB,CAACW,OAAlB,GAA4BR,WAA5B;IACD;EACF;;EAED,SAASS,OAAT,GAAgB;IACd,IAAIb,GAAJ,EAAS;MAAE;MACTA,GAAG,CAACK,OAAJ;IACD;EACF;;EAED,OAAO;IAAEH,MAAF;IAAUW;EAAV,CAAP;AACD;;AAED,SAASP,OAAT,CAAiBQ,cAAjB,EAA0ClB,UAA1C,EAAgE;EAC9D;EACA,OAAOR,SAAS,CAAC;IACf2B,IAAI;MACF,OAAO;QACLH,OAAO,EAAEE;MADJ,CAAP;IAGD,CALc;;IAMfZ,MAAM;MACJ,IAAI;QAAEU;MAAF,IAAc,IAAlB,CADI,CAGJ;MACA;;MACA,IAAIA,OAAO,CAACI,MAAR,KAAmB,CAAvB,EAA0B;QACxB,OAAOJ,OAAO,CAAC,CAAD,CAAd;MACD,CAFD,MAEO;QACL,OAAOvB,CAAC,CAAC,MAAD,EAAS,EAAT,EAAauB,OAAb,CAAR;MACD;IACF;;EAhBc,CAAD,CAAhB;AAkBD","names":["createApp","h","createPlugin","wrapVDomGenerator","vDomGenerator","props","vue","createVueContentTypePlugin","appContext","contentTypeHandlers","buildVDomHandler","currentEl","app","componentInstance","render","el","vDomContent","unmount","initApp","innerEl","document","createElement","appendChild","mount","content","destroy","initialContent","data","length"],"sourceRoot":"","sources":["../src/custom-content-type.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}