{"ast":null,"code":"/*!\nFullCalendar v5.11.3\nDocs & License: https://fullcalendar.io/\n(c) 2022 Adam Shaw\n*/\nimport './vdom.js';\nimport { __extends, __assign } from 'tslib';\nimport { flushSync, render, createElement, CalendarRoot, CustomContentRenderContext, CalendarContent, unmountComponentAtNode, DelayedRunner, CalendarDataManager, isArraysEqual, applyStyleProp, CalendarApi } from '@fullcalendar/common';\nexport * from '@fullcalendar/common';\n\nvar Calendar =\n/** @class */\nfunction (_super) {\n  __extends(Calendar, _super);\n\n  function Calendar(el, optionOverrides) {\n    if (optionOverrides === void 0) {\n      optionOverrides = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.isRendering = false;\n    _this.isRendered = false;\n    _this.currentClassNames = [];\n    _this.customContentRenderId = 0; // will affect custom generated classNames?\n\n    _this.handleAction = function (action) {\n      // actions we know we want to render immediately\n      switch (action.type) {\n        case 'SET_EVENT_DRAG':\n        case 'SET_EVENT_RESIZE':\n          _this.renderRunner.tryDrain();\n\n      }\n    };\n\n    _this.handleData = function (data) {\n      _this.currentData = data;\n\n      _this.renderRunner.request(data.calendarOptions.rerenderDelay);\n    };\n\n    _this.handleRenderRequest = function () {\n      if (_this.isRendering) {\n        _this.isRendered = true;\n        var currentData_1 = _this.currentData;\n        flushSync(function () {\n          render(createElement(CalendarRoot, {\n            options: currentData_1.calendarOptions,\n            theme: currentData_1.theme,\n            emitter: currentData_1.emitter\n          }, function (classNames, height, isHeightAuto, forPrint) {\n            _this.setClassNames(classNames);\n\n            _this.setHeight(height);\n\n            return createElement(CustomContentRenderContext.Provider, {\n              value: _this.customContentRenderId\n            }, createElement(CalendarContent, __assign({\n              isHeightAuto: isHeightAuto,\n              forPrint: forPrint\n            }, currentData_1)));\n          }), _this.el);\n        });\n      } else if (_this.isRendered) {\n        _this.isRendered = false;\n        unmountComponentAtNode(_this.el);\n\n        _this.setClassNames([]);\n\n        _this.setHeight('');\n      }\n    };\n\n    _this.el = el;\n    _this.renderRunner = new DelayedRunner(_this.handleRenderRequest);\n    new CalendarDataManager({\n      optionOverrides: optionOverrides,\n      calendarApi: _this,\n      onAction: _this.handleAction,\n      onData: _this.handleData\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Calendar.prototype, \"view\", {\n    get: function () {\n      return this.currentData.viewApi;\n    } // for public API\n    ,\n    enumerable: false,\n    configurable: true\n  });\n\n  Calendar.prototype.render = function () {\n    var wasRendering = this.isRendering;\n\n    if (!wasRendering) {\n      this.isRendering = true;\n    } else {\n      this.customContentRenderId += 1;\n    }\n\n    this.renderRunner.request();\n\n    if (wasRendering) {\n      this.updateSize();\n    }\n  };\n\n  Calendar.prototype.destroy = function () {\n    if (this.isRendering) {\n      this.isRendering = false;\n      this.renderRunner.request();\n    }\n  };\n\n  Calendar.prototype.updateSize = function () {\n    var _this = this;\n\n    flushSync(function () {\n      _super.prototype.updateSize.call(_this);\n    });\n  };\n\n  Calendar.prototype.batchRendering = function (func) {\n    this.renderRunner.pause('batchRendering');\n    func();\n    this.renderRunner.resume('batchRendering');\n  };\n\n  Calendar.prototype.pauseRendering = function () {\n    this.renderRunner.pause('pauseRendering');\n  };\n\n  Calendar.prototype.resumeRendering = function () {\n    this.renderRunner.resume('pauseRendering', true);\n  };\n\n  Calendar.prototype.resetOptions = function (optionOverrides, append) {\n    this.currentDataManager.resetOptions(optionOverrides, append);\n  };\n\n  Calendar.prototype.setClassNames = function (classNames) {\n    if (!isArraysEqual(classNames, this.currentClassNames)) {\n      var classList = this.el.classList;\n\n      for (var _i = 0, _a = this.currentClassNames; _i < _a.length; _i++) {\n        var className = _a[_i];\n        classList.remove(className);\n      }\n\n      for (var _b = 0, classNames_1 = classNames; _b < classNames_1.length; _b++) {\n        var className = classNames_1[_b];\n        classList.add(className);\n      }\n\n      this.currentClassNames = classNames;\n    }\n  };\n\n  Calendar.prototype.setHeight = function (height) {\n    applyStyleProp(this.el, 'height', height);\n  };\n\n  return Calendar;\n}(CalendarApi);\n\nexport { Calendar };","map":{"version":3,"mappings":"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","names":["__extends","el","optionOverrides","_super","_this","action","type","renderRunner","tryDrain","data","currentData","request","calendarOptions","rerenderDelay","isRendering","isRendered","flushSync","render","createElement","CalendarRoot","options","currentData_1","theme","emitter","classNames","height","isHeightAuto","forPrint","setClassNames","setHeight","CustomContentRenderContext","Provider","value","customContentRenderId","CalendarContent","__assign","unmountComponentAtNode","DelayedRunner","handleRenderRequest","CalendarDataManager","calendarApi","onAction","handleAction","onData","handleData","Object","Calendar","viewApi","wasRendering","updateSize","call","func","pause","resume","append","currentDataManager","resetOptions","isArraysEqual","currentClassNames","classList","_i","className","remove","_b","add","applyStyleProp","CalendarApi"],"sources":["src/Calendar.tsx"],"sourcesContent":["import {\n  CalendarOptions, Action, CalendarContent, render, createElement, DelayedRunner, CssDimValue, applyStyleProp,\n  CalendarApi, CalendarRoot, isArraysEqual, CalendarDataManager, CalendarData,\n  CustomContentRenderContext, flushSync, unmountComponentAtNode,\n} from '@fullcalendar/common'\n\nexport class Calendar extends CalendarApi {\n  currentData: CalendarData\n  renderRunner: DelayedRunner\n  el: HTMLElement\n  isRendering = false\n  isRendered = false\n  currentClassNames: string[] = []\n  customContentRenderId = 0 // will affect custom generated classNames?\n\n  get view() { return this.currentData.viewApi } // for public API\n\n  constructor(el: HTMLElement, optionOverrides: CalendarOptions = {}) {\n    super()\n\n    this.el = el\n    this.renderRunner = new DelayedRunner(this.handleRenderRequest)\n\n    new CalendarDataManager({ // eslint-disable-line no-new\n      optionOverrides,\n      calendarApi: this,\n      onAction: this.handleAction,\n      onData: this.handleData,\n    })\n  }\n\n  handleAction = (action: Action) => {\n    // actions we know we want to render immediately\n    switch (action.type) {\n      case 'SET_EVENT_DRAG':\n      case 'SET_EVENT_RESIZE':\n        this.renderRunner.tryDrain()\n    }\n  }\n\n  handleData = (data: CalendarData) => {\n    this.currentData = data\n    this.renderRunner.request(data.calendarOptions.rerenderDelay)\n  }\n\n  handleRenderRequest = () => {\n    if (this.isRendering) {\n      this.isRendered = true\n      let { currentData } = this\n\n      flushSync(() => {\n        render(\n          <CalendarRoot options={currentData.calendarOptions} theme={currentData.theme} emitter={currentData.emitter}>\n            {(classNames, height, isHeightAuto, forPrint) => {\n              this.setClassNames(classNames)\n              this.setHeight(height)\n\n              return (\n                <CustomContentRenderContext.Provider value={this.customContentRenderId}>\n                  <CalendarContent\n                    isHeightAuto={isHeightAuto}\n                    forPrint={forPrint}\n                    {...currentData}\n                  />\n                </CustomContentRenderContext.Provider>\n              )\n            }}\n          </CalendarRoot>,\n          this.el,\n        )\n      })\n    } else if (this.isRendered) {\n      this.isRendered = false\n      unmountComponentAtNode(this.el)\n      this.setClassNames([])\n      this.setHeight('')\n    }\n  }\n\n  render() {\n    let wasRendering = this.isRendering\n\n    if (!wasRendering) {\n      this.isRendering = true\n    } else {\n      this.customContentRenderId += 1\n    }\n\n    this.renderRunner.request()\n\n    if (wasRendering) {\n      this.updateSize()\n    }\n  }\n\n  destroy() {\n    if (this.isRendering) {\n      this.isRendering = false\n      this.renderRunner.request()\n    }\n  }\n\n  updateSize() {\n    flushSync(() => {\n      super.updateSize()\n    })\n  }\n\n  batchRendering(func) {\n    this.renderRunner.pause('batchRendering')\n    func()\n    this.renderRunner.resume('batchRendering')\n  }\n\n  pauseRendering() { // available to plugins\n    this.renderRunner.pause('pauseRendering')\n  }\n\n  resumeRendering() { // available to plugins\n    this.renderRunner.resume('pauseRendering', true)\n  }\n\n  resetOptions(optionOverrides, append?) {\n    this.currentDataManager.resetOptions(optionOverrides, append)\n  }\n\n  setClassNames(classNames: string[]) {\n    if (!isArraysEqual(classNames, this.currentClassNames)) {\n      let { classList } = this.el\n\n      for (let className of this.currentClassNames) {\n        classList.remove(className)\n      }\n\n      for (let className of classNames) {\n        classList.add(className)\n      }\n\n      this.currentClassNames = classNames\n    }\n  }\n\n  setHeight(height: CssDimValue) {\n    applyStyleProp(this.el, 'height', height)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}