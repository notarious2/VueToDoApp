{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, watch, onMounted } from \"vue\";\nimport draggable from \"vuedraggable\";\nimport authHeader from \"@/components/services/auth-header\";\nimport axios from \"axios\";\nimport Datepicker from \"@vuepic/vue-datepicker\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nexport default {\n  __name: 'TasksTemplate',\n\n  setup(__props, {\n    expose\n  }) {\n    expose(); // eslint-disable-next-line\n\n    const date = ref(new Date().toISOString().slice(0, 10));\n    const invalidInput = ref(false);\n    const enteredText = ref(\"\");\n    const tasks = ref([]); // const dateCal = ref(new Date());\n\n    const editedText = ref(\"\");\n    const tasksList = reactive([{\n      date: \"2022-10-12\",\n      tasks: [{\n        text: \"BBB\",\n        priority: 1,\n        completed: false,\n        editable: false,\n        task_id: \"X12\"\n      }, {\n        text: \"CCC\",\n        priority: 2,\n        completed: true,\n        editable: false,\n        task_id: \"X123\"\n      }, {\n        text: \"CCC\",\n        priority: 3,\n        completed: false,\n        editable: false,\n        task_id: \"X1124\"\n      }, {\n        text: \"DDD\",\n        priority: 4,\n        completed: true,\n        editable: false,\n        task_id: \"X1sd\"\n      }, {\n        text: \"AAA\",\n        priority: 6,\n        completed: true,\n        editable: false,\n        task_id: \"X1sda\"\n      }]\n    }, {\n      date: \"2022-10-13\",\n      tasks: [{\n        text: \"Uno\",\n        priority: 1,\n        completed: false,\n        editable: false,\n        task_id: \"X12\"\n      }, {\n        text: \"Dos\",\n        priority: 2,\n        completed: true,\n        editable: false,\n        task_id: \"X123\"\n      }, {\n        text: \"Tres\",\n        priority: 3,\n        completed: false,\n        editable: false,\n        task_id: \"X1124\"\n      }, {\n        text: \"Quatro\",\n        priority: 4,\n        completed: true,\n        editable: false,\n        task_id: \"X1sd\"\n      }, {\n        text: \"Cinco\",\n        priority: 6,\n        completed: true,\n        editable: false,\n        task_id: \"X1sda\"\n      }]\n    }]); // Getting array for specific date\n\n    const tasksSlice = ref([]);\n    const display = ref(false);\n\n    if (tasksList.filter(arr => arr[\"date\"] === \"2022-10-14\").length === 0) {\n      // eslint-disable-next-line\n      display.value = false;\n    } else {\n      tasksSlice.value = tasksList.filter(arr => arr[\"date\"] === \"2022-10-14\")[0];\n      display.value = true;\n    } // Count the number of tasks\n\n\n    const notCompletedTasks = ref(null);\n    const completedTasks = ref(null);\n    const totalTasks = ref(null); // function countTasks() {}\n\n    console.log(\"EMPTY TASKS\", tasksSlice.value);\n\n    if (tasksSlice.value.length > 0) {\n      notCompletedTasks.value = tasksSlice.value.tasks.filter(ob => !ob.completed).length;\n    }\n\n    console.log(\"NOT COMPLETE TASKS\", notCompletedTasks.value);\n\n    async function loadTasks() {\n      try {\n        const response = await axios.get(\"http://localhost:8000/task\", {\n          headers: authHeader()\n        }); // working with response\n\n        const result = response.data;\n\n        for (const key of Object.keys(result)) {\n          tasks.value.push(result[key]);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    onMounted(() => {\n      console.log(\"Mounted\");\n      console.log(tasksSlice.value == null); // updateList();\n\n      loadTasks(); //Load tasks from backend\n\n      console.log(\"tasks\", tasks.value);\n    }); // WATCHING TO-DO LIST TO DISPLAY/NOT DISPLAY\n    // WATCHING TO-DO LIST TO DISPLAY # UNCOMPLETED TASKS\n    // WORKING WITH CALENDAR\n    // custom function to return date in DD month-long YYYY format\n\n    function formatDate(dateInput) {\n      return dateInput.toLocaleDateString(\"en-US\", {\n        month: \"long\",\n        year: \"numeric\",\n        day: \"numeric\"\n      });\n    } // clear invalid input - to be used at blur\n\n\n    function clearInvalidInput() {\n      invalidInput.value = false;\n    }\n\n    const handleDate = modelData => {\n      date.value = modelData.toISOString().slice(0, 10); // getting new slice based on picked date\n\n      tasksSlice.value = tasksList.filter(arr => arr[\"date\"] === date.value)[0];\n      display.value = true; // creating empty array if there no tasks on picked date\n\n      if (!tasksSlice.value) {\n        tasksSlice.value = ref([]);\n        display.value = false;\n      }\n    }; // listen to input inside edited paragraph text\n\n\n    function editText(event) {\n      editedText.value = event.target.innerText;\n    } // Apply above changes at blur\n\n\n    function applyEditChanges(element) {\n      if (editedText.value) {\n        tasksSlice.value.tasks.forEach((el, idx) => {\n          if (element.task_id === el.task_id) {\n            tasksSlice.value.tasks[idx].text = editedText.value;\n          }\n        });\n      }\n    }\n\n    console.log(\"tasks:\", tasksSlice.value.tasks); // make SELECTED paragraph tag editable\n\n    function makeEditable(element) {\n      tasksSlice.value.tasks.forEach((el, idx) => {\n        if (element.task_id == el.task_id) {\n          tasksSlice.value.tasks[idx].editable = !tasksSlice.value.tasks[idx].editable;\n          console.log(idx, tasksSlice.value.tasks[idx]);\n        }\n      });\n    }\n\n    function addTask() {\n      if (enteredText.value !== \"\") {\n        // add date if empty object\n        if (!(\"date\" in tasksSlice.value)) {\n          tasksSlice.value = {\n            date: date.value,\n            tasks: []\n          };\n        }\n\n        tasksSlice.value.tasks.push({\n          text: enteredText.value,\n          priority: tasksSlice.value.tasks.length + 1,\n          checked: false,\n          completed: false,\n          task_id: (Math.random() + 1).toString(36).substring(7)\n        });\n        enteredText.value = \"\";\n        display.value = true;\n        tasksList.push(tasksSlice.value);\n      } else {\n        invalidInput.value = true;\n      }\n    } // update tasks index/id on change - on drag\n\n\n    function updateList() {\n      tasksSlice.value.tasks.forEach((element, index) => {\n        tasksSlice.value.tasks[index].priority = index + 1;\n      });\n    } // Checking or unchecking specific object in an array\n\n\n    function checkUncheck(element) {\n      let index = tasksSlice.value.tasks.indexOf(element);\n      tasksSlice.value.tasks[index].completed = !tasksSlice.value.tasks[index].completed;\n    } // Deleting specific task\n\n\n    function deleteTask(element) {\n      let index = tasksSlice.value.tasks.indexOf(element);\n      tasksSlice.value.tasks.splice(index, 1);\n\n      if (tasksSlice.value.tasks.length === 0) {\n        display.value = false;\n      }\n\n      updateList();\n    }\n\n    const __returned__ = {\n      date,\n      invalidInput,\n      enteredText,\n      tasks,\n      editedText,\n      tasksList,\n      tasksSlice,\n      display,\n      notCompletedTasks,\n      completedTasks,\n      totalTasks,\n      loadTasks,\n      formatDate,\n      clearInvalidInput,\n      handleDate,\n      editText,\n      applyEditChanges,\n      makeEditable,\n      addTask,\n      updateList,\n      checkUncheck,\n      deleteTask,\n      reactive,\n      ref,\n      watch,\n      onMounted,\n      draggable,\n      authHeader,\n      axios,\n      Datepicker\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","watch","onMounted","draggable","authHeader","axios","Datepicker","date","Date","toISOString","slice","invalidInput","enteredText","tasks","editedText","tasksList","text","priority","completed","editable","task_id","tasksSlice","display","filter","arr","length","value","notCompletedTasks","completedTasks","totalTasks","console","log","ob","loadTasks","response","get","headers","result","data","key","Object","keys","push","err","formatDate","dateInput","toLocaleDateString","month","year","day","clearInvalidInput","handleDate","modelData","editText","event","target","innerText","applyEditChanges","element","forEach","el","idx","makeEditable","addTask","checked","Math","random","toString","substring","updateList","index","checkUncheck","indexOf","deleteTask","splice"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/pages/TasksTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <header>HEADER GOES HERE</header>\r\n    <div class=\"grid-item-todo\">\r\n      <div v-if=\"!display\" class=\"no-tasks\">No Tasks to Display</div>\r\n      <div v-else>\r\n        <h1>{{ formatDate(new Date(tasksSlice.date)) }}</h1>\r\n        <div class=\"flex-headers\">\r\n          <div class=\"header-number\">#</div>\r\n          <div class=\"header-text\">Description</div>\r\n          <div class=\"header-edit\">Edit</div>\r\n          <div class=\"header-delete\">Del.</div>\r\n          <div class=\"header-completed\">Status</div>\r\n        </div>\r\n      </div>\r\n      <draggable\r\n        :list=\"tasksSlice.tasks\"\r\n        item-key=\"task_id\"\r\n        @change=\"updateList\"\r\n      >\r\n        <template #item=\"{ element }\">\r\n          <div class=\"flexbox\">\r\n            <div class=\"flex-id\">\r\n              <p>{{ element.priority }}</p>\r\n            </div>\r\n            <div\r\n              class=\"flex-text\"\r\n              :class=\"{ editSelectedBorder: element.editable }\"\r\n            >\r\n              <p\r\n                :contenteditable=\"element.editable\"\r\n                @input=\"editText\"\r\n                @blur=\"applyEditChanges(element)\"\r\n              >\r\n                {{ element.text }}\r\n              </p>\r\n            </div>\r\n            <div class=\"flex-buttons\">\r\n              <font-awesome-icon\r\n                icon=\"fas fa-pen\"\r\n                class=\"edit-icon\"\r\n                :class=\"{ editSelected: element.editable }\"\r\n                @click=\"makeEditable(element)\"\r\n              />\r\n              <font-awesome-icon\r\n                @click=\"deleteTask(element)\"\r\n                icon=\"fas\r\n              fa-trash\"\r\n                class=\"delete-icon\"\r\n              />\r\n              <font-awesome-icon\r\n                icon=\"fas fa-check\"\r\n                class=\"check-icon\"\r\n                :class=\"{ isChecked: element.completed }\"\r\n                :id=\"element.id\"\r\n                v-model=\"element.completed\"\r\n                @click=\"checkUncheck(element)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </draggable>\r\n      <form class=\"form-control\" @submit.prevent=\"addTask\">\r\n        <input\r\n          class=\"task-input\"\r\n          @blur=\"clearInvalidInput\"\r\n          v-model=\"enteredText\"\r\n          type=\"text\"\r\n        />\r\n        <button class=\"button-74\">add task</button>\r\n      </form>\r\n      <span v-if=\"invalidInput\" class=\"invalid-input\">Please Enter Text</span>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <h1>{{ date }}</h1>\r\n      <Datepicker\r\n        inline\r\n        :enableTimePicker=\"false\"\r\n        :monthChangeOnScroll=\"false\"\r\n        v-model=\"date\"\r\n        autoApply\r\n        @update:modelValue=\"handleDate\"\r\n      />\r\n      <div class=\"task-status\">\r\n        <p># Tasks: {{ notCompletedTasks }}</p>\r\n        <p># Completed tasks: {{ completedTasks }}</p>\r\n        <p># Not completed tasks: {{ totalTasks }}</p>\r\n      </div>\r\n    </div>\r\n    <footer>\r\n      <p>FOOTER GOES HERE</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// eslint-disable-next-line\r\nimport { reactive, ref, watch, onMounted } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\n\r\nimport authHeader from \"@/components/services/auth-header\";\r\nimport axios from \"axios\";\r\n\r\nimport Datepicker from \"@vuepic/vue-datepicker\";\r\nimport \"@vuepic/vue-datepicker/dist/main.css\";\r\n\r\nconst date = ref(new Date().toISOString().slice(0, 10));\r\n\r\nconst invalidInput = ref(false);\r\n\r\nconst enteredText = ref(\"\");\r\n\r\nconst tasks = ref([]);\r\n\r\n// const dateCal = ref(new Date());\r\n\r\nconst editedText = ref(\"\");\r\n\r\nconst tasksList = reactive([\r\n  {\r\n    date: \"2022-10-12\",\r\n    tasks: [\r\n      {\r\n        text: \"BBB\",\r\n        priority: 1,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X12\",\r\n      },\r\n      {\r\n        text: \"CCC\",\r\n        priority: 2,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X123\",\r\n      },\r\n      {\r\n        text: \"CCC\",\r\n        priority: 3,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X1124\",\r\n      },\r\n      {\r\n        text: \"DDD\",\r\n        priority: 4,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sd\",\r\n      },\r\n      {\r\n        text: \"AAA\",\r\n        priority: 6,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sda\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    date: \"2022-10-13\",\r\n    tasks: [\r\n      {\r\n        text: \"Uno\",\r\n        priority: 1,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X12\",\r\n      },\r\n      {\r\n        text: \"Dos\",\r\n        priority: 2,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X123\",\r\n      },\r\n      {\r\n        text: \"Tres\",\r\n        priority: 3,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X1124\",\r\n      },\r\n      {\r\n        text: \"Quatro\",\r\n        priority: 4,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sd\",\r\n      },\r\n      {\r\n        text: \"Cinco\",\r\n        priority: 6,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sda\",\r\n      },\r\n    ],\r\n  },\r\n]);\r\n// Getting array for specific date\r\nconst tasksSlice = ref([]);\r\nconst display = ref(false);\r\n\r\nif (tasksList.filter((arr) => arr[\"date\"] === \"2022-10-14\").length === 0) {\r\n  // eslint-disable-next-line\r\n  display.value = false;\r\n} else {\r\n  tasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === \"2022-10-14\")[0];\r\n  display.value = true;\r\n}\r\n\r\n// Count the number of tasks\r\nconst notCompletedTasks = ref(null);\r\nconst completedTasks = ref(null);\r\nconst totalTasks = ref(null);\r\n\r\n// function countTasks() {}\r\n\r\nconsole.log(\"EMPTY TASKS\", tasksSlice.value);\r\nif (tasksSlice.value.length > 0) {\r\n  notCompletedTasks.value = tasksSlice.value.tasks.filter(\r\n    (ob) => !ob.completed\r\n  ).length;\r\n}\r\nconsole.log(\"NOT COMPLETE TASKS\", notCompletedTasks.value);\r\n\r\nasync function loadTasks() {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:8000/task\", {\r\n      headers: authHeader(),\r\n    });\r\n    // working with response\r\n    const result = response.data;\r\n    for (const key of Object.keys(result)) {\r\n      tasks.value.push(result[key]);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nonMounted(() => {\r\n  console.log(\"Mounted\");\r\n  console.log(tasksSlice.value == null);\r\n  // updateList();\r\n  loadTasks(); //Load tasks from backend\r\n  console.log(\"tasks\", tasks.value);\r\n});\r\n\r\n// WATCHING TO-DO LIST TO DISPLAY/NOT DISPLAY\r\n// WATCHING TO-DO LIST TO DISPLAY # UNCOMPLETED TASKS\r\n\r\n// WORKING WITH CALENDAR\r\n\r\n// custom function to return date in DD month-long YYYY format\r\nfunction formatDate(dateInput) {\r\n  return dateInput.toLocaleDateString(\"en-US\", {\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    day: \"numeric\",\r\n  });\r\n}\r\n\r\n// clear invalid input - to be used at blur\r\nfunction clearInvalidInput() {\r\n  invalidInput.value = false;\r\n}\r\nconst handleDate = (modelData) => {\r\n  date.value = modelData.toISOString().slice(0, 10);\r\n  // getting new slice based on picked date\r\n  tasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === date.value)[0];\r\n  display.value = true;\r\n\r\n  // creating empty array if there no tasks on picked date\r\n  if (!tasksSlice.value) {\r\n    tasksSlice.value = ref([]);\r\n    display.value = false;\r\n  }\r\n};\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\n\r\nfunction applyEditChanges(element) {\r\n  if (editedText.value) {\r\n    tasksSlice.value.tasks.forEach((el, idx) => {\r\n      if (element.task_id === el.task_id) {\r\n        tasksSlice.value.tasks[idx].text = editedText.value;\r\n      }\r\n    });\r\n  }\r\n}\r\nconsole.log(\"tasks:\", tasksSlice.value.tasks);\r\n\r\n// make SELECTED paragraph tag editable\r\nfunction makeEditable(element) {\r\n  tasksSlice.value.tasks.forEach((el, idx) => {\r\n    if (element.task_id == el.task_id) {\r\n      tasksSlice.value.tasks[idx].editable =\r\n        !tasksSlice.value.tasks[idx].editable;\r\n      console.log(idx, tasksSlice.value.tasks[idx]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTask() {\r\n  if (enteredText.value !== \"\") {\r\n    // add date if empty object\r\n    if (!(\"date\" in tasksSlice.value)) {\r\n      tasksSlice.value = { date: date.value, tasks: [] };\r\n    }\r\n    tasksSlice.value.tasks.push({\r\n      text: enteredText.value,\r\n      priority: tasksSlice.value.tasks.length + 1,\r\n      checked: false,\r\n      completed: false,\r\n      task_id: (Math.random() + 1).toString(36).substring(7),\r\n    });\r\n    enteredText.value = \"\";\r\n    display.value = true;\r\n    tasksList.push(tasksSlice.value);\r\n  } else {\r\n    invalidInput.value = true;\r\n  }\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  tasksSlice.value.tasks.forEach((element, index) => {\r\n    tasksSlice.value.tasks[index].priority = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = tasksSlice.value.tasks.indexOf(element);\r\n  tasksSlice.value.tasks[index].completed =\r\n    !tasksSlice.value.tasks[index].completed;\r\n}\r\n// Deleting specific task\r\n\r\nfunction deleteTask(element) {\r\n  let index = tasksSlice.value.tasks.indexOf(element);\r\n  tasksSlice.value.tasks.splice(index, 1);\r\n  if (tasksSlice.value.tasks.length === 0) {\r\n    display.value = false;\r\n  }\r\n  updateList();\r\n}\r\n</script>\r\n\r\n<style>\r\n/* STYLING CALENDAR */\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light {\r\n  background-color: transparent;\r\n  flex-grow: 1;\r\n  margin: 10px 10px;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar_header {\r\n  width: 100%;\r\n}\r\n#app\r\n  > div\r\n  > div.grid-item-calendar\r\n  > div\r\n  > div.dp__menu.dp__relative.dp__theme_light\r\n  > div\r\n  > div\r\n  > div:nth-child(1)\r\n  > div\r\n  > div.dp__calendar\r\n  > div\r\n  > div\r\n  > div.dp__calendar {\r\n  width: 100%;\r\n}\r\n</style>\r\n<style scoped>\r\n* {\r\n  font-family: \"Kalam\", cursive;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n.form-control {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-input {\r\n  width: 80%;\r\n  margin-left: 30px;\r\n  margin-right: 10px;\r\n  line-height: 25px;\r\n  font-size: 18px;\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n}\r\n\r\n.no-tasks {\r\n  height: 100px;\r\n  justify-content: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 60px 1fr 60px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background: skyblue;\r\n  /* making HEADER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.calendar {\r\n  margin-top: 10px;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background: lightblue;\r\n  /* making FOOTER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n  background: lightgreen;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  background: lightsteelblue;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 1fr 50px;\r\n  }\r\n  header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  footer {\r\n    grid-row: 4/5;\r\n  }\r\n  .form-control {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 60px;\r\n  }\r\n  .button-74 {\r\n    width: 90px;\r\n    flex-shrink: 0;\r\n    margin-top: 10px;\r\n    margin-right: 40px;\r\n  }\r\n}\r\n\r\n/* TO-DO HEADINGS WITH FLEXBOX */\r\n\r\n.flex-headers {\r\n  display: flex;\r\n  background-color: rgb(97, 213, 136);\r\n  margin: 0px 10px;\r\n  font-size: 14px;\r\n  padding: 5px 0px;\r\n}\r\n.header-number {\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  flex-basis: 20px;\r\n}\r\n.header-text {\r\n  flex-grow: 1;\r\n}\r\n\r\n.header-edit,\r\n.header-delete {\r\n  margin-right: 5px;\r\n}\r\n.header-completed {\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  gap: 5px;\r\n}\r\n.flex-text {\r\n  background: lightgray;\r\n  flex: 1;\r\n}\r\n\r\n.flex-id {\r\n  flex-basis: 15px;\r\n}\r\n.flex-id p {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Change border of the text if edit is selected*/\r\n\r\n.editSelectedBorder {\r\n  border: 1px solid orange;\r\n}\r\n.flex-buttons {\r\n  background: lightyellow;\r\n  flex-basis: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.delete-icon:hover {\r\n  color: #9b4848;\r\n}\r\n\r\n/* CHECKBOX */\r\n.check-icon {\r\n  margin-left: 15px;\r\n  color: #b04b4b;\r\n  font-size: 26px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n  margin-top: 5px;\r\n}\r\n\r\n.isChecked {\r\n  color: green;\r\n}\r\n\r\n/* BUTTON */\r\n.button-74 {\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n  border-radius: 25px;\r\n  box-shadow: #422800 3px 3px 0 0;\r\n  color: #422800;\r\n  cursor: pointer;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  padding: 0 18px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  flex: 0;\r\n  margin-right: 15px;\r\n  flex-basis: 100px;\r\n}\r\n\r\n.button-74:hover {\r\n  background-color: #fff;\r\n}\r\n\r\n.button-74:active {\r\n  box-shadow: #422800 2px 2px 0 0;\r\n  transform: translate(2px, 2px);\r\n}\r\n\r\n.invalid-input {\r\n  color: #b04b4b;\r\n  margin-right: 50px;\r\n  font-weight: bold;\r\n}\r\n.task-status p {\r\n  display: inline-block;\r\n  margin-right: 30px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}