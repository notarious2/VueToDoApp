{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, watch, onMounted } from \"vue\";\nimport draggable from \"vuedraggable\";\nimport { formatDate } from \"@fullcalendar/core\";\nimport authHeader from \"@/components/services/auth-header\";\nimport axios from \"axios\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nexport default {\n  __name: 'TasksTemplate',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const today = formatDate(new Date(), {\n      month: \"long\",\n      year: \"numeric\",\n      day: \"numeric\"\n    });\n    const task = ref();\n    const tasks = ref([]);\n    const date = ref(today);\n    const editedText = ref(\"\");\n    const tasksList = reactive([{\n      date: date.value,\n      tasks: [{\n        text: \"BBB\",\n        priority: 1,\n        completed: false,\n        editable: false,\n        task_id: \"X12\"\n      }, {\n        text: \"CCC\",\n        priority: 2,\n        completed: true,\n        editable: false,\n        task_id: \"X123\"\n      }, {\n        text: \"CCC\",\n        priority: 3,\n        completed: false,\n        editable: false,\n        task_id: \"X1124\"\n      }, {\n        text: \"DDD\",\n        priority: 4,\n        completed: true,\n        editable: false,\n        task_id: \"X1sd\"\n      }, {\n        text: \"AAA\",\n        priority: 6,\n        completed: true,\n        editable: false,\n        task_id: \"X1sda\"\n      }]\n    }, {\n      date: \"1/1/2022\",\n      tasks: [{\n        text: \"XXX\",\n        id: 1,\n        completed: true,\n        editable: false\n      }, {\n        text: \"YYY\",\n        id: 2,\n        completed: false,\n        editable: false\n      }, {\n        text: \"ZZZ\",\n        id: 3,\n        completed: true,\n        editable: false\n      }, {\n        text: \"WWW\",\n        id: 3,\n        completed: true,\n        editable: false\n      }, {\n        text: \"RRR\",\n        id: 5,\n        completed: true,\n        editable: false\n      }]\n    }]); // Getting array for specific date\n\n    const tasksSlice = ref([]);\n    tasksSlice.value = tasksList.filter(arr => arr[\"date\"] === date.value)[0];\n    console.log(\"result\", tasksSlice.value);\n    const myArray = reactive([{\n      text: \"AAA\",\n      id: 1,\n      completed: true,\n      editable: false\n    }, {\n      text: \"BBB\",\n      id: 2,\n      completed: false,\n      editable: false\n    }, {\n      text: \"CCC\",\n      id: 3,\n      completed: true,\n      editable: false\n    }, {\n      text: \"CCC\",\n      id: 3,\n      completed: true,\n      editable: false\n    }, {\n      text: \"DDD\",\n      id: 5,\n      completed: true,\n      editable: false\n    }]); // Ref for calendar in the DOM\n\n    const calendar = ref(); // Count the number of completed tasks\n\n    const notCompletedTasks = ref(myArray.filter(ob => !ob.completed).length); // To display if there are tasks\n\n    const display = myArray.length > 0 ? ref(true) : ref(false);\n    const calendarOptions = {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      dateClick: handleDateClick,\n      // events: [\n      //   { title: \"not done: \" + notCompletedTasks.value, date: \"2022-10-06\" },\n      //   { title: \"not done: 3\", date: \"2022-10-07\" },\n      // ],\n      // eventColor: \"transparent\",\n      // eventTextColor: \"red\",\n      height: \"auto\",\n      selectable: true\n    }; // Function to Load Tasks\n\n    async function loadTasks() {\n      try {\n        const response = await axios.get(\"http://localhost:8000/task\", {\n          headers: authHeader()\n        }); // working with response\n\n        const result = response.data;\n\n        for (const key of Object.keys(result)) {\n          tasks.value.push(result[key]);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    onMounted(() => {\n      console.log(\"Mounted\");\n      loadTasks();\n      console.log(\"tasks\", tasks.value);\n    }); // onMounted(() => {\n    //   let calendarApi = ref(calendar.value.getApi());\n    //   calendarApi.value.refetchEvents();\n    // });\n    // WATCHING TO-DO LIST TO DISPLAY/NOT DISPLAY\n\n    watch(myArray, function () {\n      if (myArray.length > 0) {\n        display.value = true;\n      } else {\n        display.value = false;\n      }\n    }); // WATCHING TO-DO LIST TO DISPLAY # UNCOMPLETED TASKS\n\n    watch(myArray, function () {\n      notCompletedTasks.value = myArray.filter(ob => ob.completed).length;\n    }); // WORKING WITH CALENDAR\n\n    function handleDateClick(arg) {\n      // alert(\"date click!\" + arg.dateStr);\n      date.value = formatDate(arg.date, {\n        month: \"long\",\n        year: \"numeric\",\n        day: \"numeric\"\n      });\n    } // listen to input inside edited paragraph text\n\n\n    function editText(event) {\n      editedText.value = event.target.innerText;\n    } // Apply above changes at blur\n\n\n    function applyEditChanges(element) {\n      if (editedText.value) {\n        myArray.forEach((el, idx) => {\n          if (element.id === el.id) {\n            myArray[idx].text = editedText.value;\n          }\n        });\n      }\n    }\n\n    console.log(\"tasks:\", tasksSlice.value.tasks); // make SELECTED paragraph tag editable\n\n    function makeEditable(element) {\n      tasksSlice.value.tasks.forEach((el, idx) => {\n        if (element.task_id == el.task_id) {\n          tasksSlice.value.tasks[idx].editable = !tasksSlice.value.tasks[idx].editable;\n          console.log(idx, tasksSlice.value.tasks[idx]);\n        }\n      });\n    }\n\n    function addTask() {\n      myArray.push({\n        text: task.value,\n        id: myArray.length + 1,\n        checked: false\n      });\n      task.value = \"\";\n    } // update tasks index/id on change - on drag\n\n\n    function updateList() {\n      tasksSlice.value.tasks.forEach((element, index) => {\n        tasksSlice.value.tasks[index].priority = index + 1;\n      });\n    } // Checking or unchecking specific object in an array\n\n\n    function checkUncheck(element) {\n      let index = tasksSlice.value.tasks.indexOf(element);\n      tasksSlice.value.tasks[index].completed = !tasksSlice.value.tasks[index].completed;\n    } // Deleting specific task\n\n\n    function deleteTask(element) {\n      let index = tasksSlice.value.tasks.indexOf(element);\n      tasksSlice.value.tasks.splice(index, 1);\n      updateList();\n    }\n\n    const __returned__ = {\n      today,\n      task,\n      tasks,\n      date,\n      editedText,\n      tasksList,\n      tasksSlice,\n      myArray,\n      calendar,\n      notCompletedTasks,\n      display,\n      calendarOptions,\n      loadTasks,\n      handleDateClick,\n      editText,\n      applyEditChanges,\n      makeEditable,\n      addTask,\n      updateList,\n      checkUncheck,\n      deleteTask,\n      reactive,\n      ref,\n      watch,\n      onMounted,\n      draggable,\n      formatDate,\n      authHeader,\n      axios,\n      FullCalendar,\n      dayGridPlugin,\n      interactionPlugin\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AA+EA,SAASA,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,SAA/B,QAAgD,KAAhD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;;;;;;;IAEA,MAAMC,KAAK,GAAGN,UAAU,CAAC,IAAIO,IAAJ,EAAD,EAAa;MACnCC,KAAK,EAAE,MAD4B;MAEnCC,IAAI,EAAE,SAF6B;MAGnCC,GAAG,EAAE;IAH8B,CAAb,CAAxB;IAMA,MAAMC,IAAI,GAAGf,GAAG,EAAhB;IAEA,MAAMgB,KAAK,GAAGhB,GAAG,CAAC,EAAD,CAAjB;IAEA,MAAMiB,IAAI,GAAGjB,GAAG,CAACU,KAAD,CAAhB;IAEA,MAAMQ,UAAU,GAAGlB,GAAG,CAAC,EAAD,CAAtB;IAEA,MAAMmB,SAAS,GAAGpB,QAAQ,CAAC,CACzB;MACEkB,IAAI,EAAEA,IAAI,CAACG,KADb;MAEEJ,KAAK,EAAE,CACL;QACEK,IAAI,EAAE,KADR;QAEEC,QAAQ,EAAE,CAFZ;QAGEC,SAAS,EAAE,KAHb;QAIEC,QAAQ,EAAE,KAJZ;QAKEC,OAAO,EAAE;MALX,CADK,EAQL;QACEJ,IAAI,EAAE,KADR;QAEEC,QAAQ,EAAE,CAFZ;QAGEC,SAAS,EAAE,IAHb;QAIEC,QAAQ,EAAE,KAJZ;QAKEC,OAAO,EAAE;MALX,CARK,EAeL;QACEJ,IAAI,EAAE,KADR;QAEEC,QAAQ,EAAE,CAFZ;QAGEC,SAAS,EAAE,KAHb;QAIEC,QAAQ,EAAE,KAJZ;QAKEC,OAAO,EAAE;MALX,CAfK,EAsBL;QACEJ,IAAI,EAAE,KADR;QAEEC,QAAQ,EAAE,CAFZ;QAGEC,SAAS,EAAE,IAHb;QAIEC,QAAQ,EAAE,KAJZ;QAKEC,OAAO,EAAE;MALX,CAtBK,EA6BL;QACEJ,IAAI,EAAE,KADR;QAEEC,QAAQ,EAAE,CAFZ;QAGEC,SAAS,EAAE,IAHb;QAIEC,QAAQ,EAAE,KAJZ;QAKEC,OAAO,EAAE;MALX,CA7BK;IAFT,CADyB,EAyCzB;MACER,IAAI,EAAE,UADR;MAEED,KAAK,EAAE,CACL;QAAEK,IAAI,EAAE,KAAR;QAAeK,EAAE,EAAE,CAAnB;QAAsBH,SAAS,EAAE,IAAjC;QAAuCC,QAAQ,EAAE;MAAjD,CADK,EAEL;QAAEH,IAAI,EAAE,KAAR;QAAeK,EAAE,EAAE,CAAnB;QAAsBH,SAAS,EAAE,KAAjC;QAAwCC,QAAQ,EAAE;MAAlD,CAFK,EAGL;QAAEH,IAAI,EAAE,KAAR;QAAeK,EAAE,EAAE,CAAnB;QAAsBH,SAAS,EAAE,IAAjC;QAAuCC,QAAQ,EAAE;MAAjD,CAHK,EAIL;QAAEH,IAAI,EAAE,KAAR;QAAeK,EAAE,EAAE,CAAnB;QAAsBH,SAAS,EAAE,IAAjC;QAAuCC,QAAQ,EAAE;MAAjD,CAJK,EAKL;QAAEH,IAAI,EAAE,KAAR;QAAeK,EAAE,EAAE,CAAnB;QAAsBH,SAAS,EAAE,IAAjC;QAAuCC,QAAQ,EAAE;MAAjD,CALK;IAFT,CAzCyB,CAAD,CAA1B,EAoDA;;IACA,MAAMG,UAAU,GAAG3B,GAAG,CAAC,EAAD,CAAtB;IAEA2B,UAAU,CAACP,KAAX,GAAmBD,SAAS,CAACS,MAAV,CAAkBC,GAAD,IAASA,GAAG,CAAC,MAAD,CAAH,KAAgBZ,IAAI,CAACG,KAA/C,EAAsD,CAAtD,CAAnB;IAEAU,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,UAAU,CAACP,KAAjC;IAEA,MAAMY,OAAO,GAAGjC,QAAQ,CAAC,CACvB;MAAEsB,IAAI,EAAE,KAAR;MAAeK,EAAE,EAAE,CAAnB;MAAsBH,SAAS,EAAE,IAAjC;MAAuCC,QAAQ,EAAE;IAAjD,CADuB,EAEvB;MAAEH,IAAI,EAAE,KAAR;MAAeK,EAAE,EAAE,CAAnB;MAAsBH,SAAS,EAAE,KAAjC;MAAwCC,QAAQ,EAAE;IAAlD,CAFuB,EAGvB;MAAEH,IAAI,EAAE,KAAR;MAAeK,EAAE,EAAE,CAAnB;MAAsBH,SAAS,EAAE,IAAjC;MAAuCC,QAAQ,EAAE;IAAjD,CAHuB,EAIvB;MAAEH,IAAI,EAAE,KAAR;MAAeK,EAAE,EAAE,CAAnB;MAAsBH,SAAS,EAAE,IAAjC;MAAuCC,QAAQ,EAAE;IAAjD,CAJuB,EAKvB;MAAEH,IAAI,EAAE,KAAR;MAAeK,EAAE,EAAE,CAAnB;MAAsBH,SAAS,EAAE,IAAjC;MAAuCC,QAAQ,EAAE;IAAjD,CALuB,CAAD,CAAxB,EAQA;;IACA,MAAMS,QAAQ,GAAGjC,GAAG,EAApB,EAEA;;IACA,MAAMkC,iBAAiB,GAAGlC,GAAG,CAACgC,OAAO,CAACJ,MAAR,CAAgBO,EAAD,IAAQ,CAACA,EAAE,CAACZ,SAA3B,EAAsCa,MAAvC,CAA7B,EAEA;;IACA,MAAMC,OAAO,GAAGL,OAAO,CAACI,MAAR,GAAiB,CAAjB,GAAqBpC,GAAG,CAAC,IAAD,CAAxB,GAAiCA,GAAG,CAAC,KAAD,CAApD;IAEA,MAAMsC,eAAe,GAAG;MACtBC,OAAO,EAAE,CAAC/B,aAAD,EAAgBC,iBAAhB,CADa;MAEtB+B,WAAW,EAAE,cAFS;MAGtBC,SAAS,EAAEC,eAHW;MAItB;MACA;MACA;MACA;MACA;MACA;MACAC,MAAM,EAAE,MAVc;MAWtBC,UAAU,EAAE;IAXU,CAAxB,EAaA;;IACA,eAAeC,SAAf,GAA2B;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMxC,KAAK,CAACyC,GAAN,CAAU,4BAAV,EAAwC;UAC7DC,OAAO,EAAE3C,UAAU;QAD0C,CAAxC,CAAvB,CADE,CAIF;;QACA,MAAM4C,MAAM,GAAGH,QAAQ,CAACI,IAAxB;;QACA,KAAK,MAAMC,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAlB,EAAuC;UACrCjC,KAAK,CAACI,KAAN,CAAYkC,IAAZ,CAAiBL,MAAM,CAACE,GAAD,CAAvB;QACD;MACF,CATD,CASE,OAAOI,GAAP,EAAY;QACZzB,OAAO,CAACC,GAAR,CAAYwB,GAAZ;MACD;IACF;;IACDrD,SAAS,CAAC,MAAM;MACd4B,OAAO,CAACC,GAAR,CAAY,SAAZ;MACAc,SAAS;MACTf,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBf,KAAK,CAACI,KAA3B;IACD,CAJQ,CAAT,EAKA;IACA;IACA;IACA;IAEA;;IACAnB,KAAK,CAAC+B,OAAD,EAAU,YAAY;MACzB,IAAIA,OAAO,CAACI,MAAR,GAAiB,CAArB,EAAwB;QACtBC,OAAO,CAACjB,KAAR,GAAgB,IAAhB;MACD,CAFD,MAEO;QACLiB,OAAO,CAACjB,KAAR,GAAgB,KAAhB;MACD;IACF,CANI,CAAL,EAQA;;IACAnB,KAAK,CAAC+B,OAAD,EAAU,YAAY;MACzBE,iBAAiB,CAACd,KAAlB,GAA0BY,OAAO,CAACJ,MAAR,CAAgBO,EAAD,IAAQA,EAAE,CAACZ,SAA1B,EAAqCa,MAA/D;IACD,CAFI,CAAL,EAGA;;IAEA,SAASM,eAAT,CAAyBc,GAAzB,EAA8B;MAC5B;MACAvC,IAAI,CAACG,KAAL,GAAahB,UAAU,CAACoD,GAAG,CAACvC,IAAL,EAAW;QAChCL,KAAK,EAAE,MADyB;QAEhCC,IAAI,EAAE,SAF0B;QAGhCC,GAAG,EAAE;MAH2B,CAAX,CAAvB;IAKD,EAED;;;IACA,SAAS2C,QAAT,CAAkBC,KAAlB,EAAyB;MACvBxC,UAAU,CAACE,KAAX,GAAmBsC,KAAK,CAACC,MAAN,CAAaC,SAAhC;IACD,EAED;;;IAEA,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;MACjC,IAAI5C,UAAU,CAACE,KAAf,EAAsB;QACpBY,OAAO,CAAC+B,OAAR,CAAgB,CAACC,EAAD,EAAKC,GAAL,KAAa;UAC3B,IAAIH,OAAO,CAACpC,EAAR,KAAesC,EAAE,CAACtC,EAAtB,EAA0B;YACxBM,OAAO,CAACiC,GAAD,CAAP,CAAa5C,IAAb,GAAoBH,UAAU,CAACE,KAA/B;UACD;QACF,CAJD;MAKD;IACF;;IACDU,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,UAAU,CAACP,KAAX,CAAiBJ,KAAvC,GAEA;;IACA,SAASkD,YAAT,CAAsBJ,OAAtB,EAA+B;MAC7BnC,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuB+C,OAAvB,CAA+B,CAACC,EAAD,EAAKC,GAAL,KAAa;QAC1C,IAAIH,OAAO,CAACrC,OAAR,IAAmBuC,EAAE,CAACvC,OAA1B,EAAmC;UACjCE,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuBiD,GAAvB,EAA4BzC,QAA5B,GACE,CAACG,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuBiD,GAAvB,EAA4BzC,QAD/B;UAEAM,OAAO,CAACC,GAAR,CAAYkC,GAAZ,EAAiBtC,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuBiD,GAAvB,CAAjB;QACD;MACF,CAND;IAOD;;IAED,SAASE,OAAT,GAAmB;MACjBnC,OAAO,CAACsB,IAAR,CAAa;QACXjC,IAAI,EAAEN,IAAI,CAACK,KADA;QAEXM,EAAE,EAAEM,OAAO,CAACI,MAAR,GAAiB,CAFV;QAGXgC,OAAO,EAAE;MAHE,CAAb;MAKArD,IAAI,CAACK,KAAL,GAAa,EAAb;IACD,EACD;;;IACA,SAASiD,UAAT,GAAsB;MACpB1C,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuB+C,OAAvB,CAA+B,CAACD,OAAD,EAAUQ,KAAV,KAAoB;QACjD3C,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuBsD,KAAvB,EAA8BhD,QAA9B,GAAyCgD,KAAK,GAAG,CAAjD;MACD,CAFD;IAGD,EAED;;;IACA,SAASC,YAAT,CAAsBT,OAAtB,EAA+B;MAC7B,IAAIQ,KAAK,GAAG3C,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuBwD,OAAvB,CAA+BV,OAA/B,CAAZ;MACAnC,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuBsD,KAAvB,EAA8B/C,SAA9B,GACE,CAACI,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuBsD,KAAvB,EAA8B/C,SADjC;IAED,EACD;;;IAEA,SAASkD,UAAT,CAAoBX,OAApB,EAA6B;MAC3B,IAAIQ,KAAK,GAAG3C,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuBwD,OAAvB,CAA+BV,OAA/B,CAAZ;MACAnC,UAAU,CAACP,KAAX,CAAiBJ,KAAjB,CAAuB0D,MAAvB,CAA8BJ,KAA9B,EAAqC,CAArC;MACAD,UAAU;IACX","names":["reactive","ref","watch","onMounted","draggable","formatDate","authHeader","axios","FullCalendar","dayGridPlugin","interactionPlugin","today","Date","month","year","day","task","tasks","date","editedText","tasksList","value","text","priority","completed","editable","task_id","id","tasksSlice","filter","arr","console","log","myArray","calendar","notCompletedTasks","ob","length","display","calendarOptions","plugins","initialView","dateClick","handleDateClick","height","selectable","loadTasks","response","get","headers","result","data","key","Object","keys","push","err","arg","editText","event","target","innerText","applyEditChanges","element","forEach","el","idx","makeEditable","addTask","checked","updateList","index","checkUncheck","indexOf","deleteTask","splice"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/pages/TasksTemplate.vue"],"sourcesContent":["<template>\r\n  <div class=\"grid-container\">\r\n    <header>HEADER GOES HERE</header>\r\n    <div class=\"grid-item-todo\">\r\n      <h1>{{ tasksSlice.date }}</h1>\r\n      <div v-if=\"!display\" class=\"no-tasks\">No Tasks to Display</div>\r\n      <div v-else class=\"flex-headers\">\r\n        <div class=\"header-number\">#</div>\r\n        <div class=\"header-text\">Description</div>\r\n        <div class=\"header-edit\">Edit</div>\r\n        <div class=\"header-delete\">Del.</div>\r\n        <div class=\"header-completed\">Status</div>\r\n      </div>\r\n      <draggable\r\n        :list=\"tasksSlice.tasks\"\r\n        item-key=\"task_id\"\r\n        @change=\"updateList\"\r\n      >\r\n        <template #item=\"{ element }\">\r\n          <div class=\"flexbox\">\r\n            <div class=\"flex-id\">\r\n              <p>{{ element.priority }}</p>\r\n            </div>\r\n            <div\r\n              class=\"flex-text\"\r\n              :class=\"{ editSelectedBorder: element.editable }\"\r\n            >\r\n              <p\r\n                :contenteditable=\"element.editable\"\r\n                @input=\"editText\"\r\n                @blur=\"applyEditChanges(element)\"\r\n              >\r\n                {{ element.text }}\r\n              </p>\r\n            </div>\r\n            <div class=\"flex-buttons\">\r\n              <font-awesome-icon\r\n                icon=\"fas fa-pen\"\r\n                class=\"edit-icon\"\r\n                :class=\"{ editSelected: element.editable }\"\r\n                @click=\"makeEditable(element)\"\r\n              />\r\n              <font-awesome-icon\r\n                @click=\"deleteTask(element)\"\r\n                icon=\"fas\r\n              fa-trash\"\r\n                class=\"delete-icon\"\r\n              />\r\n              <font-awesome-icon\r\n                icon=\"fas fa-check\"\r\n                class=\"check-icon\"\r\n                :class=\"{ isChecked: element.completed }\"\r\n                :id=\"element.id\"\r\n                v-model=\"element.completed\"\r\n                @click=\"checkUncheck(element)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </draggable>\r\n      <form class=\"form-control\" @submit.prevent=\"addTask\">\r\n        <input class=\"task-input\" v-model=\"task\" type=\"text\" />\r\n        <button class=\"button-74\">add task</button>\r\n      </form>\r\n    </div>\r\n    <div class=\"grid-item-calendar\">\r\n      <FullCalendar\r\n        :options=\"calendarOptions\"\r\n        ref=\"calendar\"\r\n        class=\"calendar\"\r\n      />\r\n    </div>\r\n    <footer>\r\n      <p>FOOTER GOES HERE</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, watch, onMounted } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nimport { formatDate } from \"@fullcalendar/core\";\r\n\r\nimport authHeader from \"@/components/services/auth-header\";\r\nimport axios from \"axios\";\r\n\r\nimport FullCalendar from \"@fullcalendar/vue3\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nconst today = formatDate(new Date(), {\r\n  month: \"long\",\r\n  year: \"numeric\",\r\n  day: \"numeric\",\r\n});\r\n\r\nconst task = ref();\r\n\r\nconst tasks = ref([]);\r\n\r\nconst date = ref(today);\r\n\r\nconst editedText = ref(\"\");\r\n\r\nconst tasksList = reactive([\r\n  {\r\n    date: date.value,\r\n    tasks: [\r\n      {\r\n        text: \"BBB\",\r\n        priority: 1,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X12\",\r\n      },\r\n      {\r\n        text: \"CCC\",\r\n        priority: 2,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X123\",\r\n      },\r\n      {\r\n        text: \"CCC\",\r\n        priority: 3,\r\n        completed: false,\r\n        editable: false,\r\n        task_id: \"X1124\",\r\n      },\r\n      {\r\n        text: \"DDD\",\r\n        priority: 4,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sd\",\r\n      },\r\n      {\r\n        text: \"AAA\",\r\n        priority: 6,\r\n        completed: true,\r\n        editable: false,\r\n        task_id: \"X1sda\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    date: \"1/1/2022\",\r\n    tasks: [\r\n      { text: \"XXX\", id: 1, completed: true, editable: false },\r\n      { text: \"YYY\", id: 2, completed: false, editable: false },\r\n      { text: \"ZZZ\", id: 3, completed: true, editable: false },\r\n      { text: \"WWW\", id: 3, completed: true, editable: false },\r\n      { text: \"RRR\", id: 5, completed: true, editable: false },\r\n    ],\r\n  },\r\n]);\r\n// Getting array for specific date\r\nconst tasksSlice = ref([]);\r\n\r\ntasksSlice.value = tasksList.filter((arr) => arr[\"date\"] === date.value)[0];\r\n\r\nconsole.log(\"result\", tasksSlice.value);\r\n\r\nconst myArray = reactive([\r\n  { text: \"AAA\", id: 1, completed: true, editable: false },\r\n  { text: \"BBB\", id: 2, completed: false, editable: false },\r\n  { text: \"CCC\", id: 3, completed: true, editable: false },\r\n  { text: \"CCC\", id: 3, completed: true, editable: false },\r\n  { text: \"DDD\", id: 5, completed: true, editable: false },\r\n]);\r\n\r\n// Ref for calendar in the DOM\r\nconst calendar = ref();\r\n\r\n// Count the number of completed tasks\r\nconst notCompletedTasks = ref(myArray.filter((ob) => !ob.completed).length);\r\n\r\n// To display if there are tasks\r\nconst display = myArray.length > 0 ? ref(true) : ref(false);\r\n\r\nconst calendarOptions = {\r\n  plugins: [dayGridPlugin, interactionPlugin],\r\n  initialView: \"dayGridMonth\",\r\n  dateClick: handleDateClick,\r\n  // events: [\r\n  //   { title: \"not done: \" + notCompletedTasks.value, date: \"2022-10-06\" },\r\n  //   { title: \"not done: 3\", date: \"2022-10-07\" },\r\n  // ],\r\n  // eventColor: \"transparent\",\r\n  // eventTextColor: \"red\",\r\n  height: \"auto\",\r\n  selectable: true,\r\n};\r\n// Function to Load Tasks\r\nasync function loadTasks() {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:8000/task\", {\r\n      headers: authHeader(),\r\n    });\r\n    // working with response\r\n    const result = response.data;\r\n    for (const key of Object.keys(result)) {\r\n      tasks.value.push(result[key]);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nonMounted(() => {\r\n  console.log(\"Mounted\");\r\n  loadTasks();\r\n  console.log(\"tasks\", tasks.value);\r\n});\r\n// onMounted(() => {\r\n//   let calendarApi = ref(calendar.value.getApi());\r\n//   calendarApi.value.refetchEvents();\r\n// });\r\n\r\n// WATCHING TO-DO LIST TO DISPLAY/NOT DISPLAY\r\nwatch(myArray, function () {\r\n  if (myArray.length > 0) {\r\n    display.value = true;\r\n  } else {\r\n    display.value = false;\r\n  }\r\n});\r\n\r\n// WATCHING TO-DO LIST TO DISPLAY # UNCOMPLETED TASKS\r\nwatch(myArray, function () {\r\n  notCompletedTasks.value = myArray.filter((ob) => ob.completed).length;\r\n});\r\n// WORKING WITH CALENDAR\r\n\r\nfunction handleDateClick(arg) {\r\n  // alert(\"date click!\" + arg.dateStr);\r\n  date.value = formatDate(arg.date, {\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    day: \"numeric\",\r\n  });\r\n}\r\n\r\n// listen to input inside edited paragraph text\r\nfunction editText(event) {\r\n  editedText.value = event.target.innerText;\r\n}\r\n\r\n// Apply above changes at blur\r\n\r\nfunction applyEditChanges(element) {\r\n  if (editedText.value) {\r\n    myArray.forEach((el, idx) => {\r\n      if (element.id === el.id) {\r\n        myArray[idx].text = editedText.value;\r\n      }\r\n    });\r\n  }\r\n}\r\nconsole.log(\"tasks:\", tasksSlice.value.tasks);\r\n\r\n// make SELECTED paragraph tag editable\r\nfunction makeEditable(element) {\r\n  tasksSlice.value.tasks.forEach((el, idx) => {\r\n    if (element.task_id == el.task_id) {\r\n      tasksSlice.value.tasks[idx].editable =\r\n        !tasksSlice.value.tasks[idx].editable;\r\n      console.log(idx, tasksSlice.value.tasks[idx]);\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTask() {\r\n  myArray.push({\r\n    text: task.value,\r\n    id: myArray.length + 1,\r\n    checked: false,\r\n  });\r\n  task.value = \"\";\r\n}\r\n// update tasks index/id on change - on drag\r\nfunction updateList() {\r\n  tasksSlice.value.tasks.forEach((element, index) => {\r\n    tasksSlice.value.tasks[index].priority = index + 1;\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = tasksSlice.value.tasks.indexOf(element);\r\n  tasksSlice.value.tasks[index].completed =\r\n    !tasksSlice.value.tasks[index].completed;\r\n}\r\n// Deleting specific task\r\n\r\nfunction deleteTask(element) {\r\n  let index = tasksSlice.value.tasks.indexOf(element);\r\n  tasksSlice.value.tasks.splice(index, 1);\r\n  updateList();\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  font-family: \"Kalam\", cursive;\r\n}\r\nh1 {\r\n  text-align: center;\r\n}\r\n\r\n.form-control {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: space-between;\r\n}\r\n\r\n.task-input {\r\n  width: 80%;\r\n  margin-left: 30px;\r\n  margin-right: 10px;\r\n  line-height: 25px;\r\n  font-size: 18px;\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n}\r\n\r\n.no-tasks {\r\n  height: 100px;\r\n  justify-content: center;\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n}\r\n\r\n/* GENERAL PAGE LAYOUT WITH GRIDS */\r\n.grid-container {\r\n  min-height: 100vh;\r\n  display: grid;\r\n  grid-template-areas:\r\n    \"header header\"\r\n    \"todo calendar\"\r\n    \"footer footer\";\r\n  grid-template-rows: 60px 1fr 60px;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 10px;\r\n}\r\n\r\nheader {\r\n  grid-area: header;\r\n  background: skyblue;\r\n  /* making HEADER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.calendar {\r\n  margin-top: 10px;\r\n}\r\n\r\nfooter {\r\n  grid-area: footer;\r\n  background: lightblue;\r\n  /* making FOOTER inside of the grid flexbox */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.grid-item-todo {\r\n  grid-area: todo;\r\n  background: lightgreen;\r\n}\r\n.grid-item-calendar {\r\n  grid-area: calendar;\r\n  background: lightsteelblue;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .grid-container {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 50px 1fr 1fr 50px;\r\n  }\r\n  header {\r\n    grid-row: 1;\r\n  }\r\n  .grid-item-todo {\r\n    grid-row: 2;\r\n    grid-column: 1;\r\n  }\r\n  .grid-item-calendar {\r\n    grid-row: 3;\r\n    grid-column: 1;\r\n  }\r\n  footer {\r\n    grid-row: 4/5;\r\n  }\r\n  .form-control {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .button-74 {\r\n    width: 90px;\r\n    flex-shrink: 0;\r\n    margin-top: 10px;\r\n    margin-right: 40px;\r\n  }\r\n}\r\n\r\n/* TO-DO HEADINGS WITH FLEXBOX */\r\n\r\n.flex-headers {\r\n  display: flex;\r\n  background-color: rgb(97, 213, 136);\r\n  margin: 0px 10px;\r\n  font-size: 14px;\r\n  padding: 5px 0px;\r\n}\r\n.header-number {\r\n  text-align: center;\r\n  justify-content: center;\r\n  align-content: center;\r\n  align-items: center;\r\n  flex-basis: 20px;\r\n}\r\n.header-text {\r\n  flex-grow: 1;\r\n}\r\n\r\n.header-edit,\r\n.header-delete {\r\n  margin-right: 5px;\r\n}\r\n.header-completed {\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n\r\n/* TO-DO INNER LAYOUT WITH FLEXBOX */\r\n\r\n.flexbox {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  gap: 5px;\r\n}\r\n.flex-text {\r\n  background: lightgray;\r\n  flex: 1;\r\n}\r\n\r\n.flex-id {\r\n  flex-basis: 15px;\r\n}\r\n.flex-id p {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Change border of the text if edit is selected*/\r\n\r\n.editSelectedBorder {\r\n  border: 1px solid orange;\r\n}\r\n.flex-buttons {\r\n  background: lightyellow;\r\n  flex-basis: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.edit-icon {\r\n  font-size: 18px;\r\n}\r\n\r\n.delete-icon:hover {\r\n  color: #9b4848;\r\n}\r\n\r\n/* CHECKBOX */\r\n.check-icon {\r\n  margin-left: 15px;\r\n  color: #b04b4b;\r\n  font-size: 26px;\r\n}\r\n\r\n/* Make pen green if edit is selected*/\r\n\r\n.editSelected {\r\n  color: green;\r\n  margin-top: 5px;\r\n}\r\n\r\n.isChecked {\r\n  color: green;\r\n}\r\n\r\n/* BUTTON */\r\n.button-74 {\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n  border-radius: 25px;\r\n  box-shadow: #422800 3px 3px 0 0;\r\n  color: #422800;\r\n  cursor: pointer;\r\n  font-weight: 300;\r\n  font-size: 16px;\r\n  padding: 0 18px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  flex: 0;\r\n  margin-right: 15px;\r\n  flex-basis: 100px;\r\n}\r\n\r\n.button-74:hover {\r\n  background-color: #fff;\r\n}\r\n\r\n.button-74:active {\r\n  box-shadow: #422800 2px 2px 0 0;\r\n  transform: translate(2px, 2px);\r\n}\r\n\r\n/* @media (min-width: 768px) {\r\n  .button-74 {\r\n    min-width: 120px;\r\n    padding: 0 25px;\r\n  }\r\n} */\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}