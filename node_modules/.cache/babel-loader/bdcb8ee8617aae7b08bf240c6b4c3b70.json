{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nexport default {\n  __name: 'TheRegistration',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const router = useRouter();\n    const name = ref(\"\");\n    const email = ref(\"\");\n    const username = ref(\"\");\n    const password = ref(\"\");\n    const passwordConfirmation = ref(\"\");\n    const showPassword = ref(\"\");\n    const passwordType = ref(\"password\");\n    const passwordsMatch = ref(false);\n\n    function toggleShow() {\n      showPassword.value = !showPassword.value;\n\n      if (showPassword.value) {\n        passwordType.value = \"text\";\n      } else {\n        passwordType.value = \"password\";\n      }\n    }\n\n    async function submitAuthDetails() {\n      const params = {\n        name: name.value,\n        email: email.value,\n        username: username.value,\n        password: password.value\n      };\n      await axios.post(\"http://localhost:8000/user\", params).then(response => {\n        console.log(response.data);\n        router.push({\n          path: \"/auth\"\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    watch([password, passwordConfirmation], () => {\n      if (passwordConfirmation.value !== password.value) {\n        passwordsMatch.value = false;\n      } else {\n        passwordsMatch.value = true;\n      }\n    });\n    const __returned__ = {\n      router,\n      name,\n      email,\n      username,\n      password,\n      passwordConfirmation,\n      showPassword,\n      passwordType,\n      passwordsMatch,\n      toggleShow,\n      submitAuthDetails,\n      ref,\n      watch,\n      useRouter,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AAkEA,SAASA,GAAT,EAAcC,KAAd,QAA2B,KAA3B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;IAEA,MAAMC,MAAM,GAAGF,SAAS,EAAxB;IAEA,MAAMG,IAAI,GAAGL,GAAG,CAAC,EAAD,CAAhB;IACA,MAAMM,KAAK,GAAGN,GAAG,CAAC,EAAD,CAAjB;IACA,MAAMO,QAAQ,GAAGP,GAAG,CAAC,EAAD,CAApB;IACA,MAAMQ,QAAQ,GAAGR,GAAG,CAAC,EAAD,CAApB;IACA,MAAMS,oBAAoB,GAAGT,GAAG,CAAC,EAAD,CAAhC;IACA,MAAMU,YAAY,GAAGV,GAAG,CAAC,EAAD,CAAxB;IACA,MAAMW,YAAY,GAAGX,GAAG,CAAC,UAAD,CAAxB;IACA,MAAMY,cAAc,GAAGZ,GAAG,CAAC,KAAD,CAA1B;;IAEA,SAASa,UAAT,GAAsB;MACpBH,YAAY,CAACI,KAAb,GAAqB,CAACJ,YAAY,CAACI,KAAnC;;MACA,IAAIJ,YAAY,CAACI,KAAjB,EAAwB;QACtBH,YAAY,CAACG,KAAb,GAAqB,MAArB;MACD,CAFD,MAEO;QACLH,YAAY,CAACG,KAAb,GAAqB,UAArB;MACD;IACF;;IACD,eAAeC,iBAAf,GAAmC;MACjC,MAAMC,MAAM,GAAG;QACbX,IAAI,EAAEA,IAAI,CAACS,KADE;QAEbR,KAAK,EAAEA,KAAK,CAACQ,KAFA;QAGbP,QAAQ,EAAEA,QAAQ,CAACO,KAHN;QAIbN,QAAQ,EAAEA,QAAQ,CAACM;MAJN,CAAf;MAMA,MAAMX,KAAK,CACRc,IADG,CACE,4BADF,EACgCD,MADhC,EAEHE,IAFG,CAEGC,QAAD,IAAc;QAClBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;QACAlB,MAAM,CAACmB,IAAP,CAAY;UAAEC,IAAI,EAAE;QAAR,CAAZ;MACD,CALG,EAMHC,KANG,CAMIC,KAAD,IAAW;QAChBN,OAAO,CAACC,GAAR,CAAYK,KAAZ;MACD,CARG,CAAN;IASD;;IAEDzB,KAAK,CAAC,CAACO,QAAD,EAAWC,oBAAX,CAAD,EAAmC,MAAM;MAC5C,IAAIA,oBAAoB,CAACK,KAArB,KAA+BN,QAAQ,CAACM,KAA5C,EAAmD;QACjDF,cAAc,CAACE,KAAf,GAAuB,KAAvB;MACD,CAFD,MAEO;QACLF,cAAc,CAACE,KAAf,GAAuB,IAAvB;MACD;IACF,CANI,CAAL","names":["ref","watch","useRouter","axios","router","name","email","username","password","passwordConfirmation","showPassword","passwordType","passwordsMatch","toggleShow","value","submitAuthDetails","params","post","then","response","console","log","data","push","path","catch","error"],"sources":["C:/Users/notar/Desktop/Udemy/todo_front/src/pages/TheRegistration.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"post-it\">\r\n      <form @submit.prevent=\"submitAuthDetails\">\r\n        <div class=\"container\">\r\n          <h1>Register</h1>\r\n          <div class=\"icon-div\">\r\n            <font-awesome-icon icon=\"fas fa-user\" class=\"fa-icons\" />\r\n            <input type=\"text\" placeholder=\"Name\" required v-model=\"name\" />\r\n          </div>\r\n          <div class=\"icon-div\">\r\n            <font-awesome-icon icon=\"far fa-envelope\" class=\"fa-icons\" />\r\n            <input type=\"text\" placeholder=\"Email\" required v-model=\"email\" />\r\n          </div>\r\n          <div class=\"icon-div\">\r\n            <font-awesome-icon icon=\"far fa-user\" class=\"fa-icons\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              required\r\n              v-model=\"username\"\r\n            />\r\n          </div>\r\n          <div class=\"icon-div\">\r\n            <font-awesome-icon icon=\"fas fa-key\" class=\"fa-icons\" />\r\n            <input\r\n              id=\"inline-input\"\r\n              :type=\"passwordType\"\r\n              placeholder=\"Password\"\r\n              v-model=\"password\"\r\n              required\r\n            />\r\n            <a id=\"icon\" @click=\"toggleShow\">\r\n              <font-awesome-icon\r\n                v-if=\"showPassword\"\r\n                :icon=\"['fas', 'fa-eye']\"\r\n              />\r\n              <font-awesome-icon v-else :icon=\"['fas', 'fa-eye-slash']\" />\r\n            </a>\r\n          </div>\r\n          <div class=\"icon-div\">\r\n            <font-awesome-icon\r\n              id=\"password-confirmation\"\r\n              icon=\"fas fa-unlock\"\r\n              class=\"fa-icons\"\r\n              :class=\"\r\n                passwordsMatch\r\n                  ? 'password-is-confirmed'\r\n                  : 'password-not-confirmed'\r\n              \"\r\n            />\r\n            <input\r\n              :type=\"passwordType\"\r\n              placeholder=\"Verify Password\"\r\n              v-model=\"passwordConfirmation\"\r\n              required\r\n            />\r\n          </div>\r\n          <button class=\"button-74\" type=\"submit\">Register</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nconst router = useRouter();\r\n\r\nconst name = ref(\"\");\r\nconst email = ref(\"\");\r\nconst username = ref(\"\");\r\nconst password = ref(\"\");\r\nconst passwordConfirmation = ref(\"\");\r\nconst showPassword = ref(\"\");\r\nconst passwordType = ref(\"password\");\r\nconst passwordsMatch = ref(false);\r\n\r\nfunction toggleShow() {\r\n  showPassword.value = !showPassword.value;\r\n  if (showPassword.value) {\r\n    passwordType.value = \"text\";\r\n  } else {\r\n    passwordType.value = \"password\";\r\n  }\r\n}\r\nasync function submitAuthDetails() {\r\n  const params = {\r\n    name: name.value,\r\n    email: email.value,\r\n    username: username.value,\r\n    password: password.value,\r\n  };\r\n  await axios\r\n    .post(\"http://localhost:8000/user\", params)\r\n    .then((response) => {\r\n      console.log(response.data);\r\n      router.push({ path: \"/auth\" });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nwatch([password, passwordConfirmation], () => {\r\n  if (passwordConfirmation.value !== password.value) {\r\n    passwordsMatch.value = false;\r\n  } else {\r\n    passwordsMatch.value = true;\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  font-family: \"Kalam\", cursive;\r\n}\r\n\r\n.password-is-confirmed {\r\n  color: green;\r\n}\r\n.password-not-confirmed {\r\n  color: red;\r\n}\r\n\r\n.container {\r\n  width: 200px;\r\n  margin: 50px auto;\r\n}\r\n\r\n#icon {\r\n  margin-right: 10px;\r\n}\r\n\r\n.fa-icons {\r\n  font-size: 18px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.icon-div {\r\n  display: flex;\r\n  flex-direction: row;\r\n  border: 1px solid #374669;\r\n  border-radius: 5px;\r\n  background: #fff;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  margin-top: 2px;\r\n}\r\n.icon-div input {\r\n  outline: none;\r\n  border: none;\r\n  background: none;\r\n  font-size: 1em;\r\n  padding: 0.5em;\r\n  color: inherit;\r\n  flex: auto 1 1;\r\n  width: 100%;\r\n  background: none;\r\n  background-color: transparent;\r\n}\r\n\r\n.post-it {\r\n  background: #fefabc;\r\n  padding: 30px;\r\n  font-family: \"Gloria Hallelujah\", cursive;\r\n  font-size: 15px;\r\n  color: #000;\r\n  width: 200px;\r\n  position: relative;\r\n  /* border-bottom-right-radius: 40px; */\r\n  box-shadow: 0px 4px 6px #333;\r\n  -moz-box-shadow: 0px 4px 6px #333;\r\n  -webkit-box-shadow: 0px 4px 6px #333;\r\n  border-radius: 5px;\r\n  border-bottom-right-radius: 30px;\r\n}\r\n.post-it::after {\r\n  content: \"\";\r\n  display: inline-block;\r\n  position: absolute;\r\n  width: 2.13em;\r\n  height: 2.13em;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: linear-gradient(-45deg, transparent 1.1em, #e3d842) bottom right;\r\n}\r\n\r\n.button-74 {\r\n  background-color: #fbeee0;\r\n  border: 2px solid #422800;\r\n  border-radius: 25px;\r\n  box-shadow: #422800 4px 4px 0 0;\r\n  color: #422800;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  padding: 0 18px;\r\n  line-height: 40px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  margin-top: 10px;\r\n}\r\n\r\n.button-74:hover {\r\n  background-color: #fff;\r\n}\r\n\r\n.button-74:active {\r\n  box-shadow: #422800 2px 2px 0 0;\r\n  transform: translate(2px, 2px);\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .button-74 {\r\n    min-width: 120px;\r\n    padding: 0 25px;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}