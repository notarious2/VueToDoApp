{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withModifiers as _withModifiers, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07345ca4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"list-item\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"date\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onSubmit\"];\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"text \", -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"add task\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode($setup[\"draggable\"], {\n    list: $setup.myArray,\n    onEnd: _ctx.endDrag,\n    \"item-key\": \"id\"\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createTextVNode(\" \" + _toDisplayString(element.id) + \" \" + _toDisplayString(element.name) + \" \", 1\n    /* TEXT */\n    ), _withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => element.completed = $event,\n      onClick: $event => $setup.checkUncheck(element)\n    }, null, 8\n    /* PROPS */\n    , _hoisted_3), [[_vModelCheckbox, element.completed]]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(element)\n    }, \"x\", 8\n    /* PROPS */\n    , _hoisted_4)])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\", \"onEnd\"]), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.addTask, [\"prevent\"])\n  }, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.task = $event),\n    type: \"text\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.task]]), _hoisted_7], 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_5)], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;;EAGWA,KAAK,EAAC;;;gEACTC,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ;AAAA;AAAR;;;;;;gEAaJA,oBAAoB,OAApB,EAAoB,IAApB,EAAO,OAAP,EAAY;AAAA;AAAZ;;gEAEAA,oBAAyB,QAAzB,EAAyB,IAAzB,EAAQ,UAAR,EAAgB;AAAA;AAAhB;;;6DAlBFC,aAcYC,mBAdZ,EAcY;IAdAC,IAAI,EAAED,cAcN;IAdgBE,KAAG,EAAEC,YAcrB;IAd8B,YAAS;EAcvC,CAdZ;IACaC,IAAI,WACb,CAUM;MAXWC;IAWX,CAVN,KADwB,CACxBP,oBAUM,KAVN,cAUM,CATJQ,UASI,mBATS,MAEbC,iBAAGF,OAAO,CAACG,EAAX,CAFa,GAEG,GAFH,GAEID,iBAAGF,OAAO,CAACI,IAAX,CAFJ,GAEsB,KACnC;IAAA;KAMI,kBANJX,oBAIE,OAJF,EAIE;MAHAY,IAAI,EAAC,UAGL;uCAFSL,OAAO,CAACM,YAASC,MAE1B;MADCC,OAAK,YAAEb,oBAAaK,OAAb;IACR,CAJF;;IAAA,kCAEWA,OAAO,CAACM,YAIf,EADJb,oBAA+C,QAA/C,EAA+C;MAAtCe,OAAK,YAAEb,kBAAWK,OAAX;IAA+B,CAA/C,EAAqC,GAArC,EAAsC;IAAA;IAAtC,EAAsCS,UAAtC,CACI,CAVN,CADwB,CAAX;;;;GADjB;;EAAA,sBAeAhB,oBAIO,MAJP,EAIO;IAJAiB,QAAM,iBAAUf,cAAV,EAAiB,WAAjB;EAIN,CAJP,GACEgB,4BACAlB,oBAAoC,OAApC,EAAoC;+DAApBE,cAAIY,OAAgB;IAAdF,IAAI,EAAC;EAAS,CAApC;;EAAA,kBAAgBV,gBAChBiB,WAHF;;EAAA","names":["class","_createElementVNode","_createVNode","$setup","list","onEnd","_ctx","item","element","_hoisted_2","_toDisplayString","id","name","type","completed","$event","onClick","_hoisted_4","onSubmit","_hoisted_6","_hoisted_7"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate2.vue"],"sourcesContent":["<template>\r\n  <draggable :list=\"myArray\" @end=\"endDrag\" item-key=\"id\">\r\n    <template #item=\"{ element }\">\r\n      <div class=\"list-item\">\r\n        <h1>date</h1>\r\n\r\n        {{ element.id }} {{ element.name }}\r\n        <input\r\n          type=\"checkbox\"\r\n          v-model=\"element.completed\"\r\n          @click=\"checkUncheck(element)\"\r\n        />\r\n        <button @click=\"deleteTask(element)\">x</button>\r\n      </div>\r\n    </template>\r\n  </draggable>\r\n  <form @submit.prevent=\"addTask\">\r\n    <label>text </label>\r\n    <input v-model=\"task\" type=\"text\" />\r\n    <button>add task</button>\r\n  </form>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\n\r\nconst task = ref();\r\n\r\nconst date = \"1/1/2022\";\r\n\r\nconst myArray = reactive([\r\n  { name: \"AAA\", id: 1, completed: true },\r\n  { name: \"BBB\", id: 2, completed: false },\r\n  { name: \"CCC\", id: 3, completed: false },\r\n  { name: \"DDD\", id: 4, completed: true },\r\n]);\r\n\r\nfunction addTask() {\r\n  myArray.push({\r\n    name: task.value,\r\n    id: myArray.length + 1,\r\n    checked: false,\r\n  });\r\n}\r\n\r\n// Checking or unchecking specific object in an array\r\nfunction checkUncheck(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray[index].completed = !myArray[index].completed;\r\n  console.log(myArray);\r\n}\r\n\r\nfunction deleteTask(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray.splice(index, 1);\r\n  console.log(myArray);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n  margin-left: 40px;\r\n}\r\n.list-item {\r\n  background-color: blanchedalmond;\r\n  padding: 2px 2px;\r\n  margin: 2px 2px;\r\n  width: 50%;\r\n  position: relative;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}