{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07345ca4\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"list-item\"\n};\nconst _hoisted_2 = {\n  contenteditable: \"\"\n};\nconst _hoisted_3 = [\"onUpdate:modelValue\"];\nconst _hoisted_4 = [\"onClick\", \"onTouchstart\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"draggable\"], {\n    list: $setup.myArray,\n    onEnd: _ctx.endDrag,\n    \"item-key\": \"id\"\n  }, {\n    item: _withCtx(({\n      element\n    }) => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"a\", _hoisted_2, _toDisplayString(element.id) + \" \" + _toDisplayString(element.name), 1\n    /* TEXT */\n    ), _withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => element.checked = $event\n    }, null, 8\n    /* PROPS */\n    , _hoisted_3), [[_vModelCheckbox, element.checked]]), _createElementVNode(\"button\", {\n      onClick: $event => $setup.deleteTask(element),\n      onTouchstart: $event => $setup.deleteTask(element)\n    }, \" remove \", 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_4)])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"list\", \"onEnd\"]);\n}","map":{"version":3,"mappings":";;;;;EAGWA,KAAK,EAAC;;;EACNC,eAAe,EAAC;;;;;uBAHzBC,aAUYC,mBAVZ,EAUY;IAVAC,IAAI,EAAED,cAUN;IAVgBE,KAAG,EAAEC,YAUrB;IAV8B,YAAS;EAUvC,CAVZ;IACaC,IAAI,WACb,CAMM;MAPWC;IAOX,CANN,KADwB,CACxBC,oBAMM,KANN,cAMM,CALJA,oBAA6D,GAA7D,cAA6DC,iBAApCF,OAAO,CAACG,EAA4B,IAAvB,GAAuB,GAAtBD,iBAAGF,OAAO,CAACI,IAAX,CAAvC,EAAsD;IAAA;IAAtD,CAKI,kBAJJH,oBAAmD,OAAnD,EAAmD;MAA5CI,IAAI,EAAC,UAAuC;uCAAnBL,OAAO,CAACM,UAAOC;IAAI,CAAnD;;IAAA,kCAAgCP,OAAO,CAACM,UAIpC,EAHJL,oBAES,QAFT,EAES;MAFAO,OAAK,YAAEb,kBAAWK,OAAX,CAEP;MAF6BS,YAAU,YAAEd,kBAAWK,OAAX;IAEzC,CAFT,EAAuE,UAAvE,EAEA;IAAA;IAFA,EAEAU,UAFA,CAGI,CANN,CADwB,CAAX;;;;GADjB;;EAAA","names":["class","contenteditable","_createBlock","$setup","list","onEnd","_ctx","item","element","_createElementVNode","_toDisplayString","id","name","type","checked","$event","onClick","onTouchstart","_hoisted_4"],"sourceRoot":"","sources":["C:\\Users\\notar\\Desktop\\Udemy\\todo_front\\src\\pages\\TasksTemplate2.vue"],"sourcesContent":["<template>\r\n  <draggable :list=\"myArray\" @end=\"endDrag\" item-key=\"id\">\r\n    <template #item=\"{ element }\">\r\n      <div class=\"list-item\">\r\n        <a contenteditable=\"\">{{ element.id }} {{ element.name }}</a>\r\n        <input type=\"checkbox\" v-model=\"element.checked\" />\r\n        <button @click=\"deleteTask(element)\" @touchstart=\"deleteTask(element)\">\r\n          remove\r\n        </button>\r\n      </div>\r\n    </template>\r\n  </draggable>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive } from \"vue\";\r\nimport draggable from \"vuedraggable\";\r\nconst myArray = reactive([\r\n  { name: \"AAA\", id: 1, checked: \"false\" },\r\n  { name: \"BBB\", id: 2, checked: \"false\" },\r\n  { name: \"CCC\", id: 3, checked: \"false\" },\r\n  { name: \"DDD\", id: 4, checked: \"true\" },\r\n]);\r\n\r\nfunction deleteTask(element) {\r\n  let index = myArray.indexOf(element);\r\n  myArray.splice(index, 1);\r\n  console.log(myArray);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n  margin-left: 40px;\r\n}\r\n.list-item {\r\n  background-color: blanchedalmond;\r\n  padding: 2px 2px;\r\n  margin: 2px 2px;\r\n  width: 50%;\r\n  position: relative;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}